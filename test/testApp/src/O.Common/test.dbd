menu(menuSimm) {
    choice(menuSimmNO, "NO")
    choice(menuSimmYES, "YES")
    choice(menuSimmRAW, "RAW")
}
menu(histogramCMD) {
    choice(histogramCMD_Read, "Read")
    choice(histogramCMD_Clear, "Clear")
    choice(histogramCMD_Start, "Start")
    choice(histogramCMD_Stop, "Stop")
}
menu(menuAlarmSevr) {
    choice(menuAlarmSevrNO_ALARM, "NO_ALARM")
    choice(menuAlarmSevrMINOR, "MINOR")
    choice(menuAlarmSevrMAJOR, "MAJOR")
    choice(menuAlarmSevrINVALID, "INVALID")
}
menu(calcoutINAV) {
    choice(calcoutINAV_EXT_NC, "Ext PV NC")
    choice(calcoutINAV_EXT, "Ext PV OK")
    choice(calcoutINAV_LOC, "Local PV")
    choice(calcoutINAV_CON, "Constant")
}
menu(menuPriority) {
    choice(menuPriorityLOW, "LOW")
    choice(menuPriorityMEDIUM, "MEDIUM")
    choice(menuPriorityHIGH, "HIGH")
}
menu(aaoPOST) {
    choice(aaoPOST_Always, "Always")
    choice(aaoPOST_OnChange, "On Change")
}
menu(menuAlarmStat) {
    choice(menuAlarmStatNO_ALARM, "NO_ALARM")
    choice(menuAlarmStatREAD, "READ")
    choice(menuAlarmStatWRITE, "WRITE")
    choice(menuAlarmStatHIHI, "HIHI")
    choice(menuAlarmStatHIGH, "HIGH")
    choice(menuAlarmStatLOLO, "LOLO")
    choice(menuAlarmStatLOW, "LOW")
    choice(menuAlarmStatSTATE, "STATE")
    choice(menuAlarmStatCOS, "COS")
    choice(menuAlarmStatCOMM, "COMM")
    choice(menuAlarmStatTIMEOUT, "TIMEOUT")
    choice(menuAlarmStatHWLIMIT, "HWLIMIT")
    choice(menuAlarmStatCALC, "CALC")
    choice(menuAlarmStatSCAN, "SCAN")
    choice(menuAlarmStatLINK, "LINK")
    choice(menuAlarmStatSOFT, "SOFT")
    choice(menuAlarmStatBAD_SUB, "BAD_SUB")
    choice(menuAlarmStatUDF, "UDF")
    choice(menuAlarmStatDISABLE, "DISABLE")
    choice(menuAlarmStatSIMM, "SIMM")
    choice(menuAlarmStatREAD_ACCESS, "READ_ACCESS")
    choice(menuAlarmStatWRITE_ACCESS, "WRITE_ACCESS")
}
menu(aSubLFLG) {
    choice(aSubLFLG_IGNORE, "IGNORE")
    choice(aSubLFLG_READ, "READ")
}
menu(aoOIF) {
    choice(aoOIF_Full, "Full")
    choice(aoOIF_Incremental, "Incremental")
}
menu(menuYesNo) {
    choice(menuYesNoNO, "NO")
    choice(menuYesNoYES, "YES")
}
menu(menuPini) {
    choice(menuPiniNO, "NO")
    choice(menuPiniYES, "YES")
    choice(menuPiniRUN, "RUN")
    choice(menuPiniRUNNING, "RUNNING")
    choice(menuPiniPAUSE, "PAUSE")
    choice(menuPiniPAUSED, "PAUSED")
}
menu(menuIvoa) {
    choice(menuIvoaContinue_normally, "Continue normally")
    choice(menuIvoaDon_t_drive_outputs, "Don't drive outputs")
    choice(menuIvoaSet_output_to_IVOV, "Set output to IVOV")
}
menu(menuFtype) {
    choice(menuFtypeSTRING, "STRING")
    choice(menuFtypeCHAR, "CHAR")
    choice(menuFtypeUCHAR, "UCHAR")
    choice(menuFtypeSHORT, "SHORT")
    choice(menuFtypeUSHORT, "USHORT")
    choice(menuFtypeLONG, "LONG")
    choice(menuFtypeULONG, "ULONG")
    choice(menuFtypeINT64, "INT64")
    choice(menuFtypeUINT64, "UINT64")
    choice(menuFtypeFLOAT, "FLOAT")
    choice(menuFtypeDOUBLE, "DOUBLE")
    choice(menuFtypeENUM, "ENUM")
}
menu(stringoutPOST) {
    choice(stringoutPOST_OnChange, "On Change")
    choice(stringoutPOST_Always, "Always")
}
menu(menuScan) {
    choice(menuScanPassive, "Passive")
    choice(menuScanEvent, "Event")
    choice(menuScanI_O_Intr, "I/O Intr")
    choice(menuScan10_second, "10 second")
    choice(menuScan5_second, "5 second")
    choice(menuScan2_second, "2 second")
    choice(menuScan1_second, "1 second")
    choice(menuScan_5_second, ".5 second")
    choice(menuScan_2_second, ".2 second")
    choice(menuScan_1_second, ".1 second")
}
menu(calcoutDOPT) {
    choice(calcoutDOPT_Use_VAL, "Use CALC")
    choice(calcoutDOPT_Use_OVAL, "Use OCAL")
}
menu(stringinPOST) {
    choice(stringinPOST_OnChange, "On Change")
    choice(stringinPOST_Always, "Always")
}
menu(fanoutSELM) {
    choice(fanoutSELM_All, "All")
    choice(fanoutSELM_Specified, "Specified")
    choice(fanoutSELM_Mask, "Mask")
}
menu(menuPost) {
    choice(menuPost_OnChange, "On Change")
    choice(menuPost_Always, "Always")
}
menu(bufferingALG) {
    choice(bufferingALG_FIFO, "FIFO Buffer")
    choice(bufferingALG_LIFO, "LIFO Buffer")
}
menu(compressALG) {
    choice(compressALG_N_to_1_Low_Value, "N to 1 Low Value")
    choice(compressALG_N_to_1_High_Value, "N to 1 High Value")
    choice(compressALG_N_to_1_Average, "N to 1 Average")
    choice(compressALG_Average, "Average")
    choice(compressALG_Circular_Buffer, "Circular Buffer")
    choice(compressALG_N_to_1_Median, "N to 1 Median")
}
menu(seqSELM) {
    choice(seqSELM_All, "All")
    choice(seqSELM_Specified, "Specified")
    choice(seqSELM_Mask, "Mask")
}
menu(menuOmsl) {
    choice(menuOmslsupervisory, "supervisory")
    choice(menuOmslclosed_loop, "closed_loop")
}
menu(aaiPOST) {
    choice(aaiPOST_Always, "Always")
    choice(aaiPOST_OnChange, "On Change")
}
menu(calcoutOOPT) {
    choice(calcoutOOPT_Every_Time, "Every Time")
    choice(calcoutOOPT_On_Change, "On Change")
    choice(calcoutOOPT_When_Zero, "When Zero")
    choice(calcoutOOPT_When_Non_zero, "When Non-zero")
    choice(calcoutOOPT_Transition_To_Zero, "Transition To Zero")
    choice(calcoutOOPT_Transition_To_Non_zero, "Transition To Non-zero")
}
menu(aSubEFLG) {
    choice(aSubEFLG_NEVER, "NEVER")
    choice(aSubEFLG_ON_CHANGE, "ON CHANGE")
    choice(aSubEFLG_ALWAYS, "ALWAYS")
}
menu(dfanoutSELM) {
    choice(dfanoutSELM_All, "All")
    choice(dfanoutSELM_Specified, "Specified")
    choice(dfanoutSELM_Mask, "Mask")
}
menu(selSELM) {
    choice(selSELM_Specified, "Specified")
    choice(selSELM_High_Signal, "High Signal")
    choice(selSELM_Low_Signal, "Low Signal")
    choice(selSELM_Median_Signal, "Median Signal")
}
menu(waveformPOST) {
    choice(waveformPOST_Always, "Always")
    choice(waveformPOST_OnChange, "On Change")
}
menu(menuConvert) {
    choice(menuConvertNO_CONVERSION, "NO CONVERSION")
    choice(menuConvertSLOPE, "SLOPE")
    choice(menuConvertLINEAR, "LINEAR")
    choice(menuConverttypeKdegF, "typeKdegF")
    choice(menuConverttypeKdegC, "typeKdegC")
    choice(menuConverttypeJdegF, "typeJdegF")
    choice(menuConverttypeJdegC, "typeJdegC")
    choice(menuConverttypeEdegF, "typeEdegF(ixe only)")
    choice(menuConverttypeEdegC, "typeEdegC(ixe only)")
    choice(menuConverttypeTdegF, "typeTdegF")
    choice(menuConverttypeTdegC, "typeTdegC")
    choice(menuConverttypeRdegF, "typeRdegF")
    choice(menuConverttypeRdegC, "typeRdegC")
    choice(menuConverttypeSdegF, "typeSdegF")
    choice(menuConverttypeSdegC, "typeSdegC")
}
recordtype(mbbi) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %/* Declare Device Support Entry Table */
    %struct mbbiRecord;
    %typedef struct mbbidset {
    %    dset common; /* init_record returns: (-1,0) => (failure, success)*/
    %    long (*read_mbbi)(struct mbbiRecord *prec); /* (0, 2) => (success, success no convert)*/
    %} mbbidset;
    %#define HAS_mbbidset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        prompt("Record Name")
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        prompt("Descriptor")
        size(41)
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        size(40)
        prompt("Event Name")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        promptgroup("20 - Scan")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        interest(4)
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        special(SPC_NOMOD)
        initial("UDF")
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        size(40)
        prompt("Alarm Message")
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        special(SPC_NOMOD)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        special(SPC_NOMOD)
        interest(2)
        menu(menuAlarmSevr)
    }
    field(NAMSG, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        prompt("New Alarm Message")
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        initial("YES")
        promptgroup("70 - Alarm")
        interest(2)
        special(SPC_NOMOD)
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsUInt8          bkpt")
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        initial("1")
        promptgroup("10 - Common")
        interest(1)
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(UTAG, DBF_UINT64) {
        prompt("Time Tag")
        interest(3)
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_ENUM) {
        asl(ASL0)
        prompt("Current Value")
        promptgroup("40 - Input")
        pp(TRUE)
    }
    field(NOBT, DBF_USHORT) {
        prompt("Number of Bits")
        interest(1)
        promptgroup("40 - Input")
        special(SPC_NOMOD)
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        promptgroup("40 - Input")
        interest(1)
    }
    field(ZRVL, DBF_ULONG) {
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        prompt("Zero Value")
        base(HEX)
        promptgroup("41 - Input 0-7")
    }
    field(ONVL, DBF_ULONG) {
        promptgroup("41 - Input 0-7")
        base(HEX)
        pp(TRUE)
        interest(1)
        special(SPC_MOD)
        prompt("One Value")
    }
    field(TWVL, DBF_ULONG) {
        interest(1)
        special(SPC_MOD)
        prompt("Two Value")
        pp(TRUE)
        base(HEX)
        promptgroup("41 - Input 0-7")
    }
    field(THVL, DBF_ULONG) {
        base(HEX)
        promptgroup("41 - Input 0-7")
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        prompt("Three Value")
    }
    field(FRVL, DBF_ULONG) {
        base(HEX)
        promptgroup("41 - Input 0-7")
        pp(TRUE)
        prompt("Four Value")
        interest(1)
        special(SPC_MOD)
    }
    field(FVVL, DBF_ULONG) {
        base(HEX)
        promptgroup("41 - Input 0-7")
        prompt("Five Value")
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
    }
    field(SXVL, DBF_ULONG) {
        pp(TRUE)
        interest(1)
        special(SPC_MOD)
        prompt("Six Value")
        base(HEX)
        promptgroup("41 - Input 0-7")
    }
    field(SVVL, DBF_ULONG) {
        prompt("Seven Value")
        special(SPC_MOD)
        interest(1)
        pp(TRUE)
        base(HEX)
        promptgroup("41 - Input 0-7")
    }
    field(EIVL, DBF_ULONG) {
        pp(TRUE)
        prompt("Eight Value")
        interest(1)
        special(SPC_MOD)
        base(HEX)
        promptgroup("42 - Input 8-15")
    }
    field(NIVL, DBF_ULONG) {
        base(HEX)
        promptgroup("42 - Input 8-15")
        prompt("Nine Value")
        special(SPC_MOD)
        interest(1)
        pp(TRUE)
    }
    field(TEVL, DBF_ULONG) {
        interest(1)
        special(SPC_MOD)
        prompt("Ten Value")
        pp(TRUE)
        base(HEX)
        promptgroup("42 - Input 8-15")
    }
    field(ELVL, DBF_ULONG) {
        pp(TRUE)
        interest(1)
        special(SPC_MOD)
        prompt("Eleven Value")
        base(HEX)
        promptgroup("42 - Input 8-15")
    }
    field(TVVL, DBF_ULONG) {
        prompt("Twelve Value")
        special(SPC_MOD)
        interest(1)
        pp(TRUE)
        promptgroup("42 - Input 8-15")
        base(HEX)
    }
    field(TTVL, DBF_ULONG) {
        base(HEX)
        promptgroup("42 - Input 8-15")
        prompt("Thirteen Value")
        special(SPC_MOD)
        interest(1)
        pp(TRUE)
    }
    field(FTVL, DBF_ULONG) {
        base(HEX)
        promptgroup("42 - Input 8-15")
        pp(TRUE)
        prompt("Fourteen Value")
        interest(1)
        special(SPC_MOD)
    }
    field(FFVL, DBF_ULONG) {
        prompt("Fifteen Value")
        special(SPC_MOD)
        interest(1)
        pp(TRUE)
        base(HEX)
        promptgroup("42 - Input 8-15")
    }
    field(ZRST, DBF_STRING) {
        pp(TRUE)
        size(26)
        prompt("Zero String")
        special(SPC_MOD)
        interest(1)
        promptgroup("81 - Display 0-7")
    }
    field(ONST, DBF_STRING) {
        interest(1)
        special(SPC_MOD)
        promptgroup("81 - Display 0-7")
        prompt("One String")
        size(26)
        pp(TRUE)
    }
    field(TWST, DBF_STRING) {
        special(SPC_MOD)
        interest(1)
        promptgroup("81 - Display 0-7")
        prompt("Two String")
        size(26)
        pp(TRUE)
    }
    field(THST, DBF_STRING) {
        prompt("Three String")
        promptgroup("81 - Display 0-7")
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
        size(26)
    }
    field(FRST, DBF_STRING) {
        prompt("Four String")
        promptgroup("81 - Display 0-7")
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
        size(26)
    }
    field(FVST, DBF_STRING) {
        prompt("Five String")
        promptgroup("81 - Display 0-7")
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
        size(26)
    }
    field(SXST, DBF_STRING) {
        pp(TRUE)
        size(26)
        prompt("Six String")
        special(SPC_MOD)
        interest(1)
        promptgroup("81 - Display 0-7")
    }
    field(SVST, DBF_STRING) {
        pp(TRUE)
        size(26)
        prompt("Seven String")
        promptgroup("81 - Display 0-7")
        interest(1)
        special(SPC_MOD)
    }
    field(EIST, DBF_STRING) {
        size(26)
        pp(TRUE)
        interest(1)
        special(SPC_MOD)
        promptgroup("82 - Display 8-15")
        prompt("Eight String")
    }
    field(NIST, DBF_STRING) {
        pp(TRUE)
        size(26)
        prompt("Nine String")
        interest(1)
        promptgroup("82 - Display 8-15")
        special(SPC_MOD)
    }
    field(TEST, DBF_STRING) {
        interest(1)
        promptgroup("82 - Display 8-15")
        special(SPC_MOD)
        prompt("Ten String")
        size(26)
        pp(TRUE)
    }
    field(ELST, DBF_STRING) {
        interest(1)
        special(SPC_MOD)
        promptgroup("82 - Display 8-15")
        prompt("Eleven String")
        size(26)
        pp(TRUE)
    }
    field(TVST, DBF_STRING) {
        special(SPC_MOD)
        interest(1)
        promptgroup("82 - Display 8-15")
        prompt("Twelve String")
        size(26)
        pp(TRUE)
    }
    field(TTST, DBF_STRING) {
        prompt("Thirteen String")
        interest(1)
        promptgroup("82 - Display 8-15")
        special(SPC_MOD)
        pp(TRUE)
        size(26)
    }
    field(FTST, DBF_STRING) {
        pp(TRUE)
        size(26)
        prompt("Fourteen String")
        interest(1)
        promptgroup("82 - Display 8-15")
        special(SPC_MOD)
    }
    field(FFST, DBF_STRING) {
        prompt("Fifteen String")
        interest(1)
        special(SPC_MOD)
        promptgroup("82 - Display 8-15")
        pp(TRUE)
        size(26)
    }
    field(ZRSV, DBF_MENU) {
        promptgroup("71 - Alarm 0-7")
        interest(1)
        prompt("State Zero Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(ONSV, DBF_MENU) {
        prompt("State One Severity")
        promptgroup("71 - Alarm 0-7")
        interest(1)
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(TWSV, DBF_MENU) {
        prompt("State Two Severity")
        interest(1)
        promptgroup("71 - Alarm 0-7")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(THSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("State Three Severity")
        interest(1)
        promptgroup("71 - Alarm 0-7")
    }
    field(FRSV, DBF_MENU) {
        promptgroup("71 - Alarm 0-7")
        interest(1)
        prompt("State Four Severity")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(FVSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("State Five Severity")
        promptgroup("71 - Alarm 0-7")
        interest(1)
    }
    field(SXSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("State Six Severity")
        interest(1)
        promptgroup("71 - Alarm 0-7")
    }
    field(SVSV, DBF_MENU) {
        interest(1)
        promptgroup("71 - Alarm 0-7")
        prompt("State Seven Severity")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(EISV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("State Eight Severity")
        promptgroup("72 - Alarm 8-15")
        interest(1)
    }
    field(NISV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("State Nine Severity")
        interest(1)
        promptgroup("72 - Alarm 8-15")
    }
    field(TESV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("72 - Alarm 8-15")
        interest(1)
        prompt("State Ten Severity")
    }
    field(ELSV, DBF_MENU) {
        prompt("State Eleven Severity")
        interest(1)
        promptgroup("72 - Alarm 8-15")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(TVSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("72 - Alarm 8-15")
        prompt("State Twelve Severity")
    }
    field(TTSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("State Thirteen Sevr")
        interest(1)
        promptgroup("72 - Alarm 8-15")
    }
    field(FTSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("72 - Alarm 8-15")
        interest(1)
        prompt("State Fourteen Sevr")
    }
    field(FFSV, DBF_MENU) {
        interest(1)
        promptgroup("72 - Alarm 8-15")
        prompt("State Fifteen Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(AFTC, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Alarm Filter Time Constant")
    }
    field(AFVL, DBF_DOUBLE) {
        prompt("Alarm Filter Value")
        interest(3)
        special(SPC_NOMOD)
    }
    field(UNSV, DBF_MENU) {
        prompt("Unknown State Severity")
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(COSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("Change of State Svr")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(RVAL, DBF_ULONG) {
        prompt("Raw Value")
        pp(TRUE)
    }
    field(ORAW, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Raw Value")
    }
    field(MASK, DBF_ULONG) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Hardware Mask")
    }
    field(MLST, DBF_USHORT) {
        prompt("Last Value Monitored")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LALM, DBF_USHORT) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Alarmed")
    }
    field(SDEF, DBF_SHORT) {
        prompt("States Defined")
        special(SPC_NOMOD)
        interest(3)
    }
    field(SHFT, DBF_USHORT) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Shift")
    }
    field(SIOL, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Simulation Input Link")
    }
    field(SVAL, DBF_ULONG) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        prompt("Simulation Mode Link")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SIMM, DBF_MENU) {
        interest(1)
        special(SPC_MOD)
        prompt("Simulation Mode")
        menu(menuSimm)
    }
    field(SIMS, DBF_MENU) {
        interest(2)
        promptgroup("90 - Simulate")
        prompt("Simulation Mode Severity")
        menu(menuAlarmSevr)
    }
    field(OLDSIMM, DBF_MENU) {
        prompt("Prev. Simulation Mode")
        special(SPC_NOMOD)
        interest(4)
        menu(menuSimm)
    }
    field(SSCN, DBF_MENU) {
        menu(menuScan)
        interest(1)
        promptgroup("90 - Simulate")
        initial("65535")
        prompt("Sim. Mode Scan")
    }
    field(SDLY, DBF_DOUBLE) {
        interest(2)
        promptgroup("90 - Simulate")
        initial("-1.0")
        prompt("Sim. Mode Async Delay")
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        extra("epicsCallback            *simpvt")
        special(SPC_NOMOD)
        interest(4)
    }
}
device(mbbi, CONSTANT, devMbbiSoft, "Soft Channel")
device(mbbi, CONSTANT, devMbbiSoftRaw, "Raw Soft Channel")
device(mbbi, CONSTANT, devMbbiSoftCallback, "Async Soft Channel")
recordtype(int64in) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct int64inRecord;
    %typedef struct int64indset {
    %    dset common;
    %    long (*read_int64in)(struct int64inRecord *prec);
    %} int64indset;
    %#define HAS_int64indset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        prompt("Record Name")
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        size(40)
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        promptgroup("20 - Scan")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        interest(4)
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        special(SPC_NOMOD)
        extra("ELLLIST             bklnk")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        prompt("Alarm Message")
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        special(SPC_NOMOD)
        interest(2)
        menu(menuAlarmSevr)
    }
    field(NAMSG, DBF_STRING) {
        prompt("New Alarm Message")
        special(SPC_NOMOD)
        size(40)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        promptgroup("70 - Alarm")
        interest(2)
        special(SPC_NOMOD)
        initial("YES")
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        special(SPC_NOMOD)
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        promptgroup("10 - Common")
        interest(1)
        initial("1")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        prompt("Time")
    }
    field(UTAG, DBF_UINT64) {
        prompt("Time Tag")
        special(SPC_NOMOD)
        interest(3)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_INT64) {
        prompt("Current value")
        asl(ASL0)
        promptgroup("40 - Input")
        pp(TRUE)
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        promptgroup("40 - Input")
        interest(1)
    }
    field(EGU, DBF_STRING) {
        prop(YES)
        size(16)
        prompt("Units name")
        promptgroup("80 - Display")
        interest(1)
    }
    field(HOPR, DBF_INT64) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("High Operating Range")
    }
    field(LOPR, DBF_INT64) {
        prompt("Low Operating Range")
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(HIHI, DBF_INT64) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Hihi Alarm Limit")
        prop(YES)
        pp(TRUE)
    }
    field(LOLO, DBF_INT64) {
        prop(YES)
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Lolo Alarm Limit")
    }
    field(HIGH, DBF_INT64) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("High Alarm Limit")
        prop(YES)
        pp(TRUE)
    }
    field(LOW, DBF_INT64) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Low Alarm Limit")
        prop(YES)
        pp(TRUE)
    }
    field(HHSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Hihi Severity")
    }
    field(LLSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Lolo Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(HSV, DBF_MENU) {
        prompt("High Severity")
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(LSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Severity")
    }
    field(HYST, DBF_INT64) {
        prompt("Alarm Deadband")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(AFTC, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Alarm Filter Time Constant")
    }
    field(AFVL, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Alarm Filter Value")
    }
    field(ADEL, DBF_INT64) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Archive Deadband")
    }
    field(MDEL, DBF_INT64) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Monitor Deadband")
    }
    field(LALM, DBF_INT64) {
        prompt("Last Value Alarmed")
        special(SPC_NOMOD)
        interest(3)
    }
    field(ALST, DBF_INT64) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Archived")
    }
    field(MLST, DBF_INT64) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Val Monitored")
    }
    field(SIOL, DBF_INLINK) {
        prompt("Simulation Input Link")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SVAL, DBF_INT64) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Simulation Mode Link")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        prompt("Simulation Mode")
        special(SPC_MOD)
        interest(1)
    }
    field(SIMS, DBF_MENU) {
        interest(2)
        promptgroup("90 - Simulate")
        prompt("Simulation Mode Severity")
        menu(menuAlarmSevr)
    }
    field(OLDSIMM, DBF_MENU) {
        interest(4)
        special(SPC_NOMOD)
        prompt("Prev. Simulation Mode")
        menu(menuSimm)
    }
    field(SSCN, DBF_MENU) {
        menu(menuScan)
        prompt("Sim. Mode Scan")
        initial("65535")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SDLY, DBF_DOUBLE) {
        initial("-1.0")
        promptgroup("90 - Simulate")
        interest(2)
        prompt("Sim. Mode Async Delay")
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        special(SPC_NOMOD)
        extra("epicsCallback            *simpvt")
        interest(4)
    }
}
device(int64in, CONSTANT, devI64inSoft, "Soft Channel")
device(int64in, CONSTANT, devI64inSoftCallback, "Async Soft Channel")
recordtype(aSub) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %struct aSubRecord;
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        size(41)
        prompt("Descriptor")
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        size(29)
        prompt("Access Security Group")
        special(SPC_AS)
        promptgroup("10 - Common")
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        size(40)
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        promptgroup("20 - Scan")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        interest(4)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        size(40)
        prompt("Alarm Message")
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        interest(2)
        special(SPC_NOMOD)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
    }
    field(NAMSG, DBF_STRING) {
        prompt("New Alarm Message")
        special(SPC_NOMOD)
        size(40)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        initial("YES")
        special(SPC_NOMOD)
        interest(2)
        promptgroup("70 - Alarm")
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        interest(4)
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        extra("void                *dpvt")
        special(SPC_NOMOD)
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        prompt("Undefined")
        initial("1")
        interest(1)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Undefined Alarm Sevrty")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
    }
    field(UTAG, DBF_UINT64) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_LONG) {
        prompt("Subr. return value")
        asl(ASL0)
    }
    field(OVAL, DBF_LONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Old return value")
    }
    field(INAM, DBF_STRING) {
        size(41)
        interest(1)
        promptgroup("30 - Action")
        special(SPC_NOMOD)
        prompt("Initialize Subr. Name")
    }
    field(LFLG, DBF_MENU) {
        prompt("Subr. Input Enable")
        promptgroup("30 - Action")
        interest(1)
        menu(aSubLFLG)
    }
    field(SUBL, DBF_INLINK) {
        prompt("Subroutine Name Link")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("30 - Action")
    }
    field(SNAM, DBF_STRING) {
        size(41)
        prompt("Process Subr. Name")
        special(SPC_MOD)
        interest(1)
        promptgroup("30 - Action")
    }
    field(ONAM, DBF_STRING) {
        size(41)
        promptgroup("30 - Action")
        interest(3)
        special(SPC_NOMOD)
        prompt("Old Subr. Name")
    }
    field(SADR, DBF_NOACCESS) {
        prompt("Subroutine Address")
        extra("long (*sadr)(struct aSubRecord *)")
        special(SPC_NOMOD)
        interest(2)
    }
    field(CADR, DBF_NOACCESS) {
        extra("void (*cadr)(struct aSubRecord *)")
        special(SPC_NOMOD)
        interest(2)
        prompt("Subroutine Cleanup Address")
    }
    field(BRSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("Bad Return Severity")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(PREC, DBF_SHORT) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Display Precision")
        prop(YES)
    }
    field(EFLG, DBF_MENU) {
        menu(aSubEFLG)
        initial("1")
        promptgroup("50 - Output")
        interest(1)
        prompt("Output Event Flag")
    }
    field(INPA, DBF_INLINK) {
        promptgroup("41 - Input A-G")
        interest(1)
        prompt("Input Link A")
    }
    field(INPB, DBF_INLINK) {
        prompt("Input Link B")
        interest(1)
        promptgroup("41 - Input A-G")
    }
    field(INPC, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Input A-G")
        prompt("Input Link C")
    }
    field(INPD, DBF_INLINK) {
        prompt("Input Link D")
        interest(1)
        promptgroup("41 - Input A-G")
    }
    field(INPE, DBF_INLINK) {
        promptgroup("41 - Input A-G")
        interest(1)
        prompt("Input Link E")
    }
    field(INPF, DBF_INLINK) {
        promptgroup("41 - Input A-G")
        interest(1)
        prompt("Input Link F")
    }
    field(INPG, DBF_INLINK) {
        prompt("Input Link G")
        interest(1)
        promptgroup("41 - Input A-G")
    }
    field(INPH, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Input H-N")
        prompt("Input Link H")
    }
    field(INPI, DBF_INLINK) {
        prompt("Input Link I")
        interest(1)
        promptgroup("42 - Input H-N")
    }
    field(INPJ, DBF_INLINK) {
        promptgroup("42 - Input H-N")
        interest(1)
        prompt("Input Link J")
    }
    field(INPK, DBF_INLINK) {
        prompt("Input Link K")
        promptgroup("42 - Input H-N")
        interest(1)
    }
    field(INPL, DBF_INLINK) {
        prompt("Input Link L")
        promptgroup("42 - Input H-N")
        interest(1)
    }
    field(INPM, DBF_INLINK) {
        prompt("Input Link M")
        promptgroup("42 - Input H-N")
        interest(1)
    }
    field(INPN, DBF_INLINK) {
        prompt("Input Link N")
        promptgroup("42 - Input H-N")
        interest(1)
    }
    field(INPO, DBF_INLINK) {
        prompt("Input Link O")
        promptgroup("43 - Input O-U")
        interest(1)
    }
    field(INPP, DBF_INLINK) {
        prompt("Input Link P")
        promptgroup("43 - Input O-U")
        interest(1)
    }
    field(INPQ, DBF_INLINK) {
        interest(1)
        promptgroup("43 - Input O-U")
        prompt("Input Link Q")
    }
    field(INPR, DBF_INLINK) {
        prompt("Input Link R")
        promptgroup("43 - Input O-U")
        interest(1)
    }
    field(INPS, DBF_INLINK) {
        interest(1)
        promptgroup("43 - Input O-U")
        prompt("Input Link S")
    }
    field(INPT, DBF_INLINK) {
        prompt("Input Link T")
        promptgroup("43 - Input O-U")
        interest(1)
    }
    field(INPU, DBF_INLINK) {
        interest(1)
        promptgroup("43 - Input O-U")
        prompt("Input Link U")
    }
    field(A, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *a")
        interest(2)
        prompt("Input value A")
        asl(ASL0)
    }
    field(B, DBF_NOACCESS) {
        prompt("Input value B")
        asl(ASL0)
        extra("void *b")
        special(SPC_DBADDR)
        interest(2)
    }
    field(C, DBF_NOACCESS) {
        interest(2)
        extra("void *c")
        special(SPC_DBADDR)
        prompt("Input value C")
        asl(ASL0)
    }
    field(D, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *d")
        interest(2)
        asl(ASL0)
        prompt("Input value D")
    }
    field(E, DBF_NOACCESS) {
        extra("void *e")
        interest(2)
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Input value E")
    }
    field(F, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *f")
        interest(2)
        asl(ASL0)
        prompt("Input value F")
    }
    field(G, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Input value G")
        extra("void *g")
        interest(2)
        special(SPC_DBADDR)
    }
    field(H, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *h")
        interest(2)
        prompt("Input value H")
        asl(ASL0)
    }
    field(I, DBF_NOACCESS) {
        prompt("Input value I")
        asl(ASL0)
        interest(2)
        extra("void *i")
        special(SPC_DBADDR)
    }
    field(J, DBF_NOACCESS) {
        prompt("Input value J")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("void *j")
        interest(2)
    }
    field(K, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Input value K")
        interest(2)
        extra("void *k")
        special(SPC_DBADDR)
    }
    field(L, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Input value L")
        extra("void *l")
        interest(2)
        special(SPC_DBADDR)
    }
    field(M, DBF_NOACCESS) {
        extra("void *m")
        special(SPC_DBADDR)
        interest(2)
        prompt("Input value M")
        asl(ASL0)
    }
    field(N, DBF_NOACCESS) {
        prompt("Input value N")
        asl(ASL0)
        extra("void *n")
        interest(2)
        special(SPC_DBADDR)
    }
    field(O, DBF_NOACCESS) {
        prompt("Input value O")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("void *o")
        interest(2)
    }
    field(P, DBF_NOACCESS) {
        prompt("Input value P")
        asl(ASL0)
        extra("void *p")
        interest(2)
        special(SPC_DBADDR)
    }
    field(Q, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Input value Q")
        extra("void *q")
        interest(2)
        special(SPC_DBADDR)
    }
    field(R, DBF_NOACCESS) {
        prompt("Input value R")
        asl(ASL0)
        extra("void *r")
        special(SPC_DBADDR)
        interest(2)
    }
    field(S, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Input value S")
        extra("void *s")
        interest(2)
        special(SPC_DBADDR)
    }
    field(T, DBF_NOACCESS) {
        extra("void *t")
        interest(2)
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Input value T")
    }
    field(U, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *u")
        interest(2)
        prompt("Input value U")
        asl(ASL0)
    }
    field(FTA, DBF_MENU) {
        initial("DOUBLE")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("41 - Input A-G")
        prompt("Type of A")
        menu(menuFtype)
    }
    field(FTB, DBF_MENU) {
        promptgroup("41 - Input A-G")
        interest(1)
        special(SPC_NOMOD)
        initial("DOUBLE")
        prompt("Type of B")
        menu(menuFtype)
    }
    field(FTC, DBF_MENU) {
        menu(menuFtype)
        prompt("Type of C")
        initial("DOUBLE")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("41 - Input A-G")
    }
    field(FTD, DBF_MENU) {
        prompt("Type of D")
        promptgroup("41 - Input A-G")
        interest(1)
        special(SPC_NOMOD)
        initial("DOUBLE")
        menu(menuFtype)
    }
    field(FTE, DBF_MENU) {
        initial("DOUBLE")
        promptgroup("41 - Input A-G")
        interest(1)
        special(SPC_NOMOD)
        prompt("Type of E")
        menu(menuFtype)
    }
    field(FTF, DBF_MENU) {
        interest(1)
        special(SPC_NOMOD)
        promptgroup("41 - Input A-G")
        initial("DOUBLE")
        prompt("Type of F")
        menu(menuFtype)
    }
    field(FTG, DBF_MENU) {
        interest(1)
        promptgroup("41 - Input A-G")
        special(SPC_NOMOD)
        initial("DOUBLE")
        prompt("Type of G")
        menu(menuFtype)
    }
    field(FTH, DBF_MENU) {
        menu(menuFtype)
        prompt("Type of H")
        initial("DOUBLE")
        interest(1)
        promptgroup("42 - Input H-N")
        special(SPC_NOMOD)
    }
    field(FTI, DBF_MENU) {
        interest(1)
        special(SPC_NOMOD)
        promptgroup("42 - Input H-N")
        initial("DOUBLE")
        prompt("Type of I")
        menu(menuFtype)
    }
    field(FTJ, DBF_MENU) {
        menu(menuFtype)
        prompt("Type of J")
        initial("DOUBLE")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("42 - Input H-N")
    }
    field(FTK, DBF_MENU) {
        prompt("Type of K")
        promptgroup("42 - Input H-N")
        interest(1)
        special(SPC_NOMOD)
        initial("DOUBLE")
        menu(menuFtype)
    }
    field(FTL, DBF_MENU) {
        menu(menuFtype)
        prompt("Type of L")
        promptgroup("42 - Input H-N")
        interest(1)
        special(SPC_NOMOD)
        initial("DOUBLE")
    }
    field(FTM, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        interest(1)
        promptgroup("42 - Input H-N")
        initial("DOUBLE")
        prompt("Type of M")
    }
    field(FTN, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        interest(1)
        promptgroup("42 - Input H-N")
        initial("DOUBLE")
        prompt("Type of N")
    }
    field(FTO, DBF_MENU) {
        menu(menuFtype)
        prompt("Type of O")
        initial("DOUBLE")
        interest(1)
        promptgroup("43 - Input O-U")
        special(SPC_NOMOD)
    }
    field(FTP, DBF_MENU) {
        menu(menuFtype)
        prompt("Type of P")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("43 - Input O-U")
        initial("DOUBLE")
    }
    field(FTQ, DBF_MENU) {
        prompt("Type of Q")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("43 - Input O-U")
        initial("DOUBLE")
        menu(menuFtype)
    }
    field(FTR, DBF_MENU) {
        menu(menuFtype)
        prompt("Type of R")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("43 - Input O-U")
        initial("DOUBLE")
    }
    field(FTS, DBF_MENU) {
        prompt("Type of S")
        interest(1)
        promptgroup("43 - Input O-U")
        special(SPC_NOMOD)
        initial("DOUBLE")
        menu(menuFtype)
    }
    field(FTT, DBF_MENU) {
        menu(menuFtype)
        prompt("Type of T")
        promptgroup("43 - Input O-U")
        interest(1)
        special(SPC_NOMOD)
        initial("DOUBLE")
    }
    field(FTU, DBF_MENU) {
        menu(menuFtype)
        initial("DOUBLE")
        interest(1)
        promptgroup("43 - Input O-U")
        special(SPC_NOMOD)
        prompt("Type of U")
    }
    field(NOA, DBF_ULONG) {
        initial("1")
        promptgroup("41 - Input A-G")
        interest(1)
        special(SPC_NOMOD)
        prompt("Max. elements in A")
    }
    field(NOB, DBF_ULONG) {
        initial("1")
        promptgroup("41 - Input A-G")
        interest(1)
        special(SPC_NOMOD)
        prompt("Max. elements in B")
    }
    field(NOC, DBF_ULONG) {
        prompt("Max. elements in C")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("41 - Input A-G")
        initial("1")
    }
    field(NOD, DBF_ULONG) {
        prompt("Max. elements in D")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("41 - Input A-G")
    }
    field(NOE, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("41 - Input A-G")
        initial("1")
        prompt("Max. elements in E")
    }
    field(NOF, DBF_ULONG) {
        prompt("Max. elements in F")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("41 - Input A-G")
    }
    field(NOG, DBF_ULONG) {
        interest(1)
        special(SPC_NOMOD)
        promptgroup("41 - Input A-G")
        initial("1")
        prompt("Max. elements in G")
    }
    field(NOH, DBF_ULONG) {
        initial("1")
        promptgroup("42 - Input H-N")
        interest(1)
        special(SPC_NOMOD)
        prompt("Max. elements in H")
    }
    field(NOI, DBF_ULONG) {
        prompt("Max. elements in I")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("42 - Input H-N")
        initial("1")
    }
    field(NOJ, DBF_ULONG) {
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("42 - Input H-N")
        prompt("Max. elements in J")
    }
    field(NOK, DBF_ULONG) {
        initial("1")
        interest(1)
        promptgroup("42 - Input H-N")
        special(SPC_NOMOD)
        prompt("Max. elements in K")
    }
    field(NOL, DBF_ULONG) {
        interest(1)
        special(SPC_NOMOD)
        promptgroup("42 - Input H-N")
        initial("1")
        prompt("Max. elements in L")
    }
    field(NOM, DBF_ULONG) {
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("42 - Input H-N")
        prompt("Max. elements in M")
    }
    field(NON, DBF_ULONG) {
        prompt("Max. elements in N")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("42 - Input H-N")
    }
    field(NOO, DBF_ULONG) {
        initial("1")
        promptgroup("43 - Input O-U")
        interest(1)
        special(SPC_NOMOD)
        prompt("Max. elements in O")
    }
    field(NOP, DBF_ULONG) {
        prompt("Max. elements in P")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("43 - Input O-U")
        initial("1")
    }
    field(NOQ, DBF_ULONG) {
        prompt("Max. elements in Q")
        promptgroup("43 - Input O-U")
        interest(1)
        special(SPC_NOMOD)
        initial("1")
    }
    field(NOR, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("43 - Input O-U")
        initial("1")
        prompt("Max. elements in R")
    }
    field(NOS, DBF_ULONG) {
        initial("1")
        interest(1)
        promptgroup("43 - Input O-U")
        special(SPC_NOMOD)
        prompt("Max. elements in S")
    }
    field(NOT, DBF_ULONG) {
        initial("1")
        promptgroup("43 - Input O-U")
        interest(1)
        special(SPC_NOMOD)
        prompt("Max. elements in T")
    }
    field(NOU, DBF_ULONG) {
        prompt("Max. elements in U")
        initial("1")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("43 - Input O-U")
    }
    field(NEA, DBF_ULONG) {
        prompt("Num. elements in A")
        interest(3)
        special(SPC_NOMOD)
        initial("1")
    }
    field(NEB, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in B")
    }
    field(NEC, DBF_ULONG) {
        prompt("Num. elements in C")
        initial("1")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NED, DBF_ULONG) {
        prompt("Num. elements in D")
        initial("1")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEE, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in E")
    }
    field(NEF, DBF_ULONG) {
        initial("1")
        interest(3)
        special(SPC_NOMOD)
        prompt("Num. elements in F")
    }
    field(NEG, DBF_ULONG) {
        prompt("Num. elements in G")
        initial("1")
        special(SPC_NOMOD)
        interest(3)
    }
    field(NEH, DBF_ULONG) {
        initial("1")
        special(SPC_NOMOD)
        interest(3)
        prompt("Num. elements in H")
    }
    field(NEI, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in I")
    }
    field(NEJ, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in J")
    }
    field(NEK, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in K")
    }
    field(NEL, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        initial("1")
        prompt("Num. elements in L")
    }
    field(NEM, DBF_ULONG) {
        initial("1")
        special(SPC_NOMOD)
        interest(3)
        prompt("Num. elements in M")
    }
    field(NEN, DBF_ULONG) {
        prompt("Num. elements in N")
        interest(3)
        special(SPC_NOMOD)
        initial("1")
    }
    field(NEO, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in O")
    }
    field(NEP, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in P")
    }
    field(NEQ, DBF_ULONG) {
        prompt("Num. elements in Q")
        initial("1")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NER, DBF_ULONG) {
        prompt("Num. elements in R")
        special(SPC_NOMOD)
        interest(3)
        initial("1")
    }
    field(NES, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in S")
    }
    field(NET, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        initial("1")
        prompt("Num. elements in T")
    }
    field(NEU, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        initial("1")
        prompt("Num. elements in U")
    }
    field(OUTA, DBF_OUTLINK) {
        prompt("Output Link A")
        interest(1)
        promptgroup("51 - Output A-G")
    }
    field(OUTB, DBF_OUTLINK) {
        interest(1)
        promptgroup("51 - Output A-G")
        prompt("Output Link B")
    }
    field(OUTC, DBF_OUTLINK) {
        prompt("Output Link C")
        interest(1)
        promptgroup("51 - Output A-G")
    }
    field(OUTD, DBF_OUTLINK) {
        promptgroup("51 - Output A-G")
        interest(1)
        prompt("Output Link D")
    }
    field(OUTE, DBF_OUTLINK) {
        prompt("Output Link E")
        interest(1)
        promptgroup("51 - Output A-G")
    }
    field(OUTF, DBF_OUTLINK) {
        prompt("Output Link F")
        promptgroup("51 - Output A-G")
        interest(1)
    }
    field(OUTG, DBF_OUTLINK) {
        interest(1)
        promptgroup("51 - Output A-G")
        prompt("Output Link G")
    }
    field(OUTH, DBF_OUTLINK) {
        promptgroup("52 - Output H-N")
        interest(1)
        prompt("Output Link H")
    }
    field(OUTI, DBF_OUTLINK) {
        promptgroup("52 - Output H-N")
        interest(1)
        prompt("Output Link I")
    }
    field(OUTJ, DBF_OUTLINK) {
        interest(1)
        promptgroup("52 - Output H-N")
        prompt("Output Link J")
    }
    field(OUTK, DBF_OUTLINK) {
        prompt("Output Link K")
        promptgroup("52 - Output H-N")
        interest(1)
    }
    field(OUTL, DBF_OUTLINK) {
        prompt("Output Link L")
        promptgroup("52 - Output H-N")
        interest(1)
    }
    field(OUTM, DBF_OUTLINK) {
        prompt("Output Link M")
        promptgroup("52 - Output H-N")
        interest(1)
    }
    field(OUTN, DBF_OUTLINK) {
        interest(1)
        promptgroup("52 - Output H-N")
        prompt("Output Link N")
    }
    field(OUTO, DBF_OUTLINK) {
        promptgroup("53 - Output O-U")
        interest(1)
        prompt("Output Link O")
    }
    field(OUTP, DBF_OUTLINK) {
        interest(1)
        promptgroup("53 - Output O-U")
        prompt("Output Link P")
    }
    field(OUTQ, DBF_OUTLINK) {
        interest(1)
        promptgroup("53 - Output O-U")
        prompt("Output Link Q")
    }
    field(OUTR, DBF_OUTLINK) {
        prompt("Output Link R")
        interest(1)
        promptgroup("53 - Output O-U")
    }
    field(OUTS, DBF_OUTLINK) {
        prompt("Output Link S")
        interest(1)
        promptgroup("53 - Output O-U")
    }
    field(OUTT, DBF_OUTLINK) {
        interest(1)
        promptgroup("53 - Output O-U")
        prompt("Output Link T")
    }
    field(OUTU, DBF_OUTLINK) {
        interest(1)
        promptgroup("53 - Output O-U")
        prompt("Output Link U")
    }
    field(VALA, DBF_NOACCESS) {
        prompt("Output value A")
        asl(ASL0)
        interest(2)
        extra("void *vala")
        special(SPC_DBADDR)
    }
    field(VALB, DBF_NOACCESS) {
        extra("void *valb")
        special(SPC_DBADDR)
        interest(2)
        asl(ASL0)
        prompt("Output value B")
    }
    field(VALC, DBF_NOACCESS) {
        prompt("Output value C")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("void *valc")
        interest(2)
    }
    field(VALD, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *vald")
        interest(2)
        prompt("Output value D")
        asl(ASL0)
    }
    field(VALE, DBF_NOACCESS) {
        prompt("Output value E")
        asl(ASL0)
        extra("void *vale")
        special(SPC_DBADDR)
        interest(2)
    }
    field(VALF, DBF_NOACCESS) {
        interest(2)
        extra("void *valf")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Output value F")
    }
    field(VALG, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *valg")
        interest(2)
        prompt("Output value G")
        asl(ASL0)
    }
    field(VALH, DBF_NOACCESS) {
        extra("void *valh")
        interest(2)
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Output value H")
    }
    field(VALI, DBF_NOACCESS) {
        extra("void *vali")
        interest(2)
        special(SPC_DBADDR)
        prompt("Output value I")
        asl(ASL0)
    }
    field(VALJ, DBF_NOACCESS) {
        interest(2)
        extra("void *valj")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Output value J")
    }
    field(VALK, DBF_NOACCESS) {
        prompt("Output value K")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("void *valk")
        interest(2)
    }
    field(VALL, DBF_NOACCESS) {
        interest(2)
        extra("void *vall")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Output value L")
    }
    field(VALM, DBF_NOACCESS) {
        interest(2)
        extra("void *valm")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Output value M")
    }
    field(VALN, DBF_NOACCESS) {
        extra("void *valn")
        interest(2)
        special(SPC_DBADDR)
        prompt("Output value N")
        asl(ASL0)
    }
    field(VALO, DBF_NOACCESS) {
        prompt("Output value O")
        asl(ASL0)
        interest(2)
        extra("void *valo")
        special(SPC_DBADDR)
    }
    field(VALP, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Output value P")
        extra("void *valp")
        interest(2)
        special(SPC_DBADDR)
    }
    field(VALQ, DBF_NOACCESS) {
        prompt("Output value Q")
        asl(ASL0)
        extra("void *valq")
        interest(2)
        special(SPC_DBADDR)
    }
    field(VALR, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Output value R")
        interest(2)
        extra("void *valr")
        special(SPC_DBADDR)
    }
    field(VALS, DBF_NOACCESS) {
        extra("void *vals")
        special(SPC_DBADDR)
        interest(2)
        asl(ASL0)
        prompt("Output value S")
    }
    field(VALT, DBF_NOACCESS) {
        prompt("Output value T")
        asl(ASL0)
        extra("void *valt")
        interest(2)
        special(SPC_DBADDR)
    }
    field(VALU, DBF_NOACCESS) {
        prompt("Output value U")
        asl(ASL0)
        extra("void *valu")
        interest(2)
        special(SPC_DBADDR)
    }
    field(OVLA, DBF_NOACCESS) {
        prompt("Old Output A")
        asl(ASL0)
        extra("void *ovla")
        interest(4)
        special(SPC_NOMOD)
    }
    field(OVLB, DBF_NOACCESS) {
        prompt("Old Output B")
        asl(ASL0)
        extra("void *ovlb")
        special(SPC_NOMOD)
        interest(4)
    }
    field(OVLC, DBF_NOACCESS) {
        prompt("Old Output C")
        asl(ASL0)
        interest(4)
        extra("void *ovlc")
        special(SPC_NOMOD)
    }
    field(OVLD, DBF_NOACCESS) {
        interest(4)
        extra("void *ovld")
        special(SPC_NOMOD)
        prompt("Old Output D")
        asl(ASL0)
    }
    field(OVLE, DBF_NOACCESS) {
        extra("void *ovle")
        special(SPC_NOMOD)
        interest(4)
        asl(ASL0)
        prompt("Old Output E")
    }
    field(OVLF, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *ovlf")
        interest(4)
        prompt("Old Output F")
        asl(ASL0)
    }
    field(OVLG, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Old Output G")
        interest(4)
        extra("void *ovlg")
        special(SPC_NOMOD)
    }
    field(OVLH, DBF_NOACCESS) {
        prompt("Old Output H")
        asl(ASL0)
        extra("void *ovlh")
        interest(4)
        special(SPC_NOMOD)
    }
    field(OVLI, DBF_NOACCESS) {
        extra("void *ovli")
        interest(4)
        special(SPC_NOMOD)
        prompt("Old Output I")
        asl(ASL0)
    }
    field(OVLJ, DBF_NOACCESS) {
        interest(4)
        extra("void *ovlj")
        special(SPC_NOMOD)
        asl(ASL0)
        prompt("Old Output J")
    }
    field(OVLK, DBF_NOACCESS) {
        interest(4)
        extra("void *ovlk")
        special(SPC_NOMOD)
        asl(ASL0)
        prompt("Old Output K")
    }
    field(OVLL, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Old Output L")
        interest(4)
        extra("void *ovll")
        special(SPC_NOMOD)
    }
    field(OVLM, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Old Output M")
        interest(4)
        extra("void *ovlm")
        special(SPC_NOMOD)
    }
    field(OVLN, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Old Output N")
        interest(4)
        extra("void *ovln")
        special(SPC_NOMOD)
    }
    field(OVLO, DBF_NOACCESS) {
        prompt("Old Output O")
        asl(ASL0)
        interest(4)
        extra("void *ovlo")
        special(SPC_NOMOD)
    }
    field(OVLP, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Old Output P")
        interest(4)
        extra("void *ovlp")
        special(SPC_NOMOD)
    }
    field(OVLQ, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *ovlq")
        interest(4)
        asl(ASL0)
        prompt("Old Output Q")
    }
    field(OVLR, DBF_NOACCESS) {
        extra("void *ovlr")
        interest(4)
        special(SPC_NOMOD)
        asl(ASL0)
        prompt("Old Output R")
    }
    field(OVLS, DBF_NOACCESS) {
        interest(4)
        extra("void *ovls")
        special(SPC_NOMOD)
        prompt("Old Output S")
        asl(ASL0)
    }
    field(OVLT, DBF_NOACCESS) {
        prompt("Old Output T")
        asl(ASL0)
        extra("void *ovlt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(OVLU, DBF_NOACCESS) {
        prompt("Old Output U")
        asl(ASL0)
        extra("void *ovlu")
        interest(4)
        special(SPC_NOMOD)
    }
    field(FTVA, DBF_MENU) {
        prompt("Type of VALA")
        initial("DOUBLE")
        interest(1)
        promptgroup("51 - Output A-G")
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(FTVB, DBF_MENU) {
        menu(menuFtype)
        initial("DOUBLE")
        promptgroup("51 - Output A-G")
        interest(1)
        special(SPC_NOMOD)
        prompt("Type of VALB")
    }
    field(FTVC, DBF_MENU) {
        menu(menuFtype)
        promptgroup("51 - Output A-G")
        interest(1)
        special(SPC_NOMOD)
        initial("DOUBLE")
        prompt("Type of VALC")
    }
    field(FTVD, DBF_MENU) {
        menu(menuFtype)
        prompt("Type of VALD")
        initial("DOUBLE")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("51 - Output A-G")
    }
    field(FTVE, DBF_MENU) {
        menu(menuFtype)
        prompt("Type of VALE")
        initial("DOUBLE")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("51 - Output A-G")
    }
    field(FTVF, DBF_MENU) {
        menu(menuFtype)
        prompt("Type of VALF")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("51 - Output A-G")
        initial("DOUBLE")
    }
    field(FTVG, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        interest(1)
        promptgroup("51 - Output A-G")
        initial("DOUBLE")
        prompt("Type of VALG")
    }
    field(FTVH, DBF_MENU) {
        menu(menuFtype)
        prompt("Type of VALH")
        initial("DOUBLE")
        interest(1)
        promptgroup("52 - Output H-N")
        special(SPC_NOMOD)
    }
    field(FTVI, DBF_MENU) {
        interest(1)
        promptgroup("52 - Output H-N")
        special(SPC_NOMOD)
        initial("DOUBLE")
        prompt("Type of VALI")
        menu(menuFtype)
    }
    field(FTVJ, DBF_MENU) {
        menu(menuFtype)
        prompt("Type of VALJ")
        promptgroup("52 - Output H-N")
        interest(1)
        special(SPC_NOMOD)
        initial("DOUBLE")
    }
    field(FTVK, DBF_MENU) {
        menu(menuFtype)
        initial("DOUBLE")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("52 - Output H-N")
        prompt("Type of VALK")
    }
    field(FTVL, DBF_MENU) {
        menu(menuFtype)
        initial("DOUBLE")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("52 - Output H-N")
        prompt("Type of VALL")
    }
    field(FTVM, DBF_MENU) {
        interest(1)
        special(SPC_NOMOD)
        promptgroup("52 - Output H-N")
        initial("DOUBLE")
        prompt("Type of VALM")
        menu(menuFtype)
    }
    field(FTVN, DBF_MENU) {
        menu(menuFtype)
        prompt("Type of VALN")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("52 - Output H-N")
        initial("DOUBLE")
    }
    field(FTVO, DBF_MENU) {
        interest(1)
        special(SPC_NOMOD)
        promptgroup("53 - Output O-U")
        initial("DOUBLE")
        prompt("Type of VALO")
        menu(menuFtype)
    }
    field(FTVP, DBF_MENU) {
        menu(menuFtype)
        initial("DOUBLE")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("53 - Output O-U")
        prompt("Type of VALP")
    }
    field(FTVQ, DBF_MENU) {
        menu(menuFtype)
        prompt("Type of VALQ")
        initial("DOUBLE")
        interest(1)
        promptgroup("53 - Output O-U")
        special(SPC_NOMOD)
    }
    field(FTVR, DBF_MENU) {
        menu(menuFtype)
        promptgroup("53 - Output O-U")
        interest(1)
        special(SPC_NOMOD)
        initial("DOUBLE")
        prompt("Type of VALR")
    }
    field(FTVS, DBF_MENU) {
        menu(menuFtype)
        initial("DOUBLE")
        interest(1)
        promptgroup("53 - Output O-U")
        special(SPC_NOMOD)
        prompt("Type of VALS")
    }
    field(FTVT, DBF_MENU) {
        initial("DOUBLE")
        promptgroup("53 - Output O-U")
        interest(1)
        special(SPC_NOMOD)
        prompt("Type of VALT")
        menu(menuFtype)
    }
    field(FTVU, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        interest(1)
        promptgroup("53 - Output O-U")
        initial("DOUBLE")
        prompt("Type of VALU")
    }
    field(NOVA, DBF_ULONG) {
        prompt("Max. elements in VALA")
        interest(1)
        promptgroup("51 - Output A-G")
        special(SPC_NOMOD)
        initial("1")
    }
    field(NOVB, DBF_ULONG) {
        prompt("Max. elements in VALB")
        promptgroup("51 - Output A-G")
        interest(1)
        special(SPC_NOMOD)
        initial("1")
    }
    field(NOVC, DBF_ULONG) {
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("51 - Output A-G")
        prompt("Max. elements in VALC")
    }
    field(NOVD, DBF_ULONG) {
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("51 - Output A-G")
        prompt("Max. elements in VALD")
    }
    field(NOVE, DBF_ULONG) {
        prompt("Max. elements in VALE")
        initial("1")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("51 - Output A-G")
    }
    field(NOVF, DBF_ULONG) {
        promptgroup("51 - Output A-G")
        interest(1)
        special(SPC_NOMOD)
        initial("1")
        prompt("Max. elements in VALF")
    }
    field(NOVG, DBF_ULONG) {
        initial("1")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("51 - Output A-G")
        prompt("Max. elements in VALG")
    }
    field(NOVH, DBF_ULONG) {
        interest(1)
        promptgroup("52 - Output H-N")
        special(SPC_NOMOD)
        initial("1")
        prompt("Max. elements in VAlH")
    }
    field(NOVI, DBF_ULONG) {
        prompt("Max. elements in VALI")
        promptgroup("52 - Output H-N")
        interest(1)
        special(SPC_NOMOD)
        initial("1")
    }
    field(NOVJ, DBF_ULONG) {
        initial("1")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("52 - Output H-N")
        prompt("Max. elements in VALJ")
    }
    field(NOVK, DBF_ULONG) {
        prompt("Max. elements in VALK")
        interest(1)
        promptgroup("52 - Output H-N")
        special(SPC_NOMOD)
        initial("1")
    }
    field(NOVL, DBF_ULONG) {
        initial("1")
        promptgroup("52 - Output H-N")
        interest(1)
        special(SPC_NOMOD)
        prompt("Max. elements in VALL")
    }
    field(NOVM, DBF_ULONG) {
        prompt("Max. elements in VALM")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("52 - Output H-N")
        initial("1")
    }
    field(NOVN, DBF_ULONG) {
        prompt("Max. elements in VALN")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("52 - Output H-N")
        initial("1")
    }
    field(NOVO, DBF_ULONG) {
        promptgroup("53 - Output O-U")
        interest(1)
        special(SPC_NOMOD)
        initial("1")
        prompt("Max. elements in VALO")
    }
    field(NOVP, DBF_ULONG) {
        prompt("Max. elements in VALP")
        interest(1)
        promptgroup("53 - Output O-U")
        special(SPC_NOMOD)
        initial("1")
    }
    field(NOVQ, DBF_ULONG) {
        prompt("Max. elements in VALQ")
        initial("1")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("53 - Output O-U")
    }
    field(NOVR, DBF_ULONG) {
        interest(1)
        promptgroup("53 - Output O-U")
        special(SPC_NOMOD)
        initial("1")
        prompt("Max. elements in VALR")
    }
    field(NOVS, DBF_ULONG) {
        initial("1")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("53 - Output O-U")
        prompt("Max. elements in VALS")
    }
    field(NOVT, DBF_ULONG) {
        prompt("Max. elements in VALT")
        initial("1")
        interest(1)
        promptgroup("53 - Output O-U")
        special(SPC_NOMOD)
    }
    field(NOVU, DBF_ULONG) {
        prompt("Max. elements in VALU")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("53 - Output O-U")
        initial("1")
    }
    field(NEVA, DBF_ULONG) {
        prompt("Num. elements in VALA")
        special(SPC_NOMOD)
        interest(3)
        initial("1")
    }
    field(NEVB, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in VALB")
    }
    field(NEVC, DBF_ULONG) {
        prompt("Num. elements in VALC")
        interest(3)
        special(SPC_NOMOD)
        initial("1")
    }
    field(NEVD, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in VALD")
    }
    field(NEVE, DBF_ULONG) {
        initial("1")
        interest(3)
        special(SPC_NOMOD)
        prompt("Num. elements in VALE")
    }
    field(NEVF, DBF_ULONG) {
        prompt("Num. elements in VALF")
        initial("1")
        special(SPC_NOMOD)
        interest(3)
    }
    field(NEVG, DBF_ULONG) {
        initial("1")
        interest(3)
        special(SPC_NOMOD)
        prompt("Num. elements in VALG")
    }
    field(NEVH, DBF_ULONG) {
        prompt("Num. elements in VAlH")
        initial("1")
        special(SPC_NOMOD)
        interest(3)
    }
    field(NEVI, DBF_ULONG) {
        prompt("Num. elements in VALI")
        interest(3)
        special(SPC_NOMOD)
        initial("1")
    }
    field(NEVJ, DBF_ULONG) {
        initial("1")
        interest(3)
        special(SPC_NOMOD)
        prompt("Num. elements in VALJ")
    }
    field(NEVK, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in VALK")
    }
    field(NEVL, DBF_ULONG) {
        prompt("Num. elements in VALL")
        initial("1")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEVM, DBF_ULONG) {
        prompt("Num. elements in VALM")
        initial("1")
        special(SPC_NOMOD)
        interest(3)
    }
    field(NEVN, DBF_ULONG) {
        prompt("Num. elements in VALN")
        special(SPC_NOMOD)
        interest(3)
        initial("1")
    }
    field(NEVO, DBF_ULONG) {
        prompt("Num. elements in VALO")
        initial("1")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEVP, DBF_ULONG) {
        initial("1")
        special(SPC_NOMOD)
        interest(3)
        prompt("Num. elements in VALP")
    }
    field(NEVQ, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        initial("1")
        prompt("Num. elements in VALQ")
    }
    field(NEVR, DBF_ULONG) {
        initial("1")
        special(SPC_NOMOD)
        interest(3)
        prompt("Num. elements in VALR")
    }
    field(NEVS, DBF_ULONG) {
        initial("1")
        special(SPC_NOMOD)
        interest(3)
        prompt("Num. elements in VALS")
    }
    field(NEVT, DBF_ULONG) {
        initial("1")
        interest(3)
        special(SPC_NOMOD)
        prompt("Num. elements in VALT")
    }
    field(NEVU, DBF_ULONG) {
        initial("1")
        interest(3)
        special(SPC_NOMOD)
        prompt("Num. elements in VALU")
    }
    field(ONVA, DBF_ULONG) {
        initial("1")
        special(SPC_NOMOD)
        interest(4)
        prompt("Num. elements in OVLA")
    }
    field(ONVB, DBF_ULONG) {
        prompt("Num. elements in OVLB")
        interest(4)
        special(SPC_NOMOD)
        initial("1")
    }
    field(ONVC, DBF_ULONG) {
        prompt("Num. elements in OVLC")
        initial("1")
        special(SPC_NOMOD)
        interest(4)
    }
    field(ONVD, DBF_ULONG) {
        initial("1")
        special(SPC_NOMOD)
        interest(4)
        prompt("Num. elements in OVLD")
    }
    field(ONVE, DBF_ULONG) {
        interest(4)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in OVLE")
    }
    field(ONVF, DBF_ULONG) {
        prompt("Num. elements in OVLF")
        initial("1")
        special(SPC_NOMOD)
        interest(4)
    }
    field(ONVG, DBF_ULONG) {
        initial("1")
        interest(4)
        special(SPC_NOMOD)
        prompt("Num. elements in OVLG")
    }
    field(ONVH, DBF_ULONG) {
        interest(4)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in VAlH")
    }
    field(ONVI, DBF_ULONG) {
        prompt("Num. elements in OVLI")
        initial("1")
        special(SPC_NOMOD)
        interest(4)
    }
    field(ONVJ, DBF_ULONG) {
        initial("1")
        special(SPC_NOMOD)
        interest(4)
        prompt("Num. elements in OVLJ")
    }
    field(ONVK, DBF_ULONG) {
        prompt("Num. elements in OVLK")
        special(SPC_NOMOD)
        interest(4)
        initial("1")
    }
    field(ONVL, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(4)
        initial("1")
        prompt("Num. elements in OVLL")
    }
    field(ONVM, DBF_ULONG) {
        prompt("Num. elements in OVLM")
        initial("1")
        interest(4)
        special(SPC_NOMOD)
    }
    field(ONVN, DBF_ULONG) {
        initial("1")
        interest(4)
        special(SPC_NOMOD)
        prompt("Num. elements in OVLN")
    }
    field(ONVO, DBF_ULONG) {
        initial("1")
        interest(4)
        special(SPC_NOMOD)
        prompt("Num. elements in OVLO")
    }
    field(ONVP, DBF_ULONG) {
        initial("1")
        special(SPC_NOMOD)
        interest(4)
        prompt("Num. elements in OVLP")
    }
    field(ONVQ, DBF_ULONG) {
        prompt("Num. elements in OVLQ")
        special(SPC_NOMOD)
        interest(4)
        initial("1")
    }
    field(ONVR, DBF_ULONG) {
        prompt("Num. elements in OVLR")
        special(SPC_NOMOD)
        interest(4)
        initial("1")
    }
    field(ONVS, DBF_ULONG) {
        prompt("Num. elements in OVLS")
        special(SPC_NOMOD)
        interest(4)
        initial("1")
    }
    field(ONVT, DBF_ULONG) {
        initial("1")
        special(SPC_NOMOD)
        interest(4)
        prompt("Num. elements in OVLT")
    }
    field(ONVU, DBF_ULONG) {
        interest(4)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in OVLU")
    }
}
recordtype(aai) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct aaiRecord;
    %typedef struct aaidset {
    %    dset common; /*init_record returns: (-1,0,AAI_DEVINIT_PASS1)=>(failure,success,callback)*/
    %    long (*read_aai)(struct aaiRecord *prec); /*returns: (-1,0)=>(failure,success)*/
    %} aaidset;
    %#define HAS_aaidset
    %#define AAI_DEVINIT_PASS1 2
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        size(41)
        prompt("Descriptor")
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        size(29)
        special(SPC_AS)
        promptgroup("10 - Common")
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        prompt("Event Name")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        promptgroup("20 - Scan")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        interest(4)
        special(SPC_NOMOD)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        special(SPC_NOMOD)
        extra("ELLLIST             bklnk")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        prompt("Alarm Message")
        special(SPC_NOMOD)
        size(40)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
    }
    field(NAMSG, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        prompt("New Alarm Message")
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(2)
        special(SPC_NOMOD)
        initial("YES")
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        interest(4)
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        prompt("Undefined")
        initial("1")
        promptgroup("10 - Common")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        initial("INVALID")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        extra("epicsTimeStamp      time")
        interest(2)
        special(SPC_NOMOD)
    }
    field(UTAG, DBF_UINT64) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_NOACCESS) {
        extra("void *		val")
        special(SPC_DBADDR)
        prompt("Value")
        asl(ASL0)
        pp(TRUE)
    }
    field(PREC, DBF_SHORT) {
        prop(YES)
        promptgroup("80 - Display")
        interest(1)
        prompt("Display Precision")
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        promptgroup("40 - Input")
        interest(1)
    }
    field(EGU, DBF_STRING) {
        prompt("Engineering Units")
        interest(1)
        promptgroup("80 - Display")
        prop(YES)
        size(16)
    }
    field(HOPR, DBF_DOUBLE) {
        prop(YES)
        prompt("High Operating Range")
        interest(1)
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_DOUBLE) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Low Operating Range")
        prop(YES)
    }
    field(NELM, DBF_ULONG) {
        prompt("Number of Elements")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("30 - Action")
        initial("1")
    }
    field(FTVL, DBF_MENU) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("30 - Action")
        prompt("Field Type of Value")
        menu(menuFtype)
    }
    field(NORD, DBF_ULONG) {
        prompt("Number elements read")
        special(SPC_NOMOD)
    }
    field(BPTR, DBF_NOACCESS) {
        extra("void *		bptr")
        special(SPC_NOMOD)
        interest(4)
        prompt("Buffer Pointer")
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Simulation Mode Link")
    }
    field(SIMM, DBF_MENU) {
        special(SPC_MOD)
        interest(1)
        prompt("Simulation Mode")
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        interest(2)
        promptgroup("90 - Simulate")
        prompt("Simulation Mode Severity")
        menu(menuAlarmSevr)
    }
    field(SIOL, DBF_INLINK) {
        prompt("Simulation Input Link")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(OLDSIMM, DBF_MENU) {
        prompt("Prev. Simulation Mode")
        interest(4)
        special(SPC_NOMOD)
        menu(menuSimm)
    }
    field(SSCN, DBF_MENU) {
        menu(menuScan)
        prompt("Sim. Mode Scan")
        initial("65535")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SDLY, DBF_DOUBLE) {
        initial("-1.0")
        promptgroup("90 - Simulate")
        interest(2)
        prompt("Sim. Mode Async Delay")
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        extra("epicsCallback            *simpvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(MPST, DBF_MENU) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Post Value Monitors")
        menu(aaiPOST)
    }
    field(APST, DBF_MENU) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Post Archive Monitors")
        menu(aaiPOST)
    }
    field(HASH, DBF_ULONG) {
        interest(3)
        prompt("Hash of OnChange data.")
    }
}
device(aai, CONSTANT, devAaiSoft, "Soft Channel")
recordtype(calc) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %#include "postfix.h"
    field(NAME, DBF_STRING) {
        size(61)
        prompt("Record Name")
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        size(41)
        prompt("Descriptor")
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        prompt("Scan Mechanism")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        prompt("Event Name")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        promptgroup("20 - Scan")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             bklnk")
        interest(4)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(AMSG, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        prompt("Alarm Message")
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(2)
        special(SPC_NOMOD)
        prompt("New Alarm Severity")
    }
    field(NAMSG, DBF_STRING) {
        size(40)
        prompt("New Alarm Message")
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        special(SPC_NOMOD)
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        interest(4)
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        special(SPC_NOMOD)
        extra("epicsUInt8          bkpt")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        initial("1")
        promptgroup("10 - Common")
        interest(1)
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Undefined Alarm Sevrty")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        interest(2)
    }
    field(UTAG, DBF_UINT64) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_DOUBLE) {
        prompt("Result")
        asl(ASL0)
        promptgroup("50 - Output")
    }
    field(CALC, DBF_STRING) {
        size(80)
        pp(TRUE)
        initial("0")
        special(SPC_CALC)
        promptgroup("30 - Action")
        prompt("Calculation")
    }
    field(INPA, DBF_INLINK) {
        prompt("Input A")
        interest(1)
        promptgroup("41 - Input A-F")
    }
    field(INPB, DBF_INLINK) {
        prompt("Input B")
        promptgroup("41 - Input A-F")
        interest(1)
    }
    field(INPC, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        interest(1)
        prompt("Input C")
    }
    field(INPD, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        interest(1)
        prompt("Input D")
    }
    field(INPE, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Input A-F")
        prompt("Input E")
    }
    field(INPF, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Input A-F")
        prompt("Input F")
    }
    field(INPG, DBF_INLINK) {
        prompt("Input G")
        promptgroup("42 - Input G-L")
        interest(1)
    }
    field(INPH, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Input G-L")
        prompt("Input H")
    }
    field(INPI, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Input G-L")
        prompt("Input I")
    }
    field(INPJ, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        interest(1)
        prompt("Input J")
    }
    field(INPK, DBF_INLINK) {
        prompt("Input K")
        interest(1)
        promptgroup("42 - Input G-L")
    }
    field(INPL, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        interest(1)
        prompt("Input L")
    }
    field(EGU, DBF_STRING) {
        prop(YES)
        size(16)
        interest(1)
        promptgroup("80 - Display")
        prompt("Engineering Units")
    }
    field(PREC, DBF_SHORT) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Display Precision")
        prop(YES)
    }
    field(HOPR, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("High Operating Rng")
    }
    field(LOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Low Operating Range")
        prop(YES)
    }
    field(HIHI, DBF_DOUBLE) {
        pp(TRUE)
        prop(YES)
        prompt("Hihi Alarm Limit")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LOLO, DBF_DOUBLE) {
        pp(TRUE)
        prop(YES)
        prompt("Lolo Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(HIGH, DBF_DOUBLE) {
        prompt("High Alarm Limit")
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
        prop(YES)
    }
    field(LOW, DBF_DOUBLE) {
        prompt("Low Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
        pp(TRUE)
        prop(YES)
    }
    field(HHSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        prop(YES)
        prompt("Hihi Severity")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LLSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Lolo Severity")
        prop(YES)
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(HSV, DBF_MENU) {
        prompt("High Severity")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
        pp(TRUE)
        prop(YES)
    }
    field(LSV, DBF_MENU) {
        prompt("Low Severity")
        promptgroup("70 - Alarm")
        interest(1)
        pp(TRUE)
        menu(menuAlarmSevr)
        prop(YES)
    }
    field(AFTC, DBF_DOUBLE) {
        prompt("Alarm Filter Time Constant")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(AFVL, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Alarm Filter Value")
    }
    field(HYST, DBF_DOUBLE) {
        prompt("Alarm Deadband")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(ADEL, DBF_DOUBLE) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Archive Deadband")
    }
    field(MDEL, DBF_DOUBLE) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Monitor Deadband")
    }
    field(A, DBF_DOUBLE) {
        prompt("Value of Input A")
        pp(TRUE)
    }
    field(B, DBF_DOUBLE) {
        prompt("Value of Input B")
        pp(TRUE)
    }
    field(C, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input C")
    }
    field(D, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input D")
    }
    field(E, DBF_DOUBLE) {
        prompt("Value of Input E")
        pp(TRUE)
    }
    field(F, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input F")
    }
    field(G, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input G")
    }
    field(H, DBF_DOUBLE) {
        prompt("Value of Input H")
        pp(TRUE)
    }
    field(I, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input I")
    }
    field(J, DBF_DOUBLE) {
        prompt("Value of Input J")
        pp(TRUE)
    }
    field(K, DBF_DOUBLE) {
        prompt("Value of Input K")
        pp(TRUE)
    }
    field(L, DBF_DOUBLE) {
        prompt("Value of Input L")
        pp(TRUE)
    }
    field(LA, DBF_DOUBLE) {
        prompt("Prev Value of A")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LB, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of B")
    }
    field(LC, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of C")
    }
    field(LD, DBF_DOUBLE) {
        prompt("Prev Value of D")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LE, DBF_DOUBLE) {
        prompt("Prev Value of E")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LF, DBF_DOUBLE) {
        prompt("Prev Value of F")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LG, DBF_DOUBLE) {
        prompt("Prev Value of G")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LH, DBF_DOUBLE) {
        prompt("Prev Value of H")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LI, DBF_DOUBLE) {
        prompt("Prev Value of I")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LJ, DBF_DOUBLE) {
        prompt("Prev Value of J")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LK, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of K")
    }
    field(LL, DBF_DOUBLE) {
        prompt("Prev Value of L")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LALM, DBF_DOUBLE) {
        prompt("Last Value Alarmed")
        interest(3)
        special(SPC_NOMOD)
    }
    field(ALST, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Value Archived")
    }
    field(MLST, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Val Monitored")
    }
    field(RPCL, DBF_NOACCESS) {
        extra("char	rpcl[INFIX_TO_POSTFIX_SIZE(80)]")
        interest(4)
        special(SPC_NOMOD)
        prompt("Reverse Polish Calc")
    }
}
recordtype(compress) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        prompt("Scan Mechanism")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        size(40)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        promptgroup("20 - Scan")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        interest(4)
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
        special(SPC_NOMOD)
    }
    field(AMSG, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        prompt("Alarm Message")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        special(SPC_NOMOD)
        interest(2)
        menu(menuAlarmSevr)
    }
    field(NAMSG, DBF_STRING) {
        prompt("New Alarm Message")
        special(SPC_NOMOD)
        size(40)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        initial("YES")
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        special(SPC_NOMOD)
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        prompt("Undefined")
        interest(1)
        promptgroup("10 - Common")
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        interest(2)
        special(SPC_NOMOD)
        prompt("Time")
    }
    field(UTAG, DBF_UINT64) {
        prompt("Time Tag")
        interest(3)
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_NOACCESS) {
        extra("void *		val")
        special(SPC_DBADDR)
        prompt("Value")
        asl(ASL0)
        pp(TRUE)
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        promptgroup("40 - Input")
        interest(1)
    }
    field(RES, DBF_SHORT) {
        interest(3)
        special(SPC_RESET)
        prompt("Reset")
        asl(ASL0)
    }
    field(ALG, DBF_MENU) {
        promptgroup("30 - Action")
        interest(1)
        special(SPC_RESET)
        prompt("Compression Algorithm")
        menu(compressALG)
    }
    field(BALG, DBF_MENU) {
        menu(bufferingALG)
        prompt("Buffering Algorithm")
        interest(1)
        special(SPC_RESET)
        promptgroup("30 - Action")
    }
    field(NSAM, DBF_ULONG) {
        prompt("Number of Values")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("30 - Action")
        initial("1")
    }
    field(N, DBF_ULONG) {
        prompt("N to 1 Compression")
        initial("1")
        promptgroup("30 - Action")
        interest(1)
        special(SPC_RESET)
    }
    field(IHIL, DBF_DOUBLE) {
        interest(1)
        promptgroup("30 - Action")
        prompt("Init High Interest Lim")
    }
    field(ILIL, DBF_DOUBLE) {
        prompt("Init Low Interest Lim")
        promptgroup("30 - Action")
        interest(1)
    }
    field(HOPR, DBF_DOUBLE) {
        prop(YES)
        promptgroup("80 - Display")
        interest(1)
        prompt("High Operating Range")
    }
    field(LOPR, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("Low Operating Range")
    }
    field(PREC, DBF_SHORT) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Display Precision")
        prop(YES)
    }
    field(EGU, DBF_STRING) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Engineering Units")
        size(16)
        prop(YES)
    }
    field(OFF, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Offset")
    }
    field(NUSE, DBF_ULONG) {
        prompt("Number Used")
        special(SPC_NOMOD)
    }
    field(OUSE, DBF_ULONG) {
        prompt("Old Number Used")
        special(SPC_NOMOD)
    }
    field(BPTR, DBF_NOACCESS) {
        prompt("Buffer Pointer")
        interest(4)
        extra("double		*bptr")
        special(SPC_NOMOD)
    }
    field(SPTR, DBF_NOACCESS) {
        prompt("Summing Buffer Ptr")
        extra("double		*sptr")
        special(SPC_NOMOD)
        interest(4)
    }
    field(WPTR, DBF_NOACCESS) {
        extra("double		*wptr")
        interest(4)
        special(SPC_NOMOD)
        prompt("Working Buffer Ptr")
    }
    field(INPN, DBF_LONG) {
        prompt("Number of elements in Working Buffer")
        interest(4)
        special(SPC_NOMOD)
    }
    field(CVB, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Compress Value Buffer")
    }
    field(INX, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Compressed Array Inx")
    }
}
recordtype(calcout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %/* Declare Device Support Entry Table */
    %struct calcoutRecord;
    %typedef struct calcoutdset {
    %    dset common;
    %    long (*write)(struct calcoutRecord *prec);
    %} calcoutdset;
    %#define HAS_calcoutdset
    %
    %#include "dbScan.h"
    %#include "postfix.h"
    field(NAME, DBF_STRING) {
        size(61)
        prompt("Record Name")
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        size(41)
        prompt("Descriptor")
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        size(29)
        special(SPC_AS)
        promptgroup("10 - Common")
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        prompt("Scan Mechanism")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        size(40)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        interest(4)
        special(SPC_NOMOD)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        interest(4)
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        size(40)
        prompt("Alarm Message")
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("New Alarm Severity")
        special(SPC_NOMOD)
        interest(2)
    }
    field(NAMSG, DBF_STRING) {
        prompt("New Alarm Message")
        special(SPC_NOMOD)
        size(40)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Alarm Ack Severity")
        special(SPC_NOMOD)
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        promptgroup("70 - Alarm")
        interest(2)
        special(SPC_NOMOD)
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        interest(4)
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        prompt("Undefined")
        interest(1)
        promptgroup("10 - Common")
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(UTAG, DBF_UINT64) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(RPVT, DBF_NOACCESS) {
        extra("struct rpvtStruct *rpvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Record Private")
    }
    field(VAL, DBF_DOUBLE) {
        promptgroup("50 - Output")
        asl(ASL0)
        prompt("Result")
    }
    field(PVAL, DBF_DOUBLE) {
        prompt("Previous Value")
    }
    field(CALC, DBF_STRING) {
        size(80)
        pp(TRUE)
        promptgroup("30 - Action")
        special(SPC_CALC)
        initial("0")
        prompt("Calculation")
    }
    field(CLCV, DBF_LONG) {
        interest(1)
        prompt("CALC Valid")
    }
    field(INPA, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        interest(1)
        special(SPC_MOD)
        prompt("Input A")
    }
    field(INPB, DBF_INLINK) {
        interest(1)
        special(SPC_MOD)
        promptgroup("41 - Input A-F")
        prompt("Input B")
    }
    field(INPC, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Input A-F")
        special(SPC_MOD)
        prompt("Input C")
    }
    field(INPD, DBF_INLINK) {
        prompt("Input D")
        interest(1)
        promptgroup("41 - Input A-F")
        special(SPC_MOD)
    }
    field(INPE, DBF_INLINK) {
        prompt("Input E")
        promptgroup("41 - Input A-F")
        interest(1)
        special(SPC_MOD)
    }
    field(INPF, DBF_INLINK) {
        interest(1)
        special(SPC_MOD)
        promptgroup("41 - Input A-F")
        prompt("Input F")
    }
    field(INPG, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        interest(1)
        special(SPC_MOD)
        prompt("Input G")
    }
    field(INPH, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Input G-L")
        special(SPC_MOD)
        prompt("Input H")
    }
    field(INPI, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        interest(1)
        special(SPC_MOD)
        prompt("Input I")
    }
    field(INPJ, DBF_INLINK) {
        interest(1)
        special(SPC_MOD)
        promptgroup("42 - Input G-L")
        prompt("Input J")
    }
    field(INPK, DBF_INLINK) {
        prompt("Input K")
        interest(1)
        special(SPC_MOD)
        promptgroup("42 - Input G-L")
    }
    field(INPL, DBF_INLINK) {
        prompt("Input L")
        special(SPC_MOD)
        interest(1)
        promptgroup("42 - Input G-L")
    }
    field(OUT, DBF_OUTLINK) {
        interest(1)
        special(SPC_MOD)
        promptgroup("50 - Output")
        prompt("Output Specification")
    }
    field(INAV, DBF_MENU) {
        menu(calcoutINAV)
        prompt("INPA PV Status")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
    }
    field(INBV, DBF_MENU) {
        prompt("INPB PV Status")
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        menu(calcoutINAV)
    }
    field(INCV, DBF_MENU) {
        initial("1")
        special(SPC_NOMOD)
        interest(1)
        prompt("INPC PV Status")
        menu(calcoutINAV)
    }
    field(INDV, DBF_MENU) {
        menu(calcoutINAV)
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        prompt("INPD PV Status")
    }
    field(INEV, DBF_MENU) {
        menu(calcoutINAV)
        prompt("INPE PV Status")
        interest(1)
        special(SPC_NOMOD)
        initial("1")
    }
    field(INFV, DBF_MENU) {
        menu(calcoutINAV)
        prompt("INPF PV Status")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
    }
    field(INGV, DBF_MENU) {
        prompt("INPG PV Status")
        interest(1)
        special(SPC_NOMOD)
        initial("1")
        menu(calcoutINAV)
    }
    field(INHV, DBF_MENU) {
        interest(1)
        special(SPC_NOMOD)
        initial("1")
        prompt("INPH PV Status")
        menu(calcoutINAV)
    }
    field(INIV, DBF_MENU) {
        interest(1)
        special(SPC_NOMOD)
        initial("1")
        prompt("INPI PV Status")
        menu(calcoutINAV)
    }
    field(INJV, DBF_MENU) {
        menu(calcoutINAV)
        prompt("INPJ PV Status")
        special(SPC_NOMOD)
        interest(1)
        initial("1")
    }
    field(INKV, DBF_MENU) {
        menu(calcoutINAV)
        initial("1")
        special(SPC_NOMOD)
        interest(1)
        prompt("INPK PV Status")
    }
    field(INLV, DBF_MENU) {
        prompt("INPL PV Status")
        initial("1")
        special(SPC_NOMOD)
        interest(1)
        menu(calcoutINAV)
    }
    field(OUTV, DBF_MENU) {
        menu(calcoutINAV)
        interest(1)
        special(SPC_NOMOD)
        prompt("OUT PV Status")
    }
    field(OOPT, DBF_MENU) {
        prompt("Output Execute Opt")
        interest(1)
        promptgroup("50 - Output")
        menu(calcoutOOPT)
    }
    field(ODLY, DBF_DOUBLE) {
        prompt("Output Execute Delay")
        asl(ASL0)
        interest(1)
        promptgroup("50 - Output")
    }
    field(DLYA, DBF_USHORT) {
        special(SPC_NOMOD)
        prompt("Output Delay Active")
        asl(ASL0)
    }
    field(DOPT, DBF_MENU) {
        promptgroup("30 - Action")
        interest(1)
        prompt("Output Data Opt")
        menu(calcoutDOPT)
    }
    field(OCAL, DBF_STRING) {
        pp(TRUE)
        size(80)
        prompt("Output Calculation")
        initial("0")
        special(SPC_CALC)
        promptgroup("30 - Action")
    }
    field(OCLV, DBF_LONG) {
        interest(1)
        prompt("OCAL Valid")
    }
    field(OEVT, DBF_STRING) {
        size(40)
        asl(ASL0)
        prompt("Event To Issue")
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(EPVT, DBF_NOACCESS) {
        extra("EVENTPVT epvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Event private")
    }
    field(IVOA, DBF_MENU) {
        menu(menuIvoa)
        interest(2)
        promptgroup("50 - Output")
        prompt("INVALID output action")
    }
    field(IVOV, DBF_DOUBLE) {
        prompt("INVALID output value")
        interest(2)
        promptgroup("50 - Output")
    }
    field(EGU, DBF_STRING) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Engineering Units")
        prop(YES)
        size(16)
    }
    field(PREC, DBF_SHORT) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Display Precision")
        prop(YES)
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Rng")
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(LOPR, DBF_DOUBLE) {
        prompt("Low Operating Range")
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(HIHI, DBF_DOUBLE) {
        prompt("Hihi Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
        pp(TRUE)
        prop(YES)
    }
    field(LOLO, DBF_DOUBLE) {
        prop(YES)
        pp(TRUE)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Lolo Alarm Limit")
    }
    field(HIGH, DBF_DOUBLE) {
        pp(TRUE)
        prop(YES)
        prompt("High Alarm Limit")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LOW, DBF_DOUBLE) {
        prop(YES)
        pp(TRUE)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Alarm Limit")
    }
    field(HHSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prop(YES)
        prompt("Hihi Severity")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LLSV, DBF_MENU) {
        prompt("Lolo Severity")
        promptgroup("70 - Alarm")
        interest(1)
        pp(TRUE)
        menu(menuAlarmSevr)
        prop(YES)
    }
    field(HSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prop(YES)
        prompt("High Severity")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Low Severity")
        prop(YES)
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(HYST, DBF_DOUBLE) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Alarm Deadband")
    }
    field(ADEL, DBF_DOUBLE) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Archive Deadband")
    }
    field(MDEL, DBF_DOUBLE) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Monitor Deadband")
    }
    field(A, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input A")
    }
    field(B, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input B")
    }
    field(C, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input C")
    }
    field(D, DBF_DOUBLE) {
        prompt("Value of Input D")
        pp(TRUE)
    }
    field(E, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input E")
    }
    field(F, DBF_DOUBLE) {
        prompt("Value of Input F")
        pp(TRUE)
    }
    field(G, DBF_DOUBLE) {
        prompt("Value of Input G")
        pp(TRUE)
    }
    field(H, DBF_DOUBLE) {
        prompt("Value of Input H")
        pp(TRUE)
    }
    field(I, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input I")
    }
    field(J, DBF_DOUBLE) {
        prompt("Value of Input J")
        pp(TRUE)
    }
    field(K, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input K")
    }
    field(L, DBF_DOUBLE) {
        prompt("Value of Input L")
        pp(TRUE)
    }
    field(OVAL, DBF_DOUBLE) {
        prompt("Output Value")
        asl(ASL0)
    }
    field(LA, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of A")
    }
    field(LB, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of B")
    }
    field(LC, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of C")
    }
    field(LD, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of D")
    }
    field(LE, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of E")
    }
    field(LF, DBF_DOUBLE) {
        prompt("Prev Value of F")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LG, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of G")
    }
    field(LH, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of H")
    }
    field(LI, DBF_DOUBLE) {
        prompt("Prev Value of I")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LJ, DBF_DOUBLE) {
        prompt("Prev Value of J")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LK, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of K")
    }
    field(LL, DBF_DOUBLE) {
        prompt("Prev Value of L")
        interest(3)
        special(SPC_NOMOD)
    }
    field(POVL, DBF_DOUBLE) {
        asl(ASL0)
        prompt("Prev Value of OVAL")
    }
    field(LALM, DBF_DOUBLE) {
        prompt("Last Value Alarmed")
        special(SPC_NOMOD)
        interest(3)
    }
    field(ALST, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Value Archived")
    }
    field(MLST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Val Monitored")
    }
    field(RPCL, DBF_NOACCESS) {
        prompt("Reverse Polish Calc")
        extra("char	rpcl[INFIX_TO_POSTFIX_SIZE(80)]")
        interest(4)
        special(SPC_NOMOD)
    }
    field(ORPC, DBF_NOACCESS) {
        extra("char	orpc[INFIX_TO_POSTFIX_SIZE(80)]")
        special(SPC_NOMOD)
        interest(4)
        prompt("Reverse Polish OCalc")
    }
}
device(calcout, CONSTANT, devCalcoutSoft, "Soft Channel")
device(calcout, CONSTANT, devCalcoutSoftCallback, "Async Soft Channel")
recordtype(event) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct eventRecord;
    %typedef struct eventdset {
    %    dset common; /*init_record returns: (-1,0)=>(failure,success)*/
    %    long (*read_event)(struct eventRecord *prec); /*(0)=> success */
    %} eventdset;
    %#define HAS_eventdset
    %
    %#include "dbScan.h"
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        size(40)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        extra("ELLLIST             bklnk")
        interest(4)
        special(SPC_NOMOD)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        prompt("Alarm Status")
        special(SPC_NOMOD)
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        size(40)
        prompt("Alarm Message")
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        special(SPC_NOMOD)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NAMSG, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("New Alarm Message")
        size(40)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Alarm Ack Severity")
        special(SPC_NOMOD)
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        special(SPC_NOMOD)
        interest(2)
        promptgroup("70 - Alarm")
        initial("YES")
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        interest(1)
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        promptgroup("10 - Common")
        interest(1)
        prompt("Undefined")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        initial("INVALID")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
    }
    field(UTAG, DBF_UINT64) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("40 - Input")
        asl(ASL0)
        prompt("Event Name To Post")
        size(40)
    }
    field(EPVT, DBF_NOACCESS) {
        prompt("Event private")
        interest(4)
        extra("EVENTPVT epvt")
        special(SPC_NOMOD)
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        promptgroup("40 - Input")
        interest(1)
    }
    field(SIOL, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Sim Input Specifctn")
    }
    field(SVAL, DBF_STRING) {
        prompt("Simulation Value")
        size(40)
    }
    field(SIML, DBF_INLINK) {
        prompt("Sim Mode Location")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        special(SPC_MOD)
        interest(1)
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        prompt("Sim mode Alarm Svrty")
        interest(2)
        promptgroup("90 - Simulate")
        menu(menuAlarmSevr)
    }
    field(OLDSIMM, DBF_MENU) {
        prompt("Prev. Simulation Mode")
        special(SPC_NOMOD)
        interest(4)
        menu(menuSimm)
    }
    field(SSCN, DBF_MENU) {
        prompt("Sim. Mode Scan")
        promptgroup("90 - Simulate")
        interest(1)
        initial("65535")
        menu(menuScan)
    }
    field(SDLY, DBF_DOUBLE) {
        promptgroup("90 - Simulate")
        interest(2)
        initial("-1.0")
        prompt("Sim. Mode Async Delay")
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        extra("epicsCallback            *simpvt")
        interest(4)
        special(SPC_NOMOD)
    }
}
device(event, CONSTANT, devEventSoft, "Soft Channel")
recordtype(stringout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct stringoutRecord;
    %typedef struct stringoutdset {
    %    dset common; /*init_record returns: (-1,0)=>(failure,success)*/
    %    long (*write_stringout)(struct stringoutRecord *prec); /*(-1,0)=>(failure,success)*/
    %} stringoutdset;
    %#define HAS_stringoutdset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        size(41)
        prompt("Descriptor")
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        size(29)
        prompt("Access Security Group")
        promptgroup("10 - Common")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        prompt("Event Name")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        promptgroup("20 - Scan")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        interest(4)
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        extra("ELLLIST             bklnk")
        interest(4)
        special(SPC_NOMOD)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        special(SPC_NOMOD)
        initial("UDF")
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        size(40)
        prompt("Alarm Message")
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
    }
    field(NAMSG, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        prompt("New Alarm Message")
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(2)
        special(SPC_NOMOD)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        promptgroup("70 - Alarm")
        interest(2)
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct typed_rset   *rset")
        interest(4)
        special(SPC_NOMOD)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        special(SPC_NOMOD)
        extra("epicsUInt8          bkpt")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        interest(1)
        promptgroup("10 - Common")
        prompt("Undefined")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        interest(2)
        prompt("Time")
    }
    field(UTAG, DBF_UINT64) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_STRING) {
        pp(TRUE)
        size(40)
        asl(ASL0)
        prompt("Current Value")
        promptgroup("50 - Output")
    }
    field(OVAL, DBF_STRING) {
        prompt("Previous Value")
        special(SPC_NOMOD)
        interest(3)
        size(40)
    }
    field(DOL, DBF_INLINK) {
        interest(1)
        promptgroup("40 - Input")
        prompt("Desired Output Loc")
    }
    field(OMSL, DBF_MENU) {
        menu(menuOmsl)
        prompt("Output Mode Select")
        interest(1)
        promptgroup("50 - Output")
    }
    field(OUT, DBF_OUTLINK) {
        prompt("Output Specification")
        promptgroup("50 - Output")
        interest(1)
    }
    field(MPST, DBF_MENU) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Post Value Monitors")
        menu(stringoutPOST)
    }
    field(APST, DBF_MENU) {
        menu(stringoutPOST)
        promptgroup("80 - Display")
        interest(1)
        prompt("Post Archive Monitors")
    }
    field(SIOL, DBF_OUTLINK) {
        prompt("Simulation Output Link")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SIML, DBF_INLINK) {
        prompt("Simulation Mode Link")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        prompt("Simulation Mode")
        interest(1)
        special(SPC_MOD)
    }
    field(SIMS, DBF_MENU) {
        promptgroup("90 - Simulate")
        interest(2)
        prompt("Simulation Mode Severity")
        menu(menuAlarmSevr)
    }
    field(OLDSIMM, DBF_MENU) {
        interest(4)
        special(SPC_NOMOD)
        prompt("Prev. Simulation Mode")
        menu(menuSimm)
    }
    field(SSCN, DBF_MENU) {
        prompt("Sim. Mode Scan")
        promptgroup("90 - Simulate")
        interest(1)
        initial("65535")
        menu(menuScan)
    }
    field(SDLY, DBF_DOUBLE) {
        initial("-1.0")
        interest(2)
        promptgroup("90 - Simulate")
        prompt("Sim. Mode Async Delay")
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        extra("epicsCallback            *simpvt")
        special(SPC_NOMOD)
        interest(4)
    }
    field(IVOA, DBF_MENU) {
        promptgroup("50 - Output")
        interest(2)
        prompt("INVALID output action")
        menu(menuIvoa)
    }
    field(IVOV, DBF_STRING) {
        size(40)
        interest(2)
        promptgroup("50 - Output")
        prompt("INVALID output value")
    }
}
device(stringout, CONSTANT, devSoSoft, "Soft Channel")
device(stringout, CONSTANT, devSoSoftCallback, "Async Soft Channel")
device(stringout, INST_IO, devSoStdio, "stdio")
recordtype(permissive) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("Record Name")
        size(61)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        prompt("Descriptor")
        size(41)
    }
    field(ASG, DBF_STRING) {
        size(29)
        special(SPC_AS)
        promptgroup("10 - Common")
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        prompt("Scan Mechanism")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        size(40)
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        promptgroup("20 - Scan")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        interest(4)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
        special(SPC_NOMOD)
    }
    field(AMSG, DBF_STRING) {
        prompt("Alarm Message")
        special(SPC_NOMOD)
        size(40)
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("New Alarm Severity")
        special(SPC_NOMOD)
        interest(2)
    }
    field(NAMSG, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("New Alarm Message")
        size(40)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        interest(2)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        initial("YES")
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        extra("struct typed_rset   *rset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        extra("void                *dpvt")
        special(SPC_NOMOD)
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        interest(4)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        interest(1)
        promptgroup("10 - Common")
        prompt("Undefined")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Undefined Alarm Sevrty")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        extra("epicsTimeStamp      time")
        interest(2)
        special(SPC_NOMOD)
    }
    field(UTAG, DBF_UINT64) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_USHORT) {
        asl(ASL0)
        prompt("Status")
        promptgroup("40 - Input")
        pp(TRUE)
    }
    field(WFLG, DBF_USHORT) {
        pp(TRUE)
        prompt("Wait Flag")
    }
    field(LABL, DBF_STRING) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Button Label")
        size(20)
        pp(TRUE)
    }
    field(OVAL, DBF_USHORT) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Old Status")
    }
    field(OFLG, DBF_USHORT) {
        prompt("Old Flag")
        special(SPC_NOMOD)
        interest(3)
    }
}
recordtype(lsi) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct lsiRecord;
    %typedef struct lsidset {
    %    dset common;
    %    long (*read_string)(struct lsiRecord *prec);
    %} lsidset;
    %#define HAS_lsidset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        size(41)
        prompt("Descriptor")
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        size(29)
        prompt("Access Security Group")
        promptgroup("10 - Common")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        prompt("Scan Mechanism")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        promptgroup("20 - Scan")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        special(SPC_NOMOD)
        extra("ELLLIST             bklnk")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
        special(SPC_NOMOD)
    }
    field(AMSG, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        prompt("Alarm Message")
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        prompt("New Alarm Status")
        special(SPC_NOMOD)
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
    }
    field(NAMSG, DBF_STRING) {
        prompt("New Alarm Message")
        special(SPC_NOMOD)
        size(40)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        interest(4)
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        interest(4)
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        interest(4)
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        prompt("Scheduling Priority")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsUInt8          bkpt")
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        initial("1")
        interest(1)
        promptgroup("10 - Common")
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        interest(2)
        special(SPC_NOMOD)
        prompt("Time")
    }
    field(UTAG, DBF_UINT64) {
        prompt("Time Tag")
        interest(3)
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("char *val")
        prompt("Current Value")
        asl(ASL0)
        pp(TRUE)
    }
    field(OVAL, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("char *oval")
        interest(3)
        prompt("Old Value")
    }
    field(SIZV, DBF_USHORT) {
        prompt("Size of buffers")
        interest(1)
        promptgroup("40 - Input")
        special(SPC_NOMOD)
        initial("41")
    }
    field(LEN, DBF_ULONG) {
        prompt("Length of VAL")
        special(SPC_NOMOD)
    }
    field(OLEN, DBF_ULONG) {
        prompt("Length of OVAL")
        special(SPC_NOMOD)
    }
    field(INP, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Input Specification")
    }
    field(MPST, DBF_MENU) {
        prompt("Post Value Monitors")
        interest(1)
        promptgroup("80 - Display")
        menu(menuPost)
    }
    field(APST, DBF_MENU) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Post Archive Monitors")
        menu(menuPost)
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Simulation Mode Link")
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        special(SPC_MOD)
        interest(1)
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Simulation Mode Severity")
        interest(2)
        promptgroup("90 - Simulate")
    }
    field(SIOL, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Simulation Input Link")
    }
    field(OLDSIMM, DBF_MENU) {
        prompt("Prev. Simulation Mode")
        interest(4)
        special(SPC_NOMOD)
        menu(menuSimm)
    }
    field(SSCN, DBF_MENU) {
        prompt("Sim. Mode Scan")
        initial("65535")
        promptgroup("90 - Simulate")
        interest(1)
        menu(menuScan)
    }
    field(SDLY, DBF_DOUBLE) {
        prompt("Sim. Mode Async Delay")
        interest(2)
        promptgroup("90 - Simulate")
        initial("-1.0")
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        interest(4)
        extra("epicsCallback            *simpvt")
        special(SPC_NOMOD)
    }
}
device(lsi, CONSTANT, devLsiSoft, "Soft Channel")
device(lsi, INST_IO, devLsiEnviron, "getenv")
device(lsi, INST_IO, devtestVersion, "test version")
recordtype(bi) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct biRecord;
    %typedef struct bidset {
    %    dset common;
    %    long (*read_bi)(struct biRecord *prec);
    %} bidset;
    %#define HAS_bidset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        prompt("Record Name")
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        prompt("Descriptor")
        size(41)
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        prompt("Scan Mechanism")
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        size(40)
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        promptgroup("20 - Scan")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        interest(4)
        special(SPC_NOMOD)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        special(SPC_NOMOD)
        extra("ELLLIST             bklnk")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        special(SPC_NOMOD)
        prompt("Alarm Status")
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(AMSG, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        prompt("Alarm Message")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        special(SPC_NOMOD)
        interest(2)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(NAMSG, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        prompt("New Alarm Message")
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        initial("YES")
        promptgroup("70 - Alarm")
        interest(2)
        special(SPC_NOMOD)
    }
    field(DISS, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        special(SPC_NOMOD)
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        special(SPC_NOMOD)
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        interest(4)
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        special(SPC_NOMOD)
        extra("epicsUInt8          bkpt")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        promptgroup("10 - Common")
        initial("1")
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Undefined Alarm Sevrty")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        interest(2)
        prompt("Time")
    }
    field(UTAG, DBF_UINT64) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        interest(1)
        promptgroup("40 - Input")
    }
    field(VAL, DBF_ENUM) {
        pp(TRUE)
        promptgroup("40 - Input")
        prompt("Current Value")
        asl(ASL0)
    }
    field(ZSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Zero Error Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(OSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("One Error Severity")
    }
    field(COSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Change of State Svr")
    }
    field(ZNAM, DBF_STRING) {
        prompt("Zero Name")
        interest(1)
        promptgroup("80 - Display")
        pp(TRUE)
        prop(YES)
        size(26)
    }
    field(ONAM, DBF_STRING) {
        prompt("One Name")
        interest(1)
        promptgroup("80 - Display")
        pp(TRUE)
        prop(YES)
        size(26)
    }
    field(RVAL, DBF_ULONG) {
        prompt("Raw Value")
        pp(TRUE)
    }
    field(ORAW, DBF_ULONG) {
        prompt("prev Raw Value")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MASK, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Hardware Mask")
    }
    field(LALM, DBF_USHORT) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Alarmed")
    }
    field(MLST, DBF_USHORT) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Value Monitored")
    }
    field(SIOL, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Simulation Input Link")
    }
    field(SVAL, DBF_ULONG) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Simulation Mode Link")
    }
    field(SIMM, DBF_MENU) {
        menu(menuSimm)
        interest(1)
        special(SPC_MOD)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("90 - Simulate")
        interest(2)
        prompt("Simulation Mode Severity")
    }
    field(OLDSIMM, DBF_MENU) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Prev. Simulation Mode")
        menu(menuSimm)
    }
    field(SSCN, DBF_MENU) {
        menu(menuScan)
        prompt("Sim. Mode Scan")
        interest(1)
        promptgroup("90 - Simulate")
        initial("65535")
    }
    field(SDLY, DBF_DOUBLE) {
        prompt("Sim. Mode Async Delay")
        interest(2)
        promptgroup("90 - Simulate")
        initial("-1.0")
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        extra("epicsCallback            *simpvt")
        special(SPC_NOMOD)
        interest(4)
    }
}
device(bi, CONSTANT, devBiSoft, "Soft Channel")
device(bi, CONSTANT, devBiSoftRaw, "Raw Soft Channel")
device(bi, CONSTANT, devBiSoftCallback, "Async Soft Channel")
device(bi, INST_IO, devBiDbState, "Db State")
recordtype(subArray) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct subArrayRecord;
    %typedef struct sadset {
    %    dset common; /*init_record returns: (-1,0)=>(failure,success)*/
    %    long (*read_sa)(struct subArrayRecord *prec); /*returns: (-1,0)=>(failure,success)*/
    %} sadset;
    %#define HAS_sadset
    %
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        special(SPC_AS)
        prompt("Access Security Group")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Event Name")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             bklnk")
        interest(4)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        initial("UDF")
        special(SPC_NOMOD)
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(AMSG, DBF_STRING) {
        size(40)
        prompt("Alarm Message")
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        prompt("New Alarm Status")
        special(SPC_NOMOD)
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(NAMSG, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        prompt("New Alarm Message")
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        initial("YES")
        interest(2)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        special(SPC_NOMOD)
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        extra("struct typed_rset   *rset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        interest(4)
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        promptgroup("10 - Common")
        interest(1)
        initial("1")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(UTAG, DBF_UINT64) {
        prompt("Time Tag")
        special(SPC_NOMOD)
        interest(3)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *		val")
        prompt("Value")
        asl(ASL0)
        pp(TRUE)
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(FTVL, DBF_MENU) {
        menu(menuFtype)
        prompt("Field Type of Value")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("30 - Action")
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        interest(1)
        promptgroup("40 - Input")
    }
    field(EGU, DBF_STRING) {
        size(16)
        prop(YES)
        prompt("Engineering Units")
        promptgroup("80 - Display")
        interest(1)
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Range")
        interest(1)
        promptgroup("80 - Display")
        prop(YES)
    }
    field(LOPR, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("Low Operating Range")
    }
    field(MALM, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("30 - Action")
        initial("1")
        prompt("Maximum Elements")
    }
    field(NELM, DBF_ULONG) {
        pp(TRUE)
        initial("1")
        promptgroup("30 - Action")
        prompt("Number of Elements")
    }
    field(INDX, DBF_ULONG) {
        pp(TRUE)
        promptgroup("30 - Action")
        prompt("Substring Index")
    }
    field(BUSY, DBF_SHORT) {
        prompt("Busy Indicator")
        special(SPC_NOMOD)
    }
    field(NORD, DBF_LONG) {
        special(SPC_NOMOD)
        prompt("Number elements read")
    }
    field(BPTR, DBF_NOACCESS) {
        extra("void *		bptr")
        interest(4)
        special(SPC_NOMOD)
        prompt("Buffer Pointer")
    }
}
device(subArray, CONSTANT, devSASoft, "Soft Channel")
recordtype(bo) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct boRecord;
    %typedef struct bodset {
    %    dset common; /*init_record returns:(0,2)=>(success,success no convert*/
    %    long (*write_bo)(struct boRecord *prec); /*returns: (-1,0)=>(failure,success)*/
    %} bodset;
    %#define HAS_bodset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Event Name")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        promptgroup("20 - Scan")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        prompt("Alarm Message")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NAMSG, DBF_STRING) {
        prompt("New Alarm Message")
        special(SPC_NOMOD)
        size(40)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_NOMOD)
        interest(2)
        promptgroup("70 - Alarm")
        initial("YES")
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        special(SPC_NOMOD)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        extra("struct typed_rset   *rset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        interest(4)
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        promptgroup("10 - Common")
        interest(1)
        prompt("Undefined")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(UTAG, DBF_UINT64) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_ENUM) {
        promptgroup("50 - Output")
        asl(ASL0)
        prompt("Current Value")
        pp(TRUE)
    }
    field(OMSL, DBF_MENU) {
        menu(menuOmsl)
        prompt("Output Mode Select")
        promptgroup("50 - Output")
        interest(1)
    }
    field(DOL, DBF_INLINK) {
        prompt("Desired Output Loc")
        promptgroup("40 - Input")
        interest(1)
    }
    field(OUT, DBF_OUTLINK) {
        interest(1)
        promptgroup("50 - Output")
        prompt("Output Specification")
    }
    field(HIGH, DBF_DOUBLE) {
        promptgroup("30 - Action")
        interest(1)
        prompt("Seconds to Hold High")
    }
    field(ZNAM, DBF_STRING) {
        pp(TRUE)
        size(26)
        prop(YES)
        prompt("Zero Name")
        promptgroup("80 - Display")
        interest(1)
    }
    field(ONAM, DBF_STRING) {
        pp(TRUE)
        prop(YES)
        size(26)
        prompt("One Name")
        promptgroup("80 - Display")
        interest(1)
    }
    field(RVAL, DBF_ULONG) {
        pp(TRUE)
        prompt("Raw Value")
    }
    field(ORAW, DBF_ULONG) {
        prompt("prev Raw Value")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MASK, DBF_ULONG) {
        prompt("Hardware Mask")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPVT, DBF_NOACCESS) {
        extra("void *  rpvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Record Private")
    }
    field(WDPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *	wdpt")
        interest(4)
        prompt("Watch Dog Timer ID")
    }
    field(ZSV, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Zero Error Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(OSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("One Error Severity")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(COSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("Change of State Sevr")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(RBV, DBF_ULONG) {
        prompt("Readback Value")
        special(SPC_NOMOD)
    }
    field(ORBV, DBF_ULONG) {
        prompt("Prev Readback Value")
        special(SPC_NOMOD)
        interest(3)
    }
    field(MLST, DBF_USHORT) {
        prompt("Last Value Monitored")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LALM, DBF_USHORT) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Value Alarmed")
    }
    field(SIOL, DBF_OUTLINK) {
        prompt("Simulation Output Link")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Simulation Mode Link")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        prompt("Simulation Mode")
        special(SPC_MOD)
        interest(1)
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Simulation Mode Severity")
        promptgroup("90 - Simulate")
        interest(2)
    }
    field(OLDSIMM, DBF_MENU) {
        prompt("Prev. Simulation Mode")
        special(SPC_NOMOD)
        interest(4)
        menu(menuSimm)
    }
    field(SSCN, DBF_MENU) {
        menu(menuScan)
        prompt("Sim. Mode Scan")
        interest(1)
        promptgroup("90 - Simulate")
        initial("65535")
    }
    field(SDLY, DBF_DOUBLE) {
        promptgroup("90 - Simulate")
        interest(2)
        initial("-1.0")
        prompt("Sim. Mode Async Delay")
    }
    field(SIMPVT, DBF_NOACCESS) {
        interest(4)
        extra("epicsCallback            *simpvt")
        special(SPC_NOMOD)
        prompt("Sim. Mode Private")
    }
    field(IVOA, DBF_MENU) {
        prompt("INVALID outpt action")
        interest(2)
        promptgroup("50 - Output")
        menu(menuIvoa)
    }
    field(IVOV, DBF_USHORT) {
        prompt("INVALID output value")
        interest(2)
        promptgroup("50 - Output")
    }
}
device(bo, CONSTANT, devBoSoft, "Soft Channel")
device(bo, CONSTANT, devBoSoftRaw, "Raw Soft Channel")
device(bo, CONSTANT, devBoSoftCallback, "Async Soft Channel")
device(bo, INST_IO, devBoGeneralTime, "General Time")
device(bo, INST_IO, devBoDbState, "Db State")
recordtype(printf) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct printfRecord;
    %typedef struct printfdset {
    %    dset common;
    %    long (*write_string)(struct printfRecord *prec);
    %} printfdset;
    %#define HAS_printfdset
    %
    %/* Number of INPx fields defined */
    %#define PRINTF_NLINKS 10
    field(NAME, DBF_STRING) {
        size(61)
        prompt("Record Name")
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        prompt("Descriptor")
        size(41)
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        promptgroup("10 - Common")
        prompt("Access Security Group")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Mechanism")
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        size(40)
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        initial("UDF")
        special(SPC_NOMOD)
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        prompt("Alarm Message")
        special(SPC_NOMOD)
        size(40)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NAMSG, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        prompt("New Alarm Message")
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        special(SPC_NOMOD)
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        special(SPC_NOMOD)
        extra("epicsUInt8          bkpt")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        prompt("Undefined")
        interest(1)
        promptgroup("10 - Common")
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        initial("INVALID")
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        interest(2)
    }
    field(UTAG, DBF_UINT64) {
        prompt("Time Tag")
        interest(3)
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_NOACCESS) {
        pp(TRUE)
        extra("char *val")
        special(SPC_DBADDR)
        prompt("Result")
        asl(ASL0)
    }
    field(SIZV, DBF_USHORT) {
        prompt("Size of VAL buffer")
        initial("41")
        interest(1)
        promptgroup("30 - Action")
        special(SPC_NOMOD)
    }
    field(LEN, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Length of VAL")
    }
    field(OUT, DBF_OUTLINK) {
        prompt("Output Specification")
        interest(1)
        promptgroup("50 - Output")
    }
    field(FMT, DBF_STRING) {
        size(81)
        pp(TRUE)
        promptgroup("30 - Action")
        prompt("Format String")
    }
    field(IVLS, DBF_STRING) {
        initial("LNK")
        promptgroup("30 - Action")
        prompt("Invalid Link String")
        size(16)
    }
    field(INP0, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Input 0")
    }
    field(INP1, DBF_INLINK) {
        prompt("Input 1")
        interest(1)
        promptgroup("40 - Input")
    }
    field(INP2, DBF_INLINK) {
        interest(1)
        promptgroup("40 - Input")
        prompt("Input 2")
    }
    field(INP3, DBF_INLINK) {
        interest(1)
        promptgroup("40 - Input")
        prompt("Input 3")
    }
    field(INP4, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Input 4")
    }
    field(INP5, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Input 5")
    }
    field(INP6, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Input 6")
    }
    field(INP7, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Input 7")
    }
    field(INP8, DBF_INLINK) {
        interest(1)
        promptgroup("40 - Input")
        prompt("Input 8")
    }
    field(INP9, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Input 9")
    }
}
device(printf, CONSTANT, devPrintfSoft, "Soft Channel")
device(printf, CONSTANT, devPrintfSoftCallback, "Async Soft Channel")
device(printf, INST_IO, devPrintfStdio, "stdio")
recordtype(mbbiDirect) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %/* Declare Device Support Entry Table */
    %struct mbbiDirectRecord;
    %typedef struct mbbidirectdset {
    %    dset common; /* init_record returns: (-1,0) => (failure, success)*/
    %    long (*read_mbbi)(struct mbbiDirectRecord *prec); /* (0, 2) => (success, success no convert)*/
    %} mbbidirectdset;
    %#define HAS_mbbidirectdset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        prompt("Record Name")
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        special(SPC_AS)
        size(29)
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Event Name")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        promptgroup("20 - Scan")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        interest(4)
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        interest(4)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        special(SPC_NOMOD)
        initial("UDF")
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("Alarm Message")
        size(40)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        interest(2)
        special(SPC_NOMOD)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        special(SPC_NOMOD)
        interest(2)
        menu(menuAlarmSevr)
    }
    field(NAMSG, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        prompt("New Alarm Message")
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        initial("YES")
        promptgroup("70 - Alarm")
        interest(2)
        special(SPC_NOMOD)
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        special(SPC_NOMOD)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        interest(4)
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        interest(1)
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("10 - Common")
        interest(1)
        initial("1")
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        initial("INVALID")
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(UTAG, DBF_UINT64) {
        prompt("Time Tag")
        special(SPC_NOMOD)
        interest(3)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_LONG) {
        pp(TRUE)
        asl(ASL0)
        prompt("Current Value")
        promptgroup("40 - Input")
    }
    field(NOBT, DBF_SHORT) {
        interest(1)
        special(SPC_NOMOD)
        promptgroup("40 - Input")
        prompt("Number of Bits")
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        interest(1)
        promptgroup("40 - Input")
    }
    field(RVAL, DBF_ULONG) {
        pp(TRUE)
        prompt("Raw Value")
    }
    field(ORAW, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Raw Value")
    }
    field(MASK, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Hardware Mask")
    }
    field(MLST, DBF_LONG) {
        prompt("Last Value Monitored")
        interest(3)
        special(SPC_NOMOD)
    }
    field(SHFT, DBF_USHORT) {
        prompt("Shift")
        interest(1)
        promptgroup("40 - Input")
    }
    field(SIOL, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Simulation Input Link")
    }
    field(SVAL, DBF_LONG) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Simulation Mode Link")
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        interest(1)
        special(SPC_MOD)
        menu(menuSimm)
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Simulation Mode Severity")
        interest(2)
        promptgroup("90 - Simulate")
    }
    field(OLDSIMM, DBF_MENU) {
        menu(menuSimm)
        special(SPC_NOMOD)
        interest(4)
        prompt("Prev. Simulation Mode")
    }
    field(SSCN, DBF_MENU) {
        menu(menuScan)
        prompt("Sim. Mode Scan")
        initial("65535")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SDLY, DBF_DOUBLE) {
        prompt("Sim. Mode Async Delay")
        initial("-1.0")
        promptgroup("90 - Simulate")
        interest(2)
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        extra("epicsCallback            *simpvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(B0, DBF_UCHAR) {
        prompt("Bit 0")
        interest(1)
        pp(TRUE)
    }
    field(B1, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 1")
        interest(1)
    }
    field(B2, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 2")
        interest(1)
    }
    field(B3, DBF_UCHAR) {
        interest(1)
        prompt("Bit 3")
        pp(TRUE)
    }
    field(B4, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        prompt("Bit 4")
    }
    field(B5, DBF_UCHAR) {
        prompt("Bit 5")
        interest(1)
        pp(TRUE)
    }
    field(B6, DBF_UCHAR) {
        interest(1)
        prompt("Bit 6")
        pp(TRUE)
    }
    field(B7, DBF_UCHAR) {
        interest(1)
        prompt("Bit 7")
        pp(TRUE)
    }
    field(B8, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        prompt("Bit 8")
    }
    field(B9, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        prompt("Bit 9")
    }
    field(BA, DBF_UCHAR) {
        interest(1)
        prompt("Bit 10")
        pp(TRUE)
    }
    field(BB, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        prompt("Bit 11")
    }
    field(BC, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        prompt("Bit 12")
    }
    field(BD, DBF_UCHAR) {
        prompt("Bit 13")
        interest(1)
        pp(TRUE)
    }
    field(BE, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        prompt("Bit 14")
    }
    field(BF, DBF_UCHAR) {
        prompt("Bit 15")
        interest(1)
        pp(TRUE)
    }
    field(B10, DBF_UCHAR) {
        interest(1)
        prompt("Bit 16")
        pp(TRUE)
    }
    field(B11, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        prompt("Bit 17")
    }
    field(B12, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 18")
        interest(1)
    }
    field(B13, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 19")
        interest(1)
    }
    field(B14, DBF_UCHAR) {
        prompt("Bit 20")
        interest(1)
        pp(TRUE)
    }
    field(B15, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        prompt("Bit 21")
    }
    field(B16, DBF_UCHAR) {
        interest(1)
        prompt("Bit 22")
        pp(TRUE)
    }
    field(B17, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        prompt("Bit 23")
    }
    field(B18, DBF_UCHAR) {
        interest(1)
        prompt("Bit 24")
        pp(TRUE)
    }
    field(B19, DBF_UCHAR) {
        interest(1)
        prompt("Bit 25")
        pp(TRUE)
    }
    field(B1A, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 26")
        interest(1)
    }
    field(B1B, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        prompt("Bit 27")
    }
    field(B1C, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        prompt("Bit 28")
    }
    field(B1D, DBF_UCHAR) {
        interest(1)
        prompt("Bit 29")
        pp(TRUE)
    }
    field(B1E, DBF_UCHAR) {
        prompt("Bit 30")
        interest(1)
        pp(TRUE)
    }
    field(B1F, DBF_UCHAR) {
        prompt("Bit 31")
        interest(1)
        pp(TRUE)
    }
}
device(mbbiDirect, CONSTANT, devMbbiDirectSoft, "Soft Channel")
device(mbbiDirect, CONSTANT, devMbbiDirectSoftRaw, "Raw Soft Channel")
device(mbbiDirect, CONSTANT, devMbbiDirectSoftCallback, "Async Soft Channel")
recordtype(state) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        size(29)
        prompt("Access Security Group")
        special(SPC_AS)
        promptgroup("10 - Common")
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        promptgroup("20 - Scan")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        special(SPC_NOMOD)
        extra("ELLLIST             bklnk")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        prompt("Alarm Status")
        special(SPC_NOMOD)
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        prompt("Alarm Message")
        special(SPC_NOMOD)
        size(40)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NAMSG, DBF_STRING) {
        size(40)
        prompt("New Alarm Message")
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        special(SPC_NOMOD)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        special(SPC_NOMOD)
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        interest(4)
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        extra("void                *dpvt")
        special(SPC_NOMOD)
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        promptgroup("10 - Common")
        interest(1)
        prompt("Undefined")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        initial("INVALID")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
        prompt("Time")
    }
    field(UTAG, DBF_UINT64) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_STRING) {
        size(20)
        pp(TRUE)
        promptgroup("40 - Input")
        asl(ASL0)
        prompt("Value")
    }
    field(OVAL, DBF_STRING) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value")
        size(20)
    }
}
recordtype(histogram) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct histogramRecord;
    %typedef struct histogramdset {
    %    dset common; /*init_record returns: (-1,0)=>(failure,success)*/
    %    long (*read_histogram)(struct histogramRecord *prec); /*(0,2)=> success and add_count, don't add_count); if add_count then sgnl added to array*/
    %    long (*special_linconv)(struct histogramRecord *prec, int after);
    %} histogramdset;
    %#define HAS_histogramdset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("Record Name")
        size(61)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        special(SPC_AS)
        prompt("Access Security Group")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Event Name")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        interest(4)
        special(SPC_NOMOD)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        extra("ELLLIST             bklnk")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        size(40)
        prompt("Alarm Message")
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
    }
    field(NAMSG, DBF_STRING) {
        prompt("New Alarm Message")
        special(SPC_NOMOD)
        size(40)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(2)
        special(SPC_NOMOD)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        initial("YES")
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        prompt("Scheduling Priority")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("10 - Common")
        interest(1)
        initial("1")
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        initial("INVALID")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        extra("epicsTimeStamp      time")
        interest(2)
        special(SPC_NOMOD)
    }
    field(UTAG, DBF_UINT64) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Value")
        extra("void *	val")
        special(SPC_DBADDR)
    }
    field(NELM, DBF_USHORT) {
        prompt("Num of Array Elements")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("30 - Action")
    }
    field(CSTA, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        prompt("Collection Status")
    }
    field(CMD, DBF_MENU) {
        menu(histogramCMD)
        special(SPC_CALC)
        interest(1)
        prompt("Collection Control")
        asl(ASL0)
    }
    field(ULIM, DBF_DOUBLE) {
        promptgroup("30 - Action")
        interest(1)
        special(SPC_RESET)
        prompt("Upper Signal Limit")
        prop(YES)
    }
    field(LLIM, DBF_DOUBLE) {
        prompt("Lower Signal Limit ")
        promptgroup("30 - Action")
        interest(1)
        special(SPC_RESET)
        prop(YES)
    }
    field(WDTH, DBF_DOUBLE) {
        prompt("Element Width")
        special(SPC_NOMOD)
        interest(3)
    }
    field(SGNL, DBF_DOUBLE) {
        special(SPC_MOD)
        prompt("Signal Value")
    }
    field(PREC, DBF_SHORT) {
        prop(YES)
        prompt("Display Precision")
        interest(1)
        promptgroup("80 - Display")
    }
    field(SVL, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Signal Value Location")
    }
    field(BPTR, DBF_NOACCESS) {
        extra("epicsUInt32 *bptr")
        special(SPC_NOMOD)
        interest(4)
        prompt("Buffer Pointer")
    }
    field(WDOG, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *  wdog")
        interest(4)
        prompt("Watchdog callback")
    }
    field(MDEL, DBF_SHORT) {
        prompt("Monitor Count Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(MCNT, DBF_SHORT) {
        prompt("Counts Since Monitor")
        special(SPC_NOMOD)
        interest(3)
    }
    field(SDEL, DBF_DOUBLE) {
        interest(1)
        promptgroup("80 - Display")
        special(SPC_RESET)
        prompt("Monitor Seconds Dband")
    }
    field(SIOL, DBF_INLINK) {
        prompt("Simulation Input Link")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SVAL, DBF_DOUBLE) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Simulation Mode Link")
    }
    field(SIMM, DBF_MENU) {
        interest(1)
        special(SPC_MOD)
        prompt("Simulation Mode")
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        promptgroup("90 - Simulate")
        interest(2)
        prompt("Simulation Mode Severity")
        menu(menuAlarmSevr)
    }
    field(OLDSIMM, DBF_MENU) {
        interest(4)
        special(SPC_NOMOD)
        prompt("Prev. Simulation Mode")
        menu(menuSimm)
    }
    field(SSCN, DBF_MENU) {
        menu(menuScan)
        interest(1)
        promptgroup("90 - Simulate")
        initial("65535")
        prompt("Sim. Mode Scan")
    }
    field(SDLY, DBF_DOUBLE) {
        prompt("Sim. Mode Async Delay")
        initial("-1.0")
        promptgroup("90 - Simulate")
        interest(2)
    }
    field(SIMPVT, DBF_NOACCESS) {
        interest(4)
        extra("epicsCallback            *simpvt")
        special(SPC_NOMOD)
        prompt("Sim. Mode Private")
    }
    field(HOPR, DBF_ULONG) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("High Operating Range")
    }
    field(LOPR, DBF_ULONG) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("Low Operating Range")
    }
}
device(histogram, CONSTANT, devHistogramSoft, "Soft Channel")
recordtype(longin) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct longinRecord;
    %typedef struct longindset {
    %    dset common; /*init_record returns: (-1,0)=>(failure,success)*/
    %    long (*read_longin)(struct longinRecord *prec); /*returns: (-1,0)=>(failure,success)*/
    %} longindset;
    %#define HAS_longindset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        special(SPC_AS)
        size(29)
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        size(40)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        promptgroup("20 - Scan")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        extra("ELLLIST             bklnk")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        prompt("Alarm Message")
        special(SPC_NOMOD)
        size(40)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        special(SPC_NOMOD)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NAMSG, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("New Alarm Message")
        size(40)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        special(SPC_NOMOD)
        interest(2)
        promptgroup("70 - Alarm")
        initial("YES")
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        promptgroup("10 - Common")
        interest(1)
        initial("1")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        initial("INVALID")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(UTAG, DBF_UINT64) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_LONG) {
        pp(TRUE)
        asl(ASL0)
        prompt("Current value")
        promptgroup("40 - Input")
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        promptgroup("40 - Input")
        interest(1)
    }
    field(EGU, DBF_STRING) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Engineering Units")
        size(16)
        prop(YES)
    }
    field(HOPR, DBF_LONG) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("High Operating Range")
    }
    field(LOPR, DBF_LONG) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Low Operating Range")
        prop(YES)
    }
    field(HIHI, DBF_LONG) {
        prop(YES)
        pp(TRUE)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Hihi Alarm Limit")
    }
    field(LOLO, DBF_LONG) {
        prop(YES)
        pp(TRUE)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Lolo Alarm Limit")
    }
    field(HIGH, DBF_LONG) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("High Alarm Limit")
        prop(YES)
        pp(TRUE)
    }
    field(LOW, DBF_LONG) {
        pp(TRUE)
        prop(YES)
        prompt("Low Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(HHSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Hihi Severity")
    }
    field(LLSV, DBF_MENU) {
        prompt("Lolo Severity")
        promptgroup("70 - Alarm")
        interest(1)
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(HSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("High Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(LSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Low Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(HYST, DBF_LONG) {
        prompt("Alarm Deadband")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(AFTC, DBF_DOUBLE) {
        prompt("Alarm Filter Time Constant")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(AFVL, DBF_DOUBLE) {
        prompt("Alarm Filter Value")
        special(SPC_NOMOD)
        interest(3)
    }
    field(ADEL, DBF_LONG) {
        prompt("Archive Deadband")
        interest(1)
        promptgroup("80 - Display")
    }
    field(MDEL, DBF_LONG) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Monitor Deadband")
    }
    field(LALM, DBF_LONG) {
        prompt("Last Value Alarmed")
        special(SPC_NOMOD)
        interest(3)
    }
    field(ALST, DBF_LONG) {
        prompt("Last Value Archived")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_LONG) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Val Monitored")
    }
    field(SIOL, DBF_INLINK) {
        prompt("Sim Input Specifctn")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SVAL, DBF_LONG) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Sim Mode Location")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        prompt("Simulation Mode")
        special(SPC_MOD)
        interest(1)
    }
    field(SIMS, DBF_MENU) {
        interest(2)
        promptgroup("90 - Simulate")
        prompt("Sim mode Alarm Svrty")
        menu(menuAlarmSevr)
    }
    field(OLDSIMM, DBF_MENU) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Prev. Simulation Mode")
        menu(menuSimm)
    }
    field(SSCN, DBF_MENU) {
        initial("65535")
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Sim. Mode Scan")
        menu(menuScan)
    }
    field(SDLY, DBF_DOUBLE) {
        prompt("Sim. Mode Async Delay")
        initial("-1.0")
        interest(2)
        promptgroup("90 - Simulate")
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        interest(4)
        extra("epicsCallback            *simpvt")
        special(SPC_NOMOD)
    }
}
device(longin, CONSTANT, devLiSoft, "Soft Channel")
device(longin, CONSTANT, devLiSoftCallback, "Async Soft Channel")
device(longin, INST_IO, devLiGeneralTime, "General Time")
recordtype(ao) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct aoRecord;
    %typedef struct aodset {
    %    dset common; /*init_record returns: (0,2)=>(success,success no convert)*/
    %    long (*write_ao)(struct aoRecord *prec); /*(0)=>(success ) */
    %    long (*special_linconv)(struct aoRecord *prec, int after);
    %} aodset;
    %#define HAS_aodset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        prompt("Record Name")
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        size(41)
        prompt("Descriptor")
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        size(29)
        prompt("Access Security Group")
        promptgroup("10 - Common")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        size(40)
        prompt("Event Name")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        promptgroup("20 - Scan")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        interest(4)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        interest(4)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        size(40)
        prompt("Alarm Message")
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        prompt("New Alarm Status")
        special(SPC_NOMOD)
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
    }
    field(NAMSG, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("New Alarm Message")
        size(40)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        special(SPC_NOMOD)
        interest(2)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        initial("YES")
        promptgroup("70 - Alarm")
        interest(2)
        special(SPC_NOMOD)
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        special(SPC_NOMOD)
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        special(SPC_NOMOD)
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        interest(4)
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        interest(4)
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        prompt("Scheduling Priority")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("10 - Common")
        interest(1)
        initial("1")
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        initial("INVALID")
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        interest(2)
        prompt("Time")
    }
    field(UTAG, DBF_UINT64) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_DOUBLE) {
        promptgroup("50 - Output")
        prompt("Desired Output")
        asl(ASL0)
        pp(TRUE)
    }
    field(OVAL, DBF_DOUBLE) {
        prompt("Output Value")
    }
    field(OUT, DBF_OUTLINK) {
        prompt("Output Specification")
        promptgroup("50 - Output")
        interest(1)
    }
    field(OROC, DBF_DOUBLE) {
        interest(1)
        promptgroup("50 - Output")
        prompt("Output Rate of Change")
    }
    field(DOL, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Desired Output Loc")
    }
    field(OMSL, DBF_MENU) {
        promptgroup("50 - Output")
        interest(1)
        prompt("Output Mode Select")
        menu(menuOmsl)
    }
    field(OIF, DBF_MENU) {
        prompt("Out Full/Incremental")
        promptgroup("50 - Output")
        interest(1)
        menu(aoOIF)
    }
    field(PREC, DBF_SHORT) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("Display Precision")
    }
    field(LINR, DBF_MENU) {
        menu(menuConvert)
        pp(TRUE)
        interest(1)
        promptgroup("60 - Convert")
        special(SPC_LINCONV)
        prompt("Linearization")
    }
    field(EGUF, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        special(SPC_LINCONV)
        prompt("Eng Units Full")
        pp(TRUE)
    }
    field(EGUL, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Eng Units Low")
        interest(1)
        special(SPC_LINCONV)
        promptgroup("60 - Convert")
    }
    field(EGU, DBF_STRING) {
        prompt("Engineering Units")
        interest(1)
        promptgroup("80 - Display")
        size(16)
        prop(YES)
    }
    field(ROFF, DBF_ULONG) {
        prompt("Raw Offset")
        interest(2)
        pp(TRUE)
    }
    field(EOFF, DBF_DOUBLE) {
        prompt("EGU to Raw Offset")
        interest(2)
        promptgroup("60 - Convert")
        pp(TRUE)
    }
    field(ESLO, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("60 - Convert")
        interest(2)
        initial("1")
        prompt("EGU to Raw Slope")
    }
    field(DRVH, DBF_DOUBLE) {
        prop(YES)
        pp(TRUE)
        promptgroup("30 - Action")
        interest(1)
        prompt("Drive High Limit")
    }
    field(DRVL, DBF_DOUBLE) {
        prompt("Drive Low Limit")
        promptgroup("30 - Action")
        interest(1)
        pp(TRUE)
        prop(YES)
    }
    field(HOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        interest(1)
        prompt("High Operating Range")
        prop(YES)
    }
    field(LOPR, DBF_DOUBLE) {
        prompt("Low Operating Range")
        interest(1)
        promptgroup("80 - Display")
        prop(YES)
    }
    field(AOFF, DBF_DOUBLE) {
        prompt("Adjustment Offset")
        interest(1)
        promptgroup("60 - Convert")
        pp(TRUE)
    }
    field(ASLO, DBF_DOUBLE) {
        interest(1)
        promptgroup("60 - Convert")
        prompt("Adjustment Slope")
        pp(TRUE)
    }
    field(HIHI, DBF_DOUBLE) {
        prop(YES)
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Hihi Alarm Limit")
    }
    field(LOLO, DBF_DOUBLE) {
        pp(TRUE)
        prop(YES)
        prompt("Lolo Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(HIGH, DBF_DOUBLE) {
        prop(YES)
        pp(TRUE)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("High Alarm Limit")
    }
    field(LOW, DBF_DOUBLE) {
        prop(YES)
        pp(TRUE)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Alarm Limit")
    }
    field(HHSV, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Hihi Severity")
        prop(YES)
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(LLSV, DBF_MENU) {
        prompt("Lolo Severity")
        promptgroup("70 - Alarm")
        interest(1)
        pp(TRUE)
        menu(menuAlarmSevr)
        prop(YES)
    }
    field(HSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        prop(YES)
        prompt("High Severity")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        prop(YES)
        prompt("Low Severity")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(HYST, DBF_DOUBLE) {
        prompt("Alarm Deadband")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(ADEL, DBF_DOUBLE) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Archive Deadband")
    }
    field(MDEL, DBF_DOUBLE) {
        prompt("Monitor Deadband")
        interest(1)
        promptgroup("80 - Display")
    }
    field(RVAL, DBF_LONG) {
        pp(TRUE)
        prompt("Current Raw Value")
    }
    field(ORAW, DBF_LONG) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Previous Raw Value")
    }
    field(RBV, DBF_LONG) {
        special(SPC_NOMOD)
        prompt("Readback Value")
    }
    field(ORBV, DBF_LONG) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Readback Value")
    }
    field(PVAL, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Previous value")
    }
    field(LALM, DBF_DOUBLE) {
        prompt("Last Value Alarmed")
        interest(3)
        special(SPC_NOMOD)
    }
    field(ALST, DBF_DOUBLE) {
        prompt("Last Value Archived")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Val Monitored")
    }
    field(PBRK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *   pbrk")
        interest(4)
        prompt("Ptrto brkTable")
    }
    field(INIT, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Initialized?")
    }
    field(LBRK, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(3)
        prompt("LastBreak Point")
    }
    field(SIOL, DBF_OUTLINK) {
        prompt("Simulation Output Link")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Simulation Mode Link")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        interest(1)
        special(SPC_MOD)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(2)
        promptgroup("90 - Simulate")
        prompt("Simulation Mode Severity")
    }
    field(OLDSIMM, DBF_MENU) {
        menu(menuSimm)
        prompt("Prev. Simulation Mode")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SSCN, DBF_MENU) {
        initial("65535")
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Sim. Mode Scan")
        menu(menuScan)
    }
    field(SDLY, DBF_DOUBLE) {
        prompt("Sim. Mode Async Delay")
        promptgroup("90 - Simulate")
        interest(2)
        initial("-1.0")
    }
    field(SIMPVT, DBF_NOACCESS) {
        interest(4)
        extra("epicsCallback            *simpvt")
        special(SPC_NOMOD)
        prompt("Sim. Mode Private")
    }
    field(IVOA, DBF_MENU) {
        interest(2)
        promptgroup("50 - Output")
        prompt("INVALID output action")
        menu(menuIvoa)
    }
    field(IVOV, DBF_DOUBLE) {
        prompt("INVALID output value")
        interest(2)
        promptgroup("50 - Output")
    }
    field(OMOD, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Was OVAL modified?")
    }
}
device(ao, CONSTANT, devAoSoft, "Soft Channel")
device(ao, CONSTANT, devAoSoftRaw, "Raw Soft Channel")
device(ao, CONSTANT, devAoSoftCallback, "Async Soft Channel")
recordtype(mbboDirect) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %/* Declare Device Support Entry Table */
    %struct mbboDirectRecord;
    %typedef struct mbbodirectdset {
    %    dset common; /*init_record returns: (0, 2)=>(success, success no convert)*/
    %    long (*write_mbbo)(struct mbboDirectRecord *prec); /*returns: (0, 2)=>(success, success no convert)*/
    %} mbbodirectdset;
    %#define HAS_mbbodirectdset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        size(41)
        prompt("Descriptor")
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        size(29)
        prompt("Access Security Group")
        special(SPC_AS)
        promptgroup("10 - Common")
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        promptgroup("20 - Scan")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        interest(4)
    }
    field(BKLNK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             bklnk")
        interest(4)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        prompt("Alarm Status")
        special(SPC_NOMOD)
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("Alarm Message")
        size(40)
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NAMSG, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("New Alarm Message")
        size(40)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        special(SPC_NOMOD)
        interest(2)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        initial("YES")
        special(SPC_NOMOD)
        interest(2)
        promptgroup("70 - Alarm")
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        special(SPC_NOMOD)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        special(SPC_NOMOD)
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        special(SPC_NOMOD)
        interest(4)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        prompt("Scheduling Priority")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        interest(1)
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        initial("1")
        promptgroup("10 - Common")
        interest(1)
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
    }
    field(UTAG, DBF_UINT64) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_LONG) {
        pp(TRUE)
        promptgroup("50 - Output")
        prompt("Word")
        asl(ASL0)
    }
    field(OMSL, DBF_MENU) {
        menu(menuOmsl)
        pp(TRUE)
        prompt("Output Mode Select")
        interest(1)
        special(SPC_RESET)
        promptgroup("50 - Output")
    }
    field(NOBT, DBF_SHORT) {
        prompt("Number of Bits")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("50 - Output")
    }
    field(DOL, DBF_INLINK) {
        prompt("Desired Output Loc")
        promptgroup("40 - Input")
        interest(1)
    }
    field(OUT, DBF_OUTLINK) {
        interest(1)
        promptgroup("50 - Output")
        prompt("Output Specification")
    }
    field(RVAL, DBF_ULONG) {
        prompt("Raw Value")
        special(SPC_NOMOD)
        pp(TRUE)
    }
    field(ORAW, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Raw Value")
    }
    field(RBV, DBF_ULONG) {
        prompt("Readback Value")
        special(SPC_NOMOD)
    }
    field(ORBV, DBF_ULONG) {
        prompt("Prev Readback Value")
        special(SPC_NOMOD)
        interest(3)
    }
    field(MASK, DBF_ULONG) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Hardware Mask")
    }
    field(MLST, DBF_LONG) {
        prompt("Last Value Monitored")
        interest(3)
        special(SPC_NOMOD)
    }
    field(SHFT, DBF_USHORT) {
        prompt("Shift")
        promptgroup("50 - Output")
        interest(1)
    }
    field(SIOL, DBF_OUTLINK) {
        prompt("Simulation Output Link")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SIML, DBF_INLINK) {
        prompt("Simulation Mode Link")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        prompt("Simulation Mode")
        special(SPC_MOD)
        interest(1)
    }
    field(SIMS, DBF_MENU) {
        promptgroup("90 - Simulate")
        interest(2)
        prompt("Simulation Mode Severity")
        menu(menuAlarmSevr)
    }
    field(OLDSIMM, DBF_MENU) {
        menu(menuSimm)
        prompt("Prev. Simulation Mode")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SSCN, DBF_MENU) {
        menu(menuScan)
        prompt("Sim. Mode Scan")
        interest(1)
        promptgroup("90 - Simulate")
        initial("65535")
    }
    field(SDLY, DBF_DOUBLE) {
        interest(2)
        promptgroup("90 - Simulate")
        initial("-1.0")
        prompt("Sim. Mode Async Delay")
    }
    field(SIMPVT, DBF_NOACCESS) {
        interest(4)
        extra("epicsCallback            *simpvt")
        special(SPC_NOMOD)
        prompt("Sim. Mode Private")
    }
    field(IVOA, DBF_MENU) {
        menu(menuIvoa)
        prompt("INVALID outpt action")
        interest(2)
        promptgroup("50 - Output")
    }
    field(IVOV, DBF_LONG) {
        interest(2)
        promptgroup("50 - Output")
        prompt("INVALID output value")
    }
    field(B0, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 0")
        promptgroup("51 - Output 0-7")
        interest(1)
        special(SPC_MOD)
    }
    field(B1, DBF_UCHAR) {
        promptgroup("51 - Output 0-7")
        interest(1)
        special(SPC_MOD)
        prompt("Bit 1")
        pp(TRUE)
    }
    field(B2, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 2")
        interest(1)
        special(SPC_MOD)
        promptgroup("51 - Output 0-7")
    }
    field(B3, DBF_UCHAR) {
        interest(1)
        promptgroup("51 - Output 0-7")
        special(SPC_MOD)
        prompt("Bit 3")
        pp(TRUE)
    }
    field(B4, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 4")
        interest(1)
        promptgroup("51 - Output 0-7")
        special(SPC_MOD)
    }
    field(B5, DBF_UCHAR) {
        prompt("Bit 5")
        interest(1)
        promptgroup("51 - Output 0-7")
        special(SPC_MOD)
        pp(TRUE)
    }
    field(B6, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 6")
        special(SPC_MOD)
        interest(1)
        promptgroup("51 - Output 0-7")
    }
    field(B7, DBF_UCHAR) {
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        promptgroup("51 - Output 0-7")
        prompt("Bit 7")
    }
    field(B8, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("52 - Output 8-15")
        interest(1)
        special(SPC_MOD)
        prompt("Bit 8")
    }
    field(B9, DBF_UCHAR) {
        prompt("Bit 9")
        special(SPC_MOD)
        interest(1)
        promptgroup("52 - Output 8-15")
        pp(TRUE)
    }
    field(BA, DBF_UCHAR) {
        promptgroup("52 - Output 8-15")
        interest(1)
        special(SPC_MOD)
        prompt("Bit 10")
        pp(TRUE)
    }
    field(BB, DBF_UCHAR) {
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        promptgroup("52 - Output 8-15")
        prompt("Bit 11")
    }
    field(BC, DBF_UCHAR) {
        promptgroup("52 - Output 8-15")
        interest(1)
        special(SPC_MOD)
        prompt("Bit 12")
        pp(TRUE)
    }
    field(BD, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        promptgroup("52 - Output 8-15")
        special(SPC_MOD)
        prompt("Bit 13")
    }
    field(BE, DBF_UCHAR) {
        prompt("Bit 14")
        interest(1)
        promptgroup("52 - Output 8-15")
        special(SPC_MOD)
        pp(TRUE)
    }
    field(BF, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 15")
        special(SPC_MOD)
        interest(1)
        promptgroup("52 - Output 8-15")
    }
    field(B10, DBF_UCHAR) {
        prompt("Bit 16")
        interest(1)
        promptgroup("53 - Output 16-23")
        special(SPC_MOD)
        pp(TRUE)
    }
    field(B11, DBF_UCHAR) {
        prompt("Bit 17")
        promptgroup("53 - Output 16-23")
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
    }
    field(B12, DBF_UCHAR) {
        interest(1)
        special(SPC_MOD)
        promptgroup("53 - Output 16-23")
        prompt("Bit 18")
        pp(TRUE)
    }
    field(B13, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 19")
        promptgroup("53 - Output 16-23")
        interest(1)
        special(SPC_MOD)
    }
    field(B14, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 20")
        promptgroup("53 - Output 16-23")
        interest(1)
        special(SPC_MOD)
    }
    field(B15, DBF_UCHAR) {
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        promptgroup("53 - Output 16-23")
        prompt("Bit 21")
    }
    field(B16, DBF_UCHAR) {
        interest(1)
        promptgroup("53 - Output 16-23")
        special(SPC_MOD)
        prompt("Bit 22")
        pp(TRUE)
    }
    field(B17, DBF_UCHAR) {
        prompt("Bit 23")
        special(SPC_MOD)
        interest(1)
        promptgroup("53 - Output 16-23")
        pp(TRUE)
    }
    field(B18, DBF_UCHAR) {
        interest(1)
        promptgroup("54 - Output 24-31")
        special(SPC_MOD)
        prompt("Bit 24")
        pp(TRUE)
    }
    field(B19, DBF_UCHAR) {
        prompt("Bit 25")
        interest(1)
        special(SPC_MOD)
        promptgroup("54 - Output 24-31")
        pp(TRUE)
    }
    field(B1A, DBF_UCHAR) {
        special(SPC_MOD)
        interest(1)
        promptgroup("54 - Output 24-31")
        prompt("Bit 26")
        pp(TRUE)
    }
    field(B1B, DBF_UCHAR) {
        prompt("Bit 27")
        interest(1)
        special(SPC_MOD)
        promptgroup("54 - Output 24-31")
        pp(TRUE)
    }
    field(B1C, DBF_UCHAR) {
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        promptgroup("54 - Output 24-31")
        prompt("Bit 28")
    }
    field(B1D, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        special(SPC_MOD)
        promptgroup("54 - Output 24-31")
        prompt("Bit 29")
    }
    field(B1E, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 30")
        interest(1)
        special(SPC_MOD)
        promptgroup("54 - Output 24-31")
    }
    field(B1F, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 31")
        promptgroup("54 - Output 24-31")
        interest(1)
        special(SPC_MOD)
    }
}
device(mbboDirect, CONSTANT, devMbboDirectSoft, "Soft Channel")
device(mbboDirect, CONSTANT, devMbboDirectSoftRaw, "Raw Soft Channel")
device(mbboDirect, CONSTANT, devMbboDirectSoftCallback, "Async Soft Channel")
recordtype(ai) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct aiRecord;
    %typedef struct aidset {
    %    dset common;
    %    long (*read_ai)(struct aiRecord *prec);
    %    long (*special_linconv)(struct aiRecord *prec, int after);
    %} aidset;
    %#define HAS_aidset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        prompt("Record Name")
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        promptgroup("10 - Common")
        prompt("Access Security Group")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        size(40)
        prompt("Event Name")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        promptgroup("20 - Scan")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        interest(4)
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        extra("ELLLIST             bklnk")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        prompt("Alarm Message")
        special(SPC_NOMOD)
        size(40)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        interest(2)
        special(SPC_NOMOD)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
    }
    field(NAMSG, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        prompt("New Alarm Message")
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        special(SPC_NOMOD)
        interest(2)
        promptgroup("70 - Alarm")
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        extra("void                *dpvt")
        special(SPC_NOMOD)
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        prompt("Undefined")
        initial("1")
        promptgroup("10 - Common")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        initial("INVALID")
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        extra("epicsTimeStamp      time")
        interest(2)
        special(SPC_NOMOD)
    }
    field(UTAG, DBF_UINT64) {
        prompt("Time Tag")
        interest(3)
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_DOUBLE) {
        promptgroup("40 - Input")
        asl(ASL0)
        prompt("Current EGU Value")
        pp(TRUE)
    }
    field(INP, DBF_INLINK) {
        interest(1)
        promptgroup("40 - Input")
        prompt("Input Specification")
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        interest(1)
        promptgroup("80 - Display")
        prop(YES)
    }
    field(LINR, DBF_MENU) {
        pp(TRUE)
        menu(menuConvert)
        interest(1)
        special(SPC_LINCONV)
        promptgroup("60 - Convert")
        prompt("Linearization")
    }
    field(EGUF, DBF_DOUBLE) {
        prompt("Engineer Units Full")
        interest(1)
        promptgroup("60 - Convert")
        special(SPC_LINCONV)
        pp(TRUE)
    }
    field(EGUL, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Engineer Units Low")
        special(SPC_LINCONV)
        interest(1)
        promptgroup("60 - Convert")
    }
    field(EGU, DBF_STRING) {
        prop(YES)
        size(16)
        prompt("Engineering Units")
        interest(1)
        promptgroup("80 - Display")
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Range")
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(LOPR, DBF_DOUBLE) {
        prompt("Low Operating Range")
        interest(1)
        promptgroup("80 - Display")
        prop(YES)
    }
    field(AOFF, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        prompt("Adjustment Offset")
        pp(TRUE)
    }
    field(ASLO, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        initial("1")
        prompt("Adjustment Slope")
        pp(TRUE)
    }
    field(SMOO, DBF_DOUBLE) {
        prompt("Smoothing")
        promptgroup("60 - Convert")
        interest(1)
    }
    field(HIHI, DBF_DOUBLE) {
        pp(TRUE)
        prop(YES)
        prompt("Hihi Alarm Limit")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LOLO, DBF_DOUBLE) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Lolo Alarm Limit")
        prop(YES)
        pp(TRUE)
    }
    field(HIGH, DBF_DOUBLE) {
        prompt("High Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
        pp(TRUE)
        prop(YES)
    }
    field(LOW, DBF_DOUBLE) {
        prompt("Low Alarm Limit")
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
        prop(YES)
    }
    field(HHSV, DBF_MENU) {
        prop(YES)
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Hihi Severity")
    }
    field(LLSV, DBF_MENU) {
        prompt("Lolo Severity")
        promptgroup("70 - Alarm")
        interest(1)
        pp(TRUE)
        menu(menuAlarmSevr)
        prop(YES)
    }
    field(HSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prop(YES)
        prompt("High Severity")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LSV, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Severity")
        prop(YES)
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(HYST, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Alarm Deadband")
    }
    field(AFTC, DBF_DOUBLE) {
        prompt("Alarm Filter Time Constant")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(ADEL, DBF_DOUBLE) {
        prompt("Archive Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(MDEL, DBF_DOUBLE) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Monitor Deadband")
    }
    field(LALM, DBF_DOUBLE) {
        prompt("Last Value Alarmed")
        special(SPC_NOMOD)
        interest(3)
    }
    field(AFVL, DBF_DOUBLE) {
        prompt("Alarm Filter Value")
        special(SPC_NOMOD)
        interest(3)
    }
    field(ALST, DBF_DOUBLE) {
        prompt("Last Value Archived")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_DOUBLE) {
        prompt("Last Val Monitored")
        interest(3)
        special(SPC_NOMOD)
    }
    field(ESLO, DBF_DOUBLE) {
        pp(TRUE)
        initial("1")
        interest(2)
        promptgroup("60 - Convert")
        prompt("Raw to EGU Slope")
    }
    field(EOFF, DBF_DOUBLE) {
        pp(TRUE)
        interest(2)
        promptgroup("60 - Convert")
        prompt("Raw to EGU Offset")
    }
    field(ROFF, DBF_ULONG) {
        interest(2)
        prompt("Raw Offset")
        pp(TRUE)
    }
    field(PBRK, DBF_NOACCESS) {
        prompt("Ptrto brkTable")
        interest(4)
        extra("void *   pbrk")
        special(SPC_NOMOD)
    }
    field(INIT, DBF_SHORT) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Initialized?")
    }
    field(LBRK, DBF_SHORT) {
        prompt("LastBreak Point")
        special(SPC_NOMOD)
        interest(3)
    }
    field(RVAL, DBF_LONG) {
        pp(TRUE)
        prompt("Current Raw Value")
    }
    field(ORAW, DBF_LONG) {
        prompt("Previous Raw Value")
        interest(3)
        special(SPC_NOMOD)
    }
    field(SIOL, DBF_INLINK) {
        prompt("Simulation Input Link")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SVAL, DBF_DOUBLE) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        prompt("Simulation Mode Link")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        special(SPC_MOD)
        interest(1)
        prompt("Simulation Mode")
        menu(menuSimm)
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Simulation Mode Severity")
        promptgroup("90 - Simulate")
        interest(2)
    }
    field(OLDSIMM, DBF_MENU) {
        interest(4)
        special(SPC_NOMOD)
        prompt("Prev. Simulation Mode")
        menu(menuSimm)
    }
    field(SSCN, DBF_MENU) {
        menu(menuScan)
        initial("65535")
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Sim. Mode Scan")
    }
    field(SDLY, DBF_DOUBLE) {
        prompt("Sim. Mode Async Delay")
        promptgroup("90 - Simulate")
        interest(2)
        initial("-1.0")
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        extra("epicsCallback            *simpvt")
        interest(4)
        special(SPC_NOMOD)
    }
}
device(ai, CONSTANT, devAiSoft, "Soft Channel")
device(ai, CONSTANT, devAiSoftRaw, "Raw Soft Channel")
device(ai, CONSTANT, devAiSoftCallback, "Async Soft Channel")
device(ai, INST_IO, devTimestampAI, "Soft Timestamp")
device(ai, INST_IO, devAiGeneralTime, "General Time")
recordtype(lso) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct lsoRecord;
    %typedef struct lsodset {
    %    dset common;
    %    long (*write_string)(struct lsoRecord *prec);
    %} lsodset;
    %#define HAS_lsodset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        prompt("Descriptor")
        size(41)
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Event Name")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        initial("UDF")
        special(SPC_NOMOD)
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        prompt("Alarm Message")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        special(SPC_NOMOD)
        interest(2)
        menu(menuAlarmSevr)
    }
    field(NAMSG, DBF_STRING) {
        size(40)
        prompt("New Alarm Message")
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        special(SPC_NOMOD)
        interest(2)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        special(SPC_NOMOD)
        interest(2)
        promptgroup("70 - Alarm")
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        special(SPC_NOMOD)
        interest(4)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        initial("1")
        interest(1)
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        initial("INVALID")
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        prompt("Time")
    }
    field(UTAG, DBF_UINT64) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_NOACCESS) {
        prompt("Current Value")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("char *val")
        pp(TRUE)
    }
    field(OVAL, DBF_NOACCESS) {
        prompt("Previous Value")
        interest(3)
        extra("char *oval")
        special(SPC_DBADDR)
    }
    field(SIZV, DBF_USHORT) {
        prompt("Size of buffers")
        initial("41")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("50 - Output")
    }
    field(LEN, DBF_ULONG) {
        prompt("Length of VAL")
        special(SPC_NOMOD)
    }
    field(OLEN, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Length of OVAL")
    }
    field(DOL, DBF_INLINK) {
        prompt("Desired Output Link")
        promptgroup("40 - Input")
        interest(1)
    }
    field(IVOA, DBF_MENU) {
        menu(menuIvoa)
        prompt("INVALID Output Action")
        promptgroup("50 - Output")
        interest(2)
    }
    field(IVOV, DBF_STRING) {
        prompt("INVALID Output Value")
        promptgroup("50 - Output")
        interest(2)
        size(40)
    }
    field(OMSL, DBF_MENU) {
        prompt("Output Mode Select")
        interest(1)
        promptgroup("50 - Output")
        menu(menuOmsl)
    }
    field(OUT, DBF_OUTLINK) {
        promptgroup("50 - Output")
        interest(1)
        prompt("Output Specification")
    }
    field(MPST, DBF_MENU) {
        menu(menuPost)
        prompt("Post Value Monitors")
        promptgroup("80 - Display")
        interest(1)
    }
    field(APST, DBF_MENU) {
        menu(menuPost)
        prompt("Post Archive Monitors")
        promptgroup("80 - Display")
        interest(1)
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Simulation Mode link")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        interest(1)
        special(SPC_MOD)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Simulation Mode Severity")
        promptgroup("90 - Simulate")
        interest(2)
    }
    field(SIOL, DBF_OUTLINK) {
        prompt("Simulation Output Link")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(OLDSIMM, DBF_MENU) {
        menu(menuSimm)
        prompt("Prev. Simulation Mode")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SSCN, DBF_MENU) {
        menu(menuScan)
        prompt("Sim. Mode Scan")
        promptgroup("90 - Simulate")
        interest(1)
        initial("65535")
    }
    field(SDLY, DBF_DOUBLE) {
        promptgroup("90 - Simulate")
        interest(2)
        initial("-1.0")
        prompt("Sim. Mode Async Delay")
    }
    field(SIMPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsCallback            *simpvt")
        interest(4)
        prompt("Sim. Mode Private")
    }
}
device(lso, CONSTANT, devLsoSoft, "Soft Channel")
device(lso, CONSTANT, devLsoSoftCallback, "Async Soft Channel")
device(lso, INST_IO, devLsoStdio, "stdio")
recordtype(waveform) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct waveformRecord;
    %typedef struct wfdset {
    %    dset common; /*init_record returns: (-1,0)=>(failure,success)*/
    %    long (*read_wf)(struct waveformRecord *prec); /*returns: (-1,0)=>(failure,success)*/
    %} wfdset;
    %#define HAS_wfdset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        prompt("Record Name")
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Mechanism")
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        size(40)
        prompt("Event Name")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        interest(4)
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(AMSG, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("Alarm Message")
        size(40)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        special(SPC_NOMOD)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
    }
    field(NAMSG, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("New Alarm Message")
        size(40)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        special(SPC_NOMOD)
        interest(2)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        interest(4)
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        interest(4)
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        initial("1")
        promptgroup("10 - Common")
        interest(1)
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        initial("INVALID")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        interest(2)
        prompt("Time")
    }
    field(UTAG, DBF_UINT64) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_NOACCESS) {
        prompt("Value")
        asl(ASL0)
        extra("void *		val")
        special(SPC_DBADDR)
        pp(TRUE)
    }
    field(RARM, DBF_SHORT) {
        pp(TRUE)
        prompt("Rearm the waveform")
        promptgroup("30 - Action")
        interest(1)
    }
    field(PREC, DBF_SHORT) {
        prop(YES)
        prompt("Display Precision")
        promptgroup("80 - Display")
        interest(1)
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        interest(1)
        promptgroup("40 - Input")
    }
    field(EGU, DBF_STRING) {
        prompt("Engineering Units")
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
        size(16)
    }
    field(HOPR, DBF_DOUBLE) {
        interest(1)
        promptgroup("80 - Display")
        prompt("High Operating Range")
        prop(YES)
    }
    field(LOPR, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("Low Operating Range")
    }
    field(NELM, DBF_ULONG) {
        initial("1")
        promptgroup("30 - Action")
        interest(1)
        special(SPC_NOMOD)
        prompt("Number of Elements")
    }
    field(FTVL, DBF_MENU) {
        menu(menuFtype)
        prompt("Field Type of Value")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("30 - Action")
    }
    field(BUSY, DBF_SHORT) {
        special(SPC_NOMOD)
        prompt("Busy Indicator")
    }
    field(NORD, DBF_ULONG) {
        prompt("Number elements read")
        special(SPC_NOMOD)
    }
    field(BPTR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *		bptr")
        interest(4)
        prompt("Buffer Pointer")
    }
    field(SIOL, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Simulation Input Link")
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Simulation Mode Link")
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        interest(1)
        special(SPC_MOD)
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        interest(2)
        promptgroup("90 - Simulate")
        prompt("Simulation Mode Severity")
        menu(menuAlarmSevr)
    }
    field(OLDSIMM, DBF_MENU) {
        interest(4)
        special(SPC_NOMOD)
        prompt("Prev. Simulation Mode")
        menu(menuSimm)
    }
    field(SSCN, DBF_MENU) {
        interest(1)
        promptgroup("90 - Simulate")
        initial("65535")
        prompt("Sim. Mode Scan")
        menu(menuScan)
    }
    field(SDLY, DBF_DOUBLE) {
        interest(2)
        promptgroup("90 - Simulate")
        initial("-1.0")
        prompt("Sim. Mode Async Delay")
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        special(SPC_NOMOD)
        extra("epicsCallback            *simpvt")
        interest(4)
    }
    field(MPST, DBF_MENU) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Post Value Monitors")
        menu(waveformPOST)
    }
    field(APST, DBF_MENU) {
        menu(waveformPOST)
        prompt("Post Archive Monitors")
        interest(1)
        promptgroup("80 - Display")
    }
    field(HASH, DBF_ULONG) {
        prompt("Hash of OnChange data.")
        interest(3)
    }
}
device(waveform, CONSTANT, devWfSoft, "Soft Channel")
device(waveform, CONSTANT, devWfPDBDemo, "QSRV Demo")
recordtype(sub) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %struct subRecord;
    %typedef long (*SUBFUNCPTR)(struct subRecord *);
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("Record Name")
        size(61)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        size(29)
        prompt("Access Security Group")
        special(SPC_AS)
        promptgroup("10 - Common")
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        size(40)
        prompt("Event Name")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        interest(4)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        special(SPC_NOMOD)
        initial("UDF")
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
        special(SPC_NOMOD)
    }
    field(AMSG, DBF_STRING) {
        prompt("Alarm Message")
        special(SPC_NOMOD)
        size(40)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
    }
    field(NAMSG, DBF_STRING) {
        prompt("New Alarm Message")
        special(SPC_NOMOD)
        size(40)
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        initial("YES")
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        special(SPC_NOMOD)
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        interest(4)
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        extra("void                *dpvt")
        special(SPC_NOMOD)
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        prompt("Undefined")
        interest(1)
        promptgroup("10 - Common")
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
    }
    field(UTAG, DBF_UINT64) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Result")
        asl(ASL0)
    }
    field(INAM, DBF_STRING) {
        size(40)
        prompt("Init Routine Name")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("30 - Action")
    }
    field(SNAM, DBF_STRING) {
        promptgroup("30 - Action")
        interest(1)
        special(SPC_MOD)
        prompt("Subroutine Name")
        size(40)
    }
    field(SADR, DBF_NOACCESS) {
        prompt("Subroutine Address")
        special(SPC_NOMOD)
        extra("SUBFUNCPTR sadr")
        interest(4)
    }
    field(INPA, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        interest(1)
        prompt("Input A")
    }
    field(INPB, DBF_INLINK) {
        prompt("Input B")
        promptgroup("41 - Input A-F")
        interest(1)
    }
    field(INPC, DBF_INLINK) {
        prompt("Input C")
        promptgroup("41 - Input A-F")
        interest(1)
    }
    field(INPD, DBF_INLINK) {
        prompt("Input D")
        interest(1)
        promptgroup("41 - Input A-F")
    }
    field(INPE, DBF_INLINK) {
        prompt("Input E")
        interest(1)
        promptgroup("41 - Input A-F")
    }
    field(INPF, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        interest(1)
        prompt("Input F")
    }
    field(INPG, DBF_INLINK) {
        prompt("Input G")
        promptgroup("42 - Input G-L")
        interest(1)
    }
    field(INPH, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Input G-L")
        prompt("Input H")
    }
    field(INPI, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Input G-L")
        prompt("Input I")
    }
    field(INPJ, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        interest(1)
        prompt("Input J")
    }
    field(INPK, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        interest(1)
        prompt("Input K")
    }
    field(INPL, DBF_INLINK) {
        prompt("Input L")
        promptgroup("42 - Input G-L")
        interest(1)
    }
    field(EGU, DBF_STRING) {
        size(16)
        prop(YES)
        prompt("Engineering Units")
        promptgroup("80 - Display")
        interest(1)
    }
    field(HOPR, DBF_DOUBLE) {
        prop(YES)
        prompt("High Operating Range")
        promptgroup("80 - Display")
        interest(1)
    }
    field(LOPR, DBF_DOUBLE) {
        prop(YES)
        promptgroup("80 - Display")
        interest(1)
        prompt("Low Operating Range")
    }
    field(HIHI, DBF_DOUBLE) {
        pp(TRUE)
        prop(YES)
        prompt("Hihi Alarm Limit")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LOLO, DBF_DOUBLE) {
        prompt("Lolo Alarm Limit")
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
        prop(YES)
    }
    field(HIGH, DBF_DOUBLE) {
        pp(TRUE)
        prop(YES)
        prompt("High Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LOW, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Low Alarm Limit")
        prop(YES)
        pp(TRUE)
    }
    field(PREC, DBF_SHORT) {
        prop(YES)
        promptgroup("80 - Display")
        interest(1)
        prompt("Display Precision")
    }
    field(BRSV, DBF_MENU) {
        prompt("Bad Return Severity")
        promptgroup("70 - Alarm")
        interest(1)
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(HHSV, DBF_MENU) {
        prop(YES)
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Hihi Severity")
    }
    field(LLSV, DBF_MENU) {
        prop(YES)
        menu(menuAlarmSevr)
        pp(TRUE)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Lolo Severity")
    }
    field(HSV, DBF_MENU) {
        prop(YES)
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("High Severity")
    }
    field(LSV, DBF_MENU) {
        prop(YES)
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Severity")
    }
    field(HYST, DBF_DOUBLE) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Alarm Deadband")
    }
    field(ADEL, DBF_DOUBLE) {
        prompt("Archive Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(MDEL, DBF_DOUBLE) {
        prompt("Monitor Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(A, DBF_DOUBLE) {
        prompt("Value of Input A")
        pp(TRUE)
    }
    field(B, DBF_DOUBLE) {
        prompt("Value of Input B")
        pp(TRUE)
    }
    field(C, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input C")
    }
    field(D, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input D")
    }
    field(E, DBF_DOUBLE) {
        prompt("Value of Input E")
        pp(TRUE)
    }
    field(F, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input F")
    }
    field(G, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input G")
    }
    field(H, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input H")
    }
    field(I, DBF_DOUBLE) {
        prompt("Value of Input I")
        pp(TRUE)
    }
    field(J, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input J")
    }
    field(K, DBF_DOUBLE) {
        prompt("Value of Input K")
        pp(TRUE)
    }
    field(L, DBF_DOUBLE) {
        prompt("Value of Input L")
        pp(TRUE)
    }
    field(LA, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of A")
    }
    field(LB, DBF_DOUBLE) {
        prompt("Prev Value of B")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LC, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of C")
    }
    field(LD, DBF_DOUBLE) {
        prompt("Prev Value of D")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LE, DBF_DOUBLE) {
        prompt("Prev Value of E")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LF, DBF_DOUBLE) {
        prompt("Prev Value of F")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LG, DBF_DOUBLE) {
        prompt("Prev Value of G")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LH, DBF_DOUBLE) {
        prompt("Prev Value of H")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LI, DBF_DOUBLE) {
        prompt("Prev Value of I")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LJ, DBF_DOUBLE) {
        prompt("Prev Value of J")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LK, DBF_DOUBLE) {
        prompt("Prev Value of K")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LL, DBF_DOUBLE) {
        prompt("Prev Value of L")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LALM, DBF_DOUBLE) {
        prompt("Last Value Alarmed")
        special(SPC_NOMOD)
        interest(3)
    }
    field(ALST, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Value Archived")
    }
    field(MLST, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Value Monitored")
    }
}
recordtype(stringin) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct stringinRecord;
    %typedef struct stringindset {
    %    dset common; /*init_record returns: (-1,0)=>(failure,success)*/
    %    long (*read_stringin)(struct stringinRecord *prec); /*returns: (-1,0)=>(failure,success)*/
    %} stringindset;
    %#define HAS_stringindset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        prompt("Record Name")
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        size(41)
        prompt("Descriptor")
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        size(29)
        prompt("Access Security Group")
        promptgroup("10 - Common")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        prompt("Scan Mechanism")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        size(40)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        promptgroup("20 - Scan")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        interest(4)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        special(SPC_NOMOD)
        prompt("Alarm Status")
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        prompt("Alarm Message")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        special(SPC_NOMOD)
        interest(2)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NAMSG, DBF_STRING) {
        prompt("New Alarm Message")
        special(SPC_NOMOD)
        size(40)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        special(SPC_NOMOD)
        interest(2)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        initial("YES")
        promptgroup("70 - Alarm")
        interest(2)
        special(SPC_NOMOD)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        special(SPC_NOMOD)
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        special(SPC_NOMOD)
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct typed_rset   *rset")
        interest(4)
        special(SPC_NOMOD)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        interest(4)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        initial("1")
        promptgroup("10 - Common")
        interest(1)
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        interest(2)
    }
    field(UTAG, DBF_UINT64) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_STRING) {
        promptgroup("40 - Input")
        asl(ASL0)
        prompt("Current Value")
        size(40)
        pp(TRUE)
    }
    field(OVAL, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        interest(3)
        prompt("Previous Value")
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        promptgroup("40 - Input")
        interest(1)
    }
    field(MPST, DBF_MENU) {
        menu(stringinPOST)
        prompt("Post Value Monitors")
        interest(1)
        promptgroup("80 - Display")
    }
    field(APST, DBF_MENU) {
        menu(stringinPOST)
        promptgroup("80 - Display")
        interest(1)
        prompt("Post Archive Monitors")
    }
    field(SIOL, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Simulation Input Link")
    }
    field(SVAL, DBF_STRING) {
        prompt("Simulation Value")
        size(40)
        pp(TRUE)
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Simulation Mode Link")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        interest(1)
        special(SPC_MOD)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("90 - Simulate")
        interest(2)
        prompt("Simulation Mode Severity")
    }
    field(OLDSIMM, DBF_MENU) {
        interest(4)
        special(SPC_NOMOD)
        prompt("Prev. Simulation Mode")
        menu(menuSimm)
    }
    field(SSCN, DBF_MENU) {
        prompt("Sim. Mode Scan")
        promptgroup("90 - Simulate")
        interest(1)
        initial("65535")
        menu(menuScan)
    }
    field(SDLY, DBF_DOUBLE) {
        prompt("Sim. Mode Async Delay")
        interest(2)
        promptgroup("90 - Simulate")
        initial("-1.0")
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        interest(4)
        extra("epicsCallback            *simpvt")
        special(SPC_NOMOD)
    }
}
device(stringin, CONSTANT, devSiSoft, "Soft Channel")
device(stringin, CONSTANT, devSiSoftCallback, "Async Soft Channel")
device(stringin, INST_IO, devTimestampSI, "Soft Timestamp")
device(stringin, INST_IO, devSiGeneralTime, "General Time")
device(stringin, INST_IO, devSiEnviron, "getenv")
recordtype(sel) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        size(41)
        prompt("Descriptor")
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        size(29)
        prompt("Access Security Group")
        special(SPC_AS)
        promptgroup("10 - Common")
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        promptgroup("20 - Scan")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(AMSG, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("Alarm Message")
        size(40)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        special(SPC_NOMOD)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NAMSG, DBF_STRING) {
        prompt("New Alarm Message")
        special(SPC_NOMOD)
        size(40)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(2)
        special(SPC_NOMOD)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        initial("YES")
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        interest(4)
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        prompt("Scheduling Priority")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("10 - Common")
        interest(1)
        initial("1")
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        prompt("Time")
    }
    field(UTAG, DBF_UINT64) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_DOUBLE) {
        prompt("Result")
        asl(ASL0)
        special(SPC_NOMOD)
        promptgroup("40 - Input")
    }
    field(SELM, DBF_MENU) {
        promptgroup("30 - Action")
        prompt("Select Mechanism")
        menu(selSELM)
    }
    field(SELN, DBF_USHORT) {
        prompt("Index value")
    }
    field(PREC, DBF_SHORT) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Display Precision")
    }
    field(NVL, DBF_INLINK) {
        interest(1)
        promptgroup("30 - Action")
        prompt("Index Value Location")
    }
    field(INPA, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        interest(1)
        prompt("Input A")
    }
    field(INPB, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Input A-F")
        prompt("Input B")
    }
    field(INPC, DBF_INLINK) {
        prompt("Input C")
        interest(1)
        promptgroup("41 - Input A-F")
    }
    field(INPD, DBF_INLINK) {
        prompt("Input D")
        interest(1)
        promptgroup("41 - Input A-F")
    }
    field(INPE, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        interest(1)
        prompt("Input E")
    }
    field(INPF, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        interest(1)
        prompt("Input F")
    }
    field(INPG, DBF_INLINK) {
        prompt("Input G")
        interest(1)
        promptgroup("42 - Input G-L")
    }
    field(INPH, DBF_INLINK) {
        prompt("Input H")
        promptgroup("42 - Input G-L")
        interest(1)
    }
    field(INPI, DBF_INLINK) {
        prompt("Input I")
        interest(1)
        promptgroup("42 - Input G-L")
    }
    field(INPJ, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        interest(1)
        prompt("Input J")
    }
    field(INPK, DBF_INLINK) {
        prompt("Input K")
        promptgroup("42 - Input G-L")
        interest(1)
    }
    field(INPL, DBF_INLINK) {
        prompt("Input L")
        interest(1)
        promptgroup("42 - Input G-L")
    }
    field(EGU, DBF_STRING) {
        size(16)
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("Engineering Units")
    }
    field(HOPR, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("High Operating Rng")
    }
    field(LOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Low Operating Range")
        prop(YES)
    }
    field(HIHI, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Hihi Alarm Limit")
        prop(YES)
        pp(TRUE)
    }
    field(LOLO, DBF_DOUBLE) {
        prompt("Lolo Alarm Limit")
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
        prop(YES)
    }
    field(HIGH, DBF_DOUBLE) {
        prompt("High Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
        pp(TRUE)
        prop(YES)
    }
    field(LOW, DBF_DOUBLE) {
        prop(YES)
        pp(TRUE)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Alarm Limit")
    }
    field(HHSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prop(YES)
        prompt("Hihi Severity")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LLSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prop(YES)
        prompt("Lolo Severity")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(HSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("High Severity")
        prop(YES)
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(LSV, DBF_MENU) {
        prop(YES)
        menu(menuAlarmSevr)
        pp(TRUE)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Severity")
    }
    field(HYST, DBF_DOUBLE) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Alarm Deadband")
    }
    field(ADEL, DBF_DOUBLE) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Archive Deadband")
    }
    field(MDEL, DBF_DOUBLE) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Monitor Deadband")
    }
    field(A, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input A")
    }
    field(B, DBF_DOUBLE) {
        prompt("Value of Input B")
        pp(TRUE)
    }
    field(C, DBF_DOUBLE) {
        prompt("Value of Input C")
        pp(TRUE)
    }
    field(D, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input D")
    }
    field(E, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input E")
    }
    field(F, DBF_DOUBLE) {
        prompt("Value of Input F")
        pp(TRUE)
    }
    field(G, DBF_DOUBLE) {
        prompt("Value of Input G")
        pp(TRUE)
    }
    field(H, DBF_DOUBLE) {
        prompt("Value of Input H")
        pp(TRUE)
    }
    field(I, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input I")
    }
    field(J, DBF_DOUBLE) {
        prompt("Value of Input J")
        pp(TRUE)
    }
    field(K, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input K")
    }
    field(L, DBF_DOUBLE) {
        prompt("Value of Input L")
        pp(TRUE)
    }
    field(LA, DBF_DOUBLE) {
        prompt("Prev Value of A")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LB, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of B")
    }
    field(LC, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of C")
    }
    field(LD, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of D")
    }
    field(LE, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of E")
    }
    field(LF, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of F")
    }
    field(LG, DBF_DOUBLE) {
        prompt("Prev Value of G")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LH, DBF_DOUBLE) {
        prompt("Prev Value of H")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LI, DBF_DOUBLE) {
        prompt("Prev Value of I")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LJ, DBF_DOUBLE) {
        prompt("Prev Value of J")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LK, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of K")
    }
    field(LL, DBF_DOUBLE) {
        prompt("Prev Value of L")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LALM, DBF_DOUBLE) {
        prompt("Last Value Alarmed")
        special(SPC_NOMOD)
        interest(3)
    }
    field(ALST, DBF_DOUBLE) {
        prompt("Last Value Archived")
        special(SPC_NOMOD)
        interest(3)
    }
    field(MLST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Val Monitored")
    }
    field(NLST, DBF_USHORT) {
        prompt("Last Index Monitored")
        interest(3)
        special(SPC_NOMOD)
    }
}
recordtype(longout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct longoutRecord;
    %typedef struct longoutdset {
    %    dset common; /*init_record returns: (-1,0)=>(failure,success)*/
    %    long (*write_longout)(struct longoutRecord *prec); /*(-1,0)=>(failure,success*/
    %} longoutdset;
    %#define HAS_longoutdset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("Record Name")
        size(61)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        promptgroup("10 - Common")
        prompt("Access Security Group")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        size(40)
        prompt("Event Name")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        promptgroup("20 - Scan")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        interest(4)
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        initial("UDF")
        special(SPC_NOMOD)
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        prompt("Alarm Message")
        special(SPC_NOMOD)
        size(40)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(2)
        special(SPC_NOMOD)
        prompt("New Alarm Severity")
    }
    field(NAMSG, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        prompt("New Alarm Message")
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        initial("YES")
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        interest(1)
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        promptgroup("10 - Common")
        interest(1)
        initial("1")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        initial("INVALID")
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        interest(2)
        prompt("Time")
    }
    field(UTAG, DBF_UINT64) {
        prompt("Time Tag")
        special(SPC_NOMOD)
        interest(3)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_LONG) {
        promptgroup("50 - Output")
        prompt("Desired Output")
        asl(ASL0)
        pp(TRUE)
    }
    field(OUT, DBF_OUTLINK) {
        prompt("Output Specification")
        interest(1)
        promptgroup("50 - Output")
    }
    field(DOL, DBF_INLINK) {
        prompt("Desired Output Loc")
        promptgroup("40 - Input")
        interest(1)
    }
    field(OMSL, DBF_MENU) {
        menu(menuOmsl)
        interest(1)
        promptgroup("50 - Output")
        prompt("Output Mode Select")
    }
    field(EGU, DBF_STRING) {
        prop(YES)
        size(16)
        interest(1)
        promptgroup("80 - Display")
        prompt("Engineering Units")
    }
    field(DRVH, DBF_LONG) {
        pp(TRUE)
        prop(YES)
        prompt("Drive High Limit")
        interest(1)
        promptgroup("30 - Action")
    }
    field(DRVL, DBF_LONG) {
        prompt("Drive Low Limit")
        interest(1)
        promptgroup("30 - Action")
        pp(TRUE)
        prop(YES)
    }
    field(HOPR, DBF_LONG) {
        prop(YES)
        prompt("High Operating Range")
        promptgroup("80 - Display")
        interest(1)
    }
    field(LOPR, DBF_LONG) {
        prop(YES)
        prompt("Low Operating Range")
        promptgroup("80 - Display")
        interest(1)
    }
    field(HIHI, DBF_LONG) {
        prop(YES)
        pp(TRUE)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Hihi Alarm Limit")
    }
    field(LOLO, DBF_LONG) {
        pp(TRUE)
        prop(YES)
        prompt("Lolo Alarm Limit")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(HIGH, DBF_LONG) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("High Alarm Limit")
        prop(YES)
        pp(TRUE)
    }
    field(LOW, DBF_LONG) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Alarm Limit")
        prop(YES)
        pp(TRUE)
    }
    field(HHSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Hihi Severity")
    }
    field(LLSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Lolo Severity")
    }
    field(HSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("High Severity")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Low Severity")
    }
    field(HYST, DBF_LONG) {
        prompt("Alarm Deadband")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(ADEL, DBF_LONG) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Archive Deadband")
    }
    field(MDEL, DBF_LONG) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Monitor Deadband")
    }
    field(LALM, DBF_LONG) {
        prompt("Last Value Alarmed")
        special(SPC_NOMOD)
        interest(3)
    }
    field(ALST, DBF_LONG) {
        prompt("Last Value Archived")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_LONG) {
        prompt("Last Val Monitored")
        special(SPC_NOMOD)
        interest(3)
    }
    field(SIOL, DBF_OUTLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Sim Output Specifctn")
    }
    field(SIML, DBF_INLINK) {
        prompt("Sim Mode Location")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        special(SPC_MOD)
        interest(1)
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Sim mode Alarm Svrty")
        promptgroup("90 - Simulate")
        interest(2)
    }
    field(OLDSIMM, DBF_MENU) {
        menu(menuSimm)
        interest(4)
        special(SPC_NOMOD)
        prompt("Prev. Simulation Mode")
    }
    field(SSCN, DBF_MENU) {
        initial("65535")
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Sim. Mode Scan")
        menu(menuScan)
    }
    field(SDLY, DBF_DOUBLE) {
        prompt("Sim. Mode Async Delay")
        interest(2)
        promptgroup("90 - Simulate")
        initial("-1.0")
    }
    field(SIMPVT, DBF_NOACCESS) {
        extra("epicsCallback            *simpvt")
        special(SPC_NOMOD)
        interest(4)
        prompt("Sim. Mode Private")
    }
    field(IVOA, DBF_MENU) {
        promptgroup("50 - Output")
        interest(2)
        prompt("INVALID output action")
        menu(menuIvoa)
    }
    field(IVOV, DBF_LONG) {
        interest(2)
        promptgroup("50 - Output")
        prompt("INVALID output value")
    }
}
device(longout, CONSTANT, devLoSoft, "Soft Channel")
device(longout, CONSTANT, devLoSoftCallback, "Async Soft Channel")
recordtype(dfanout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        prompt("Record Name")
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        special(SPC_AS)
        size(29)
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Event Name")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        prompt("Alarm Status")
        special(SPC_NOMOD)
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
        special(SPC_NOMOD)
    }
    field(AMSG, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        prompt("Alarm Message")
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        interest(2)
        special(SPC_NOMOD)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        special(SPC_NOMOD)
        interest(2)
        menu(menuAlarmSevr)
    }
    field(NAMSG, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("New Alarm Message")
        size(40)
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        initial("YES")
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        special(SPC_NOMOD)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        special(SPC_NOMOD)
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        interest(4)
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        prompt("Scheduling Priority")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        initial("1")
        promptgroup("10 - Common")
        interest(1)
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        initial("INVALID")
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        extra("epicsTimeStamp      time")
        interest(2)
        special(SPC_NOMOD)
    }
    field(UTAG, DBF_UINT64) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("40 - Input")
        asl(ASL0)
        prompt("Desired Output")
    }
    field(SELM, DBF_MENU) {
        promptgroup("30 - Action")
        interest(1)
        prompt("Select Mechanism")
        menu(dfanoutSELM)
    }
    field(SELN, DBF_USHORT) {
        prompt("Link Selection")
        initial("1")
        interest(1)
    }
    field(SELL, DBF_INLINK) {
        prompt("Link Selection Loc")
        promptgroup("30 - Action")
        interest(1)
    }
    field(OUTA, DBF_OUTLINK) {
        prompt("Output Spec A")
        promptgroup("50 - Output")
        interest(1)
    }
    field(OUTB, DBF_OUTLINK) {
        promptgroup("50 - Output")
        interest(1)
        prompt("Output Spec B")
    }
    field(OUTC, DBF_OUTLINK) {
        prompt("Output Spec C")
        interest(1)
        promptgroup("50 - Output")
    }
    field(OUTD, DBF_OUTLINK) {
        promptgroup("50 - Output")
        interest(1)
        prompt("Output Spec D")
    }
    field(OUTE, DBF_OUTLINK) {
        promptgroup("50 - Output")
        interest(1)
        prompt("Output Spec E")
    }
    field(OUTF, DBF_OUTLINK) {
        interest(1)
        promptgroup("50 - Output")
        prompt("Output Spec F")
    }
    field(OUTG, DBF_OUTLINK) {
        prompt("Output Spec G")
        promptgroup("50 - Output")
        interest(1)
    }
    field(OUTH, DBF_OUTLINK) {
        prompt("Output Spec H")
        interest(1)
        promptgroup("50 - Output")
    }
    field(DOL, DBF_INLINK) {
        prompt("Desired Output Loc")
        promptgroup("40 - Input")
        interest(1)
    }
    field(OMSL, DBF_MENU) {
        prompt("Output Mode Select")
        promptgroup("50 - Output")
        interest(1)
        menu(menuOmsl)
    }
    field(EGU, DBF_STRING) {
        prop(YES)
        size(16)
        promptgroup("80 - Display")
        interest(1)
        prompt("Engineering Units")
    }
    field(PREC, DBF_SHORT) {
        prop(YES)
        prompt("Display Precision")
        interest(1)
        promptgroup("80 - Display")
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Range")
        interest(1)
        promptgroup("80 - Display")
        prop(YES)
    }
    field(LOPR, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("Low Operating Range")
    }
    field(HIHI, DBF_DOUBLE) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Hihi Alarm Limit")
        prop(YES)
        pp(TRUE)
    }
    field(LOLO, DBF_DOUBLE) {
        pp(TRUE)
        prop(YES)
        prompt("Lolo Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(HIGH, DBF_DOUBLE) {
        pp(TRUE)
        prop(YES)
        prompt("High Alarm Limit")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LOW, DBF_DOUBLE) {
        pp(TRUE)
        prop(YES)
        prompt("Low Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(HHSV, DBF_MENU) {
        prop(YES)
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Hihi Severity")
    }
    field(LLSV, DBF_MENU) {
        prompt("Lolo Severity")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
        prop(YES)
    }
    field(HSV, DBF_MENU) {
        prompt("High Severity")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
        prop(YES)
    }
    field(LSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prop(YES)
        prompt("Low Severity")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(HYST, DBF_DOUBLE) {
        prompt("Alarm Deadband")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(ADEL, DBF_DOUBLE) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Archive Deadband")
    }
    field(MDEL, DBF_DOUBLE) {
        prompt("Monitor Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(LALM, DBF_DOUBLE) {
        prompt("Last Value Alarmed")
        special(SPC_NOMOD)
        interest(3)
    }
    field(ALST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Archived")
    }
    field(MLST, DBF_DOUBLE) {
        prompt("Last Val Monitored")
        special(SPC_NOMOD)
        interest(3)
    }
}
recordtype(aao) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct aaoRecord;
    %typedef struct aaodset {
    %    dset common; /*init_record returns: (-1,0)=>(failure,success)*/
    %    long (*write_aao)(struct aaoRecord *prec); /*returns: (-1,0)=>(failure,success)*/
    %} aaodset;
    %#define HAS_aaodset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        size(41)
        prompt("Descriptor")
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        promptgroup("10 - Common")
        prompt("Access Security Group")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        size(40)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        promptgroup("20 - Scan")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        special(SPC_NOMOD)
        initial("UDF")
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
        special(SPC_NOMOD)
    }
    field(AMSG, DBF_STRING) {
        size(40)
        prompt("Alarm Message")
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(2)
        special(SPC_NOMOD)
        prompt("New Alarm Severity")
    }
    field(NAMSG, DBF_STRING) {
        size(40)
        prompt("New Alarm Message")
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(2)
        special(SPC_NOMOD)
        initial("YES")
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        special(SPC_NOMOD)
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        interest(4)
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct typed_rset   *rset")
        interest(4)
        special(SPC_NOMOD)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        extra("void                *dpvt")
        special(SPC_NOMOD)
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsUInt8          bkpt")
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        initial("1")
        promptgroup("10 - Common")
        interest(1)
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        initial("INVALID")
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        interest(2)
        prompt("Time")
    }
    field(UTAG, DBF_UINT64) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_NOACCESS) {
        pp(TRUE)
        asl(ASL0)
        prompt("Value")
        extra("void *		val")
        special(SPC_DBADDR)
    }
    field(PREC, DBF_SHORT) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("Display Precision")
    }
    field(OUT, DBF_OUTLINK) {
        interest(1)
        promptgroup("50 - Output")
        prompt("Output Specification")
    }
    field(EGU, DBF_STRING) {
        prompt("Engineering Units")
        promptgroup("80 - Display")
        interest(1)
        size(16)
        prop(YES)
    }
    field(HOPR, DBF_DOUBLE) {
        prop(YES)
        prompt("High Operating Range")
        interest(1)
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_DOUBLE) {
        prompt("Low Operating Range")
        interest(1)
        promptgroup("80 - Display")
        prop(YES)
    }
    field(NELM, DBF_ULONG) {
        promptgroup("30 - Action")
        interest(1)
        special(SPC_NOMOD)
        initial("1")
        prompt("Number of Elements")
    }
    field(FTVL, DBF_MENU) {
        menu(menuFtype)
        prompt("Field Type of Value")
        promptgroup("30 - Action")
        interest(1)
        special(SPC_NOMOD)
    }
    field(NORD, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Number elements read")
    }
    field(BPTR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *		bptr")
        interest(4)
        prompt("Buffer Pointer")
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Simulation Mode Link")
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        interest(1)
        special(SPC_MOD)
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Simulation Mode Severity")
        interest(2)
        promptgroup("90 - Simulate")
    }
    field(SIOL, DBF_OUTLINK) {
        prompt("Simulation Output Link")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(OLDSIMM, DBF_MENU) {
        menu(menuSimm)
        special(SPC_NOMOD)
        interest(4)
        prompt("Prev. Simulation Mode")
    }
    field(SSCN, DBF_MENU) {
        prompt("Sim. Mode Scan")
        initial("65535")
        promptgroup("90 - Simulate")
        interest(1)
        menu(menuScan)
    }
    field(SDLY, DBF_DOUBLE) {
        interest(2)
        promptgroup("90 - Simulate")
        initial("-1.0")
        prompt("Sim. Mode Async Delay")
    }
    field(SIMPVT, DBF_NOACCESS) {
        interest(4)
        extra("epicsCallback            *simpvt")
        special(SPC_NOMOD)
        prompt("Sim. Mode Private")
    }
    field(MPST, DBF_MENU) {
        prompt("Post Value Monitors")
        interest(1)
        promptgroup("80 - Display")
        menu(aaoPOST)
    }
    field(APST, DBF_MENU) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Post Archive Monitors")
        menu(aaoPOST)
    }
    field(HASH, DBF_ULONG) {
        prompt("Hash of OnChange data.")
        interest(3)
    }
}
device(aao, CONSTANT, devAaoSoft, "Soft Channel")
recordtype(mbbo) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %/* Declare Device Support Entry Table */
    %struct mbboRecord;
    %typedef struct mbbodset {
    %    dset common; /*init_record returns: (0, 2) => (success, success no convert)*/
    %    long (*write_mbbo)(struct mbboRecord *prec); /*returns: (0, 2) => (success, success no convert)*/
    %} mbbodset;
    %#define HAS_mbbodset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("Record Name")
        size(61)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        size(40)
        prompt("Event Name")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        interest(4)
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        prompt("Alarm Message")
        special(SPC_NOMOD)
        size(40)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        special(SPC_NOMOD)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(NAMSG, DBF_STRING) {
        prompt("New Alarm Message")
        special(SPC_NOMOD)
        size(40)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(2)
        special(SPC_NOMOD)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        interest(2)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        initial("YES")
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        special(SPC_NOMOD)
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        extra("void                *dpvt")
        special(SPC_NOMOD)
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        interest(1)
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        interest(1)
        initial("1")
        prompt("Undefined")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        initial("INVALID")
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(UTAG, DBF_UINT64) {
        prompt("Time Tag")
        interest(3)
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_ENUM) {
        special(SPC_DBADDR)
        promptgroup("50 - Output")
        prompt("Desired Value")
        asl(ASL0)
        pp(TRUE)
    }
    field(DOL, DBF_INLINK) {
        prompt("Desired Output Loc")
        promptgroup("40 - Input")
        interest(1)
    }
    field(OMSL, DBF_MENU) {
        menu(menuOmsl)
        prompt("Output Mode Select")
        promptgroup("50 - Output")
        interest(1)
    }
    field(NOBT, DBF_USHORT) {
        prompt("Number of Bits")
        interest(1)
        promptgroup("50 - Output")
        special(SPC_NOMOD)
    }
    field(OUT, DBF_OUTLINK) {
        prompt("Output Specification")
        promptgroup("50 - Output")
        interest(1)
    }
    field(ZRVL, DBF_ULONG) {
        pp(TRUE)
        prompt("Zero Value")
        special(SPC_MOD)
        interest(1)
        base(HEX)
        promptgroup("51 - Output 0-7")
    }
    field(ONVL, DBF_ULONG) {
        base(HEX)
        promptgroup("51 - Output 0-7")
        pp(TRUE)
        interest(1)
        special(SPC_MOD)
        prompt("One Value")
    }
    field(TWVL, DBF_ULONG) {
        base(HEX)
        promptgroup("51 - Output 0-7")
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        prompt("Two Value")
    }
    field(THVL, DBF_ULONG) {
        base(HEX)
        promptgroup("51 - Output 0-7")
        pp(TRUE)
        prompt("Three Value")
        interest(1)
        special(SPC_MOD)
    }
    field(FRVL, DBF_ULONG) {
        prompt("Four Value")
        special(SPC_MOD)
        interest(1)
        pp(TRUE)
        promptgroup("51 - Output 0-7")
        base(HEX)
    }
    field(FVVL, DBF_ULONG) {
        base(HEX)
        promptgroup("51 - Output 0-7")
        prompt("Five Value")
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
    }
    field(SXVL, DBF_ULONG) {
        base(HEX)
        promptgroup("51 - Output 0-7")
        prompt("Six Value")
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
    }
    field(SVVL, DBF_ULONG) {
        base(HEX)
        promptgroup("51 - Output 0-7")
        pp(TRUE)
        prompt("Seven Value")
        special(SPC_MOD)
        interest(1)
    }
    field(EIVL, DBF_ULONG) {
        prompt("Eight Value")
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
        base(HEX)
        promptgroup("52 - Output 8-15")
    }
    field(NIVL, DBF_ULONG) {
        base(HEX)
        promptgroup("52 - Output 8-15")
        prompt("Nine Value")
        special(SPC_MOD)
        interest(1)
        pp(TRUE)
    }
    field(TEVL, DBF_ULONG) {
        promptgroup("52 - Output 8-15")
        base(HEX)
        prompt("Ten Value")
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
    }
    field(ELVL, DBF_ULONG) {
        base(HEX)
        promptgroup("52 - Output 8-15")
        pp(TRUE)
        prompt("Eleven Value")
        special(SPC_MOD)
        interest(1)
    }
    field(TVVL, DBF_ULONG) {
        base(HEX)
        promptgroup("52 - Output 8-15")
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        prompt("Twelve Value")
    }
    field(TTVL, DBF_ULONG) {
        promptgroup("52 - Output 8-15")
        base(HEX)
        prompt("Thirteen Value")
        special(SPC_MOD)
        interest(1)
        pp(TRUE)
    }
    field(FTVL, DBF_ULONG) {
        pp(TRUE)
        interest(1)
        special(SPC_MOD)
        prompt("Fourteen Value")
        base(HEX)
        promptgroup("52 - Output 8-15")
    }
    field(FFVL, DBF_ULONG) {
        promptgroup("52 - Output 8-15")
        base(HEX)
        pp(TRUE)
        prompt("Fifteen Value")
        interest(1)
        special(SPC_MOD)
    }
    field(ZRST, DBF_STRING) {
        size(26)
        pp(TRUE)
        interest(1)
        promptgroup("81 - Display 0-7")
        special(SPC_MOD)
        prompt("Zero String")
    }
    field(ONST, DBF_STRING) {
        prompt("One String")
        special(SPC_MOD)
        interest(1)
        promptgroup("81 - Display 0-7")
        pp(TRUE)
        size(26)
    }
    field(TWST, DBF_STRING) {
        prompt("Two String")
        interest(1)
        promptgroup("81 - Display 0-7")
        special(SPC_MOD)
        pp(TRUE)
        size(26)
    }
    field(THST, DBF_STRING) {
        interest(1)
        promptgroup("81 - Display 0-7")
        special(SPC_MOD)
        prompt("Three String")
        size(26)
        pp(TRUE)
    }
    field(FRST, DBF_STRING) {
        prompt("Four String")
        interest(1)
        special(SPC_MOD)
        promptgroup("81 - Display 0-7")
        pp(TRUE)
        size(26)
    }
    field(FVST, DBF_STRING) {
        size(26)
        pp(TRUE)
        interest(1)
        special(SPC_MOD)
        promptgroup("81 - Display 0-7")
        prompt("Five String")
    }
    field(SXST, DBF_STRING) {
        pp(TRUE)
        size(26)
        prompt("Six String")
        interest(1)
        promptgroup("81 - Display 0-7")
        special(SPC_MOD)
    }
    field(SVST, DBF_STRING) {
        prompt("Seven String")
        promptgroup("81 - Display 0-7")
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
        size(26)
    }
    field(EIST, DBF_STRING) {
        promptgroup("82 - Display 8-15")
        interest(1)
        special(SPC_MOD)
        prompt("Eight String")
        size(26)
        pp(TRUE)
    }
    field(NIST, DBF_STRING) {
        interest(1)
        promptgroup("82 - Display 8-15")
        special(SPC_MOD)
        prompt("Nine String")
        size(26)
        pp(TRUE)
    }
    field(TEST, DBF_STRING) {
        pp(TRUE)
        size(26)
        prompt("Ten String")
        promptgroup("82 - Display 8-15")
        interest(1)
        special(SPC_MOD)
    }
    field(ELST, DBF_STRING) {
        promptgroup("82 - Display 8-15")
        interest(1)
        special(SPC_MOD)
        prompt("Eleven String")
        size(26)
        pp(TRUE)
    }
    field(TVST, DBF_STRING) {
        size(26)
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        promptgroup("82 - Display 8-15")
        prompt("Twelve String")
    }
    field(TTST, DBF_STRING) {
        interest(1)
        special(SPC_MOD)
        promptgroup("82 - Display 8-15")
        prompt("Thirteen String")
        size(26)
        pp(TRUE)
    }
    field(FTST, DBF_STRING) {
        pp(TRUE)
        size(26)
        prompt("Fourteen String")
        special(SPC_MOD)
        interest(1)
        promptgroup("82 - Display 8-15")
    }
    field(FFST, DBF_STRING) {
        interest(1)
        special(SPC_MOD)
        promptgroup("82 - Display 8-15")
        prompt("Fifteen String")
        size(26)
        pp(TRUE)
    }
    field(ZRSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("State Zero Severity")
        promptgroup("71 - Alarm 0-7")
        interest(1)
    }
    field(ONSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("State One Severity")
        promptgroup("71 - Alarm 0-7")
        interest(1)
    }
    field(TWSV, DBF_MENU) {
        prompt("State Two Severity")
        promptgroup("71 - Alarm 0-7")
        interest(1)
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(THSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("State Three Severity")
        promptgroup("71 - Alarm 0-7")
        interest(1)
    }
    field(FRSV, DBF_MENU) {
        prompt("State Four Severity")
        interest(1)
        promptgroup("71 - Alarm 0-7")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(FVSV, DBF_MENU) {
        prompt("State Five Severity")
        promptgroup("71 - Alarm 0-7")
        interest(1)
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(SXSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("71 - Alarm 0-7")
        prompt("State Six Severity")
    }
    field(SVSV, DBF_MENU) {
        prompt("State Seven Severity")
        interest(1)
        promptgroup("71 - Alarm 0-7")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(EISV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("State Eight Severity")
        interest(1)
        promptgroup("72 - Alarm 8-15")
    }
    field(NISV, DBF_MENU) {
        prompt("State Nine Severity")
        interest(1)
        promptgroup("72 - Alarm 8-15")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(TESV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("State Ten Severity")
        promptgroup("72 - Alarm 8-15")
        interest(1)
    }
    field(ELSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        interest(1)
        promptgroup("72 - Alarm 8-15")
        prompt("State Eleven Severity")
    }
    field(TVSV, DBF_MENU) {
        promptgroup("72 - Alarm 8-15")
        interest(1)
        prompt("State Twelve Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(TTSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("State Thirteen Sevr")
        interest(1)
        promptgroup("72 - Alarm 8-15")
    }
    field(FTSV, DBF_MENU) {
        interest(1)
        promptgroup("72 - Alarm 8-15")
        prompt("State Fourteen Sevr")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(FFSV, DBF_MENU) {
        promptgroup("72 - Alarm 8-15")
        interest(1)
        prompt("State Fifteen Sevr")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(UNSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Unknown State Sevr")
    }
    field(COSV, DBF_MENU) {
        prompt("Change of State Sevr")
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(RVAL, DBF_ULONG) {
        pp(TRUE)
        prompt("Raw Value")
    }
    field(ORAW, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Raw Value")
    }
    field(RBV, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Readback Value")
    }
    field(ORBV, DBF_ULONG) {
        prompt("Prev Readback Value")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MASK, DBF_ULONG) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Hardware Mask")
    }
    field(MLST, DBF_USHORT) {
        prompt("Last Value Monitored")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LALM, DBF_USHORT) {
        prompt("Last Value Alarmed")
        special(SPC_NOMOD)
        interest(3)
    }
    field(SDEF, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(3)
        prompt("States Defined")
    }
    field(SHFT, DBF_USHORT) {
        prompt("Shift")
        promptgroup("50 - Output")
        interest(1)
    }
    field(SIOL, DBF_OUTLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Simulation Output Link")
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Simulation Mode Link")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        prompt("Simulation Mode")
        interest(1)
        special(SPC_MOD)
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(2)
        promptgroup("90 - Simulate")
        prompt("Simulation Mode Severity")
    }
    field(OLDSIMM, DBF_MENU) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Prev. Simulation Mode")
        menu(menuSimm)
    }
    field(SSCN, DBF_MENU) {
        prompt("Sim. Mode Scan")
        initial("65535")
        interest(1)
        promptgroup("90 - Simulate")
        menu(menuScan)
    }
    field(SDLY, DBF_DOUBLE) {
        interest(2)
        promptgroup("90 - Simulate")
        initial("-1.0")
        prompt("Sim. Mode Async Delay")
    }
    field(SIMPVT, DBF_NOACCESS) {
        extra("epicsCallback            *simpvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Sim. Mode Private")
    }
    field(IVOA, DBF_MENU) {
        interest(2)
        promptgroup("50 - Output")
        prompt("INVALID outpt action")
        menu(menuIvoa)
    }
    field(IVOV, DBF_USHORT) {
        prompt("INVALID output value")
        interest(2)
        promptgroup("50 - Output")
    }
}
device(mbbo, CONSTANT, devMbboSoft, "Soft Channel")
device(mbbo, CONSTANT, devMbboSoftRaw, "Raw Soft Channel")
device(mbbo, CONSTANT, devMbboSoftCallback, "Async Soft Channel")
recordtype(fanout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        prompt("Descriptor")
        size(41)
    }
    field(ASG, DBF_STRING) {
        size(29)
        prompt("Access Security Group")
        promptgroup("10 - Common")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        size(40)
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        promptgroup("20 - Scan")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        prompt("Alarm Status")
        special(SPC_NOMOD)
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        prompt("Alarm Message")
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        special(SPC_NOMOD)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NAMSG, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("New Alarm Message")
        size(40)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Alarm Ack Severity")
        special(SPC_NOMOD)
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        special(SPC_NOMOD)
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        prompt("Scheduling Priority")
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        special(SPC_NOMOD)
        extra("epicsUInt8          bkpt")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        promptgroup("10 - Common")
        interest(1)
        prompt("Undefined")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        prompt("Time")
    }
    field(UTAG, DBF_UINT64) {
        prompt("Time Tag")
        interest(3)
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_LONG) {
        prompt("Used to trigger")
        asl(ASL0)
        pp(TRUE)
    }
    field(SELM, DBF_MENU) {
        prompt("Select Mechanism")
        interest(1)
        promptgroup("30 - Action")
        menu(fanoutSELM)
    }
    field(SELN, DBF_USHORT) {
        initial("1")
        interest(1)
        prompt("Link Selection")
    }
    field(SELL, DBF_INLINK) {
        prompt("Link Selection Loc")
        promptgroup("30 - Action")
        interest(1)
    }
    field(OFFS, DBF_SHORT) {
        interest(1)
        promptgroup("30 - Action")
        initial("0")
        prompt("Offset for Specified")
    }
    field(SHFT, DBF_SHORT) {
        prompt("Shift for Mask mode")
        promptgroup("30 - Action")
        interest(1)
        initial("-1")
    }
    field(LNK0, DBF_FWDLINK) {
        prompt("Forward Link 0")
        interest(1)
        promptgroup("51 - Output 0-7")
    }
    field(LNK1, DBF_FWDLINK) {
        promptgroup("51 - Output 0-7")
        interest(1)
        prompt("Forward Link 1")
    }
    field(LNK2, DBF_FWDLINK) {
        interest(1)
        promptgroup("51 - Output 0-7")
        prompt("Forward Link 2")
    }
    field(LNK3, DBF_FWDLINK) {
        promptgroup("51 - Output 0-7")
        interest(1)
        prompt("Forward Link 3")
    }
    field(LNK4, DBF_FWDLINK) {
        prompt("Forward Link 4")
        promptgroup("51 - Output 0-7")
        interest(1)
    }
    field(LNK5, DBF_FWDLINK) {
        interest(1)
        promptgroup("51 - Output 0-7")
        prompt("Forward Link 5")
    }
    field(LNK6, DBF_FWDLINK) {
        prompt("Forward Link 6")
        promptgroup("51 - Output 0-7")
        interest(1)
    }
    field(LNK7, DBF_FWDLINK) {
        promptgroup("51 - Output 0-7")
        interest(1)
        prompt("Forward Link 7")
    }
    field(LNK8, DBF_FWDLINK) {
        prompt("Forward Link 8")
        interest(1)
        promptgroup("52 - Output 8-F")
    }
    field(LNK9, DBF_FWDLINK) {
        prompt("Forward Link 9")
        interest(1)
        promptgroup("52 - Output 8-F")
    }
    field(LNKA, DBF_FWDLINK) {
        prompt("Forward Link 10")
        promptgroup("52 - Output 8-F")
        interest(1)
    }
    field(LNKB, DBF_FWDLINK) {
        prompt("Forward Link 11")
        promptgroup("52 - Output 8-F")
        interest(1)
    }
    field(LNKC, DBF_FWDLINK) {
        promptgroup("52 - Output 8-F")
        interest(1)
        prompt("Forward Link 12")
    }
    field(LNKD, DBF_FWDLINK) {
        prompt("Forward Link 13")
        interest(1)
        promptgroup("52 - Output 8-F")
    }
    field(LNKE, DBF_FWDLINK) {
        prompt("Forward Link 14")
        interest(1)
        promptgroup("52 - Output 8-F")
    }
    field(LNKF, DBF_FWDLINK) {
        prompt("Forward Link 15")
        interest(1)
        promptgroup("52 - Output 8-F")
    }
}
recordtype(seq) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        size(29)
        special(SPC_AS)
        promptgroup("10 - Common")
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        size(40)
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        interest(4)
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        interest(4)
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        special(SPC_NOMOD)
        initial("UDF")
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("Alarm Message")
        size(40)
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
    }
    field(NAMSG, DBF_STRING) {
        size(40)
        prompt("New Alarm Message")
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Alarm Ack Severity")
        special(SPC_NOMOD)
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        special(SPC_NOMOD)
        interest(2)
        promptgroup("70 - Alarm")
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        special(SPC_NOMOD)
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        promptgroup("10 - Common")
        initial("1")
        prompt("Undefined")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        prompt("Time")
    }
    field(UTAG, DBF_UINT64) {
        prompt("Time Tag")
        special(SPC_NOMOD)
        interest(3)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_LONG) {
        asl(ASL0)
        prompt("Used to trigger")
        pp(TRUE)
    }
    field(SELM, DBF_MENU) {
        menu(seqSELM)
        interest(1)
        promptgroup("30 - Action")
        prompt("Select Mechanism")
    }
    field(SELN, DBF_USHORT) {
        prompt("Link Selection")
        initial("1")
        interest(1)
    }
    field(SELL, DBF_INLINK) {
        promptgroup("30 - Action")
        interest(1)
        prompt("Link Selection Loc")
    }
    field(OFFS, DBF_SHORT) {
        initial("0")
        interest(1)
        promptgroup("30 - Action")
        prompt("Offset for Specified")
    }
    field(SHFT, DBF_SHORT) {
        initial("-1")
        promptgroup("30 - Action")
        interest(1)
        prompt("Shift for Mask mode")
    }
    field(OLDN, DBF_USHORT) {
        interest(4)
        prompt("Old Selection")
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        promptgroup("80 - Display")
        interest(1)
    }
    field(DLY0, DBF_DOUBLE) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Delay 0")
    }
    field(DOL0, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Input link 0")
    }
    field(DO0, DBF_DOUBLE) {
        prompt("Value 0")
        interest(1)
    }
    field(LNK0, DBF_OUTLINK) {
        prompt("Output Link 0")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DLY1, DBF_DOUBLE) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Delay 1")
    }
    field(DOL1, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Input link1")
    }
    field(DO1, DBF_DOUBLE) {
        prompt("Value 1")
        interest(1)
    }
    field(LNK1, DBF_OUTLINK) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Output Link 1")
    }
    field(DLY2, DBF_DOUBLE) {
        promptgroup("41 - Link 0-7")
        interest(1)
        prompt("Delay 2")
    }
    field(DOL2, DBF_INLINK) {
        prompt("Input link 2")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DO2, DBF_DOUBLE) {
        prompt("Value 2")
        interest(1)
    }
    field(LNK2, DBF_OUTLINK) {
        prompt("Output Link 2")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DLY3, DBF_DOUBLE) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Delay 3")
    }
    field(DOL3, DBF_INLINK) {
        prompt("Input link 3")
        interest(1)
        promptgroup("41 - Link 0-7")
    }
    field(DO3, DBF_DOUBLE) {
        interest(1)
        prompt("Value 3")
    }
    field(LNK3, DBF_OUTLINK) {
        prompt("Output Link 3")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DLY4, DBF_DOUBLE) {
        promptgroup("41 - Link 0-7")
        interest(1)
        prompt("Delay 4")
    }
    field(DOL4, DBF_INLINK) {
        prompt("Input link 4")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DO4, DBF_DOUBLE) {
        prompt("Value 4")
        interest(1)
    }
    field(LNK4, DBF_OUTLINK) {
        prompt("Output Link 4")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DLY5, DBF_DOUBLE) {
        prompt("Delay 5")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DOL5, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Input link 5")
    }
    field(DO5, DBF_DOUBLE) {
        prompt("Value 5")
        interest(1)
    }
    field(LNK5, DBF_OUTLINK) {
        prompt("Output Link 5")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DLY6, DBF_DOUBLE) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Delay 6")
    }
    field(DOL6, DBF_INLINK) {
        promptgroup("41 - Link 0-7")
        interest(1)
        prompt("Input link 6")
    }
    field(DO6, DBF_DOUBLE) {
        prompt("Value 6")
        interest(1)
    }
    field(LNK6, DBF_OUTLINK) {
        prompt("Output Link 6")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DLY7, DBF_DOUBLE) {
        promptgroup("41 - Link 0-7")
        interest(1)
        prompt("Delay 7")
    }
    field(DOL7, DBF_INLINK) {
        promptgroup("41 - Link 0-7")
        interest(1)
        prompt("Input link 7")
    }
    field(DO7, DBF_DOUBLE) {
        prompt("Value 7")
        interest(1)
    }
    field(LNK7, DBF_OUTLINK) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Output Link 7")
    }
    field(DLY8, DBF_DOUBLE) {
        promptgroup("42 - Link 8-F")
        interest(1)
        prompt("Delay 8")
    }
    field(DOL8, DBF_INLINK) {
        prompt("Input link 8")
        promptgroup("42 - Link 8-F")
        interest(1)
    }
    field(DO8, DBF_DOUBLE) {
        prompt("Value 8")
        interest(1)
    }
    field(LNK8, DBF_OUTLINK) {
        prompt("Output Link 8")
        promptgroup("42 - Link 8-F")
        interest(1)
    }
    field(DLY9, DBF_DOUBLE) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Delay 9")
    }
    field(DOL9, DBF_INLINK) {
        promptgroup("42 - Link 8-F")
        interest(1)
        prompt("Input link 9")
    }
    field(DO9, DBF_DOUBLE) {
        prompt("Value 9")
        interest(1)
    }
    field(LNK9, DBF_OUTLINK) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Output Link 9")
    }
    field(DLYA, DBF_DOUBLE) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Delay 10")
    }
    field(DOLA, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Input link 10")
    }
    field(DOA, DBF_DOUBLE) {
        prompt("Value 10")
        interest(1)
    }
    field(LNKA, DBF_OUTLINK) {
        promptgroup("42 - Link 8-F")
        interest(1)
        prompt("Output Link 10")
    }
    field(DLYB, DBF_DOUBLE) {
        prompt("Delay 11")
        interest(1)
        promptgroup("42 - Link 8-F")
    }
    field(DOLB, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Input link 11")
    }
    field(DOB, DBF_DOUBLE) {
        interest(1)
        prompt("Value 11")
    }
    field(LNKB, DBF_OUTLINK) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Output Link 11")
    }
    field(DLYC, DBF_DOUBLE) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Delay 12")
    }
    field(DOLC, DBF_INLINK) {
        prompt("Input link 12")
        interest(1)
        promptgroup("42 - Link 8-F")
    }
    field(DOC, DBF_DOUBLE) {
        interest(1)
        prompt("Value 12")
    }
    field(LNKC, DBF_OUTLINK) {
        prompt("Output Link 12")
        promptgroup("42 - Link 8-F")
        interest(1)
    }
    field(DLYD, DBF_DOUBLE) {
        prompt("Delay 13")
        interest(1)
        promptgroup("42 - Link 8-F")
    }
    field(DOLD, DBF_INLINK) {
        promptgroup("42 - Link 8-F")
        interest(1)
        prompt("Input link 13")
    }
    field(DOD, DBF_DOUBLE) {
        prompt("Value 13")
        interest(1)
    }
    field(LNKD, DBF_OUTLINK) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Output Link 13")
    }
    field(DLYE, DBF_DOUBLE) {
        prompt("Delay 14")
        interest(1)
        promptgroup("42 - Link 8-F")
    }
    field(DOLE, DBF_INLINK) {
        prompt("Input link 14")
        interest(1)
        promptgroup("42 - Link 8-F")
    }
    field(DOE, DBF_DOUBLE) {
        prompt("Value 14")
        interest(1)
    }
    field(LNKE, DBF_OUTLINK) {
        promptgroup("42 - Link 8-F")
        interest(1)
        prompt("Output Link 14")
    }
    field(DLYF, DBF_DOUBLE) {
        prompt("Delay 15")
        promptgroup("42 - Link 8-F")
        interest(1)
    }
    field(DOLF, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Input link 15")
    }
    field(DOF, DBF_DOUBLE) {
        prompt("Value 15")
        interest(1)
    }
    field(LNKF, DBF_OUTLINK) {
        prompt("Output Link 15")
        interest(1)
        promptgroup("42 - Link 8-F")
    }
}
recordtype(int64out) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct int64outRecord;
    %typedef struct int64outdset {
    %    dset common;
    %    long (*write_int64out)(struct int64outRecord *prec);
    %} int64outdset;
    %#define HAS_int64outdset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        size(41)
        prompt("Descriptor")
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        special(SPC_AS)
        size(29)
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        prompt("Event Name")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        extra("ELLLIST             bklnk")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(AMSG, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("Alarm Message")
        size(40)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        special(SPC_NOMOD)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(NAMSG, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("New Alarm Message")
        size(40)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        special(SPC_NOMOD)
        interest(2)
        promptgroup("70 - Alarm")
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        special(SPC_NOMOD)
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        extra("struct typed_rset   *rset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsUInt8          bkpt")
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        initial("1")
        interest(1)
        promptgroup("10 - Common")
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
        prompt("Time")
    }
    field(UTAG, DBF_UINT64) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Time Tag")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_INT64) {
        pp(TRUE)
        asl(ASL0)
        prompt("Desired Output")
        promptgroup("50 - Output")
    }
    field(OUT, DBF_OUTLINK) {
        prompt("Output Specification")
        interest(1)
        promptgroup("50 - Output")
    }
    field(DOL, DBF_INLINK) {
        prompt("Desired Output Loc")
        interest(1)
        promptgroup("40 - Input")
    }
    field(OMSL, DBF_MENU) {
        menu(menuOmsl)
        promptgroup("50 - Output")
        interest(1)
        prompt("Output Mode Select")
    }
    field(EGU, DBF_STRING) {
        prompt("Units name")
        interest(1)
        promptgroup("80 - Display")
        prop(YES)
        size(16)
    }
    field(DRVH, DBF_INT64) {
        prop(YES)
        pp(TRUE)
        interest(1)
        promptgroup("30 - Action")
        prompt("Drive High Limit")
    }
    field(DRVL, DBF_INT64) {
        prop(YES)
        pp(TRUE)
        interest(1)
        promptgroup("30 - Action")
        prompt("Drive Low Limit")
    }
    field(HOPR, DBF_INT64) {
        interest(1)
        promptgroup("80 - Display")
        prompt("High Operating Range")
        prop(YES)
    }
    field(LOPR, DBF_INT64) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("Low Operating Range")
    }
    field(HIHI, DBF_INT64) {
        pp(TRUE)
        prop(YES)
        prompt("Hihi Alarm Limit")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LOLO, DBF_INT64) {
        pp(TRUE)
        prop(YES)
        prompt("Lolo Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(HIGH, DBF_INT64) {
        prop(YES)
        pp(TRUE)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("High Alarm Limit")
    }
    field(LOW, DBF_INT64) {
        prompt("Low Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
        pp(TRUE)
        prop(YES)
    }
    field(HHSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Hihi Severity")
    }
    field(LLSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Lolo Severity")
    }
    field(HSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("High Severity")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LSV, DBF_MENU) {
        prompt("Low Severity")
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(HYST, DBF_INT64) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Alarm Deadband")
    }
    field(ADEL, DBF_INT64) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Archive Deadband")
    }
    field(MDEL, DBF_INT64) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Monitor Deadband")
    }
    field(LALM, DBF_INT64) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Value Alarmed")
    }
    field(ALST, DBF_INT64) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Archived")
    }
    field(MLST, DBF_INT64) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Val Monitored")
    }
    field(SIOL, DBF_OUTLINK) {
        prompt("Simulation Output Link")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Simulation Mode Link")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        prompt("Simulation Mode")
        special(SPC_MOD)
        interest(1)
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Simulation Mode Severity")
        interest(2)
        promptgroup("90 - Simulate")
    }
    field(OLDSIMM, DBF_MENU) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Prev. Simulation Mode")
        menu(menuSimm)
    }
    field(SSCN, DBF_MENU) {
        prompt("Sim. Mode Scan")
        initial("65535")
        interest(1)
        promptgroup("90 - Simulate")
        menu(menuScan)
    }
    field(SDLY, DBF_DOUBLE) {
        prompt("Sim. Mode Async Delay")
        interest(2)
        promptgroup("90 - Simulate")
        initial("-1.0")
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        special(SPC_NOMOD)
        extra("epicsCallback            *simpvt")
        interest(4)
    }
    field(IVOA, DBF_MENU) {
        prompt("INVALID output action")
        promptgroup("50 - Output")
        interest(2)
        menu(menuIvoa)
    }
    field(IVOV, DBF_INT64) {
        prompt("INVALID output value")
        interest(2)
        promptgroup("50 - Output")
    }
}
device(int64out, CONSTANT, devI64outSoft, "Soft Channel")
device(int64out, CONSTANT, devI64outSoftCallback, "Async Soft Channel")
recordtype(xxx) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        size(41)
        prompt("Descriptor")
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        size(29)
        prompt("Access Security Group")
        promptgroup("10 - Common")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Event Name")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        promptgroup("20 - Scan")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        interest(4)
    }
    field(BKLNK, DBF_NOACCESS) {
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        interest(4)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        prompt("Alarm Status")
        special(SPC_NOMOD)
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
        special(SPC_NOMOD)
    }
    field(AMSG, DBF_STRING) {
        prompt("Alarm Message")
        special(SPC_NOMOD)
        size(40)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("New Alarm Severity")
        special(SPC_NOMOD)
        interest(2)
    }
    field(NAMSG, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        prompt("New Alarm Message")
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        special(SPC_NOMOD)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        initial("1")
        interest(1)
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        interest(2)
    }
    field(UTAG, DBF_UINT64) {
        prompt("Time Tag")
        interest(3)
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_DOUBLE) {
        pp(TRUE)
        asl(ASL0)
        prompt("Current EGU Value")
        promptgroup("40 - Input")
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("40 - Input")
    }
    field(PREC, DBF_SHORT) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Display Precision")
    }
    field(EGU, DBF_STRING) {
        size(16)
        interest(1)
        promptgroup("80 - Display")
        prompt("Engineering Units")
    }
    field(HOPR, DBF_FLOAT) {
        promptgroup("80 - Display")
        interest(1)
        prompt("High Operating Range")
    }
    field(LOPR, DBF_FLOAT) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Low Operating Range")
    }
    field(HIHI, DBF_FLOAT) {
        pp(TRUE)
        prompt("Hihi Alarm Limit")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LOLO, DBF_FLOAT) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Lolo Alarm Limit")
    }
    field(HIGH, DBF_FLOAT) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("High Alarm Limit")
        pp(TRUE)
    }
    field(LOW, DBF_FLOAT) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Low Alarm Limit")
        pp(TRUE)
    }
    field(HHSV, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Hihi Severity")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(LLSV, DBF_MENU) {
        prompt("Lolo Severity")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(HSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("High Severity")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("Low Severity")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(HYST, DBF_DOUBLE) {
        prompt("Alarm Deadband")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(ADEL, DBF_DOUBLE) {
        prompt("Archive Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(MDEL, DBF_DOUBLE) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Monitor Deadband")
    }
    field(LALM, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Alarmed")
    }
    field(ALST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Archived")
    }
    field(MLST, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Val Monitored")
    }
}
device(xxx, CONSTANT, devXxxSoft, "Soft Channel")
link(pva, lsetPVA)
link(calc, lnkCalcIf)
link(trace, lnkTraceIf)
link(state, lnkStateIf)
link(const, lnkConstIf)
link(debug, lnkDebugIf)
registrar(syncInitialize)
registrar(QSRVRegistrar)
registrar(rsrvRegistrar)
registrar(helloRegister)
registrar(installPVAAddLinkHook)
registrar(initTraceRegister)
registrar(utagInitialize)
registrar(registerStartPVAServer)
registrar(tsInitialize)
registrar(dbndInitialize)
registrar(decInitialize)
registrar(arrInitialize)
registrar(asSub)
registrar(refTrackRegistrar)
function(mySubInit)
function(myAsubProcess)
function(QSRV_image_demo)
function(mySubProcess)
function(myAsubInit)
variable(calcoutODLYprecision, int)
variable(dbConvertStrict, int)
variable(calcoutODLYlimit, double)
variable(boHIGHlimit, double)
variable(asCaDebug, int)
variable(logClientDebug, int)
variable(histogramSDELprecision, int)
variable(dbThreadRealtimeLock, int)
variable(lnkDebug_debug, int)
variable(dbRecordsAbcSorted, int)
variable(dbTemplateMaxVars, int)
variable(atExitDebug, int)
variable(pvaLinkNWorkers, int)
variable(seqDLYprecision, int)
variable(dbRecordsOnceOnly, int)
variable(dbAccessDebugPUTF, int)
variable(seqDLYlimit, double)
variable(CASDEBUG, int)
variable(PDBProviderDebug, int)
variable(dbBptNotMonotonic, int)
variable(dbJLinkDebug, int)
variable(boHIGHprecision, int)
variable(mySubDebug, int)
variable(callbackParallelThreadsDefault, int)
variable(dbQuietMacroWarnings, int)
